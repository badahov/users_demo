{"version":3,"sources":["webpack:///./modules/login/store/middlewares/auth.js","webpack:///./modules/login/store/reducers/auth.js","webpack:///./modules/login/store/state.js","webpack:///./modules/login/config.js","webpack:///./modules/login/store/api/auth.js","webpack:///./modules/login/store/actions/auth.js","webpack:///./modules/login/component/login.jsx","webpack:///./modules/login/main.jsx"],"names":["middleware","store","next","action","type","startAction","_slicedToArray","actions","dispatch","promise","onload","result","JSON","parse","this","responseText","status","config","message","error","page","home","onerror","_action$actions2","startCurrentUserAction","successCurrentUserAction","data","actionReducers","state","arguments","length","undefined","includes","combineForms","current","forgot","createStoreWithMiddleware","applyMiddleware","auth","thunk","createStore","combineReducers","reducers","login_config","model","api","apiAuthLogin","url","appConfig","domain","server","setPoint","formData","FormData","key","append","xhr","XMLHttpRequest","XDomainRequest","open","withCredentials","send","authLogin","query","Content","Layout","Login","confirmDirty","autoCompleteResult","e","preventDefault","_this","props","form","validateFieldsAndScroll","err","values","Promise","resolve","setTimeout","rule","value","callback","validateFields","force","React","Component","getFieldDecorator","react_default","a","createElement","layout","className","Helmet_default","title","row","col","span","offset","es_form","_extends","wrapperCol","xs","sm","md","lg","onSubmit","handleSubmit","Item","rules","required","whitespace","input","placeholder","validator","validateToNextPassword","Password","es_button","htmlType","WrappedRegistrationForm","Form","create","name","connect","login","bindActionCreators","__webpack_require__","d","__webpack_exports__","main_Inbox","Inbox","es","localStore"],"mappings":"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","file":"11.js?hash=afe8e30ca18a678820b9","sourcesContent":["'use strict';\n\nimport config from 'config';\n\nconst middleware = store => next => action => {\n    switch (action.type) {\n        case 'AUTH_LOGIN':\n            const [startAction] = action.actions;\n\n            store.dispatch({\n                type: startAction\n            });\n\n            action.promise.onload = function() {\n                let result = JSON.parse(this.responseText);\n\n                switch (action.promise.status) {\n                    case 403:\n                        config.message.error(config.error[action.promise.status]);\n                        break;\n                    case 401:\n                        config.message.error(config.error[action.promise.status]);\n                        break;\n                    case 200:\n                        if (result.status !== 'error') {\n                            config.page.home();\n                        }\n                        break;\n                }\n            };\n\n            action.promise.onerror = function() {\n                config.message.error('Error');\n            };\n            break;\n        case 'AUTH_CURRENT_USER':\n            const [startCurrentUserAction, successCurrentUserAction] = action.actions;\n\n            store.dispatch({\n                type: startCurrentUserAction\n            });\n\n            action.promise.onload = function() {\n                let data = JSON.parse(this.responseText);\n\n                switch (action.promise.status) {\n                    case 403:\n                        config.message.error(config.error[action.promise.status]);\n                        break;\n                    case 401:\n                        config.message.error(config.error[action.promise.status]);\n                        break;\n                    case 200:\n                        if (data.status !== 'error') {\n                            store.dispatch({\n                                type: successCurrentUserAction,\n                                data: data.result\n                            });\n                        }\n                        break;\n                }\n            };\n            break;\n        default:\n            return next(action);\n            break;\n    }\n\n};\n\nexport default middleware;\n","'use strict';\n\nimport {combineForms} from 'react-redux-form';\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineForms({\n    current: actionReducers([\n        'AUTH_CURRENT_USER_LOADED'\n    ]),\n    forgot: actionReducers([\n        'AUTH_AUTH_FORGOT_PASSWORD_LOADED'\n    ]),\n}, 'auth');\n","'use strict';\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n//import createLogger from 'redux-logger';\n\nimport auth   from './middlewares/auth';\n\n//Найдет и загрузит все reducers из папки\nimport * as reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(\n    auth,\n    thunk//, createLogger()\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers(reducers));\n","'use strict';\n\nexport default {\n    model: 'auth',\n    api: {\n        auth: 'auth/login',\n    }\n}","'use strict';\n\nimport appConfig from \"config\";\nimport config from \"../../config\";\n\nexport function apiAuthLogin(data)\n{\n    const url = appConfig.domain.auth + appConfig.server.setPoint + config.api.auth;\n\n    const formData = new FormData();\n\n    for (let key in data) {\n        formData.append(key, data[key] );\n    }\n\n    const XHR = (\"onload\" in new XMLHttpRequest()) ? XMLHttpRequest : XDomainRequest;\n\n    const xhr = new XHR();\n\n    xhr.open('POST', url, true);\n    xhr.withCredentials = true;\n\n    xhr.send( formData );\n\n    return xhr;\n}\n","'use strict';\n\nimport {apiAuthLogin} from '../api/auth';\n\nexport function authLogin(query) {\n    return {\n       type: 'AUTH_LOGIN',\n       actions: ['AUTH_LOGIN_LOADING', 'AUTH_LOGIN_LOADED', 'AUTH_LOGIN_LOAD_FAILURE'],\n       promise: apiAuthLogin(query),\n    };\n}\n","'use strict';\n\nimport React from 'react';\nimport Helmet from \"react-helmet\";\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { authLogin } from '../store/actions/auth';\n\nimport {\n    Layout,\n    Form,\n    Input,\n    Row,\n    Col,\n    Button\n} from 'antd';\n\nconst { Content } = Layout;\n\nclass Login extends React.Component\n{\n    state = {\n        confirmDirty: false,\n        autoCompleteResult: [],\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                new Promise((resolve) => {\n                    this.props.authLogin( values );\n                    setTimeout(() => { resolve(true); }, 1000);\n                });\n            }\n        });\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 24 },\n                md: { span: 14, offset: 5 },\n                lg: { span: 10, offset: 7 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 24,\n                    offset: 0,\n                },\n            },\n        };\n\n        return (\n            <Layout className=\"auth\">\n                <Helmet title=\"Авторизация\" />\n                <Content>\n                    <Row className=\"form-box animated fadeInDown\">\n                        <Col span={10} offset={7}>\n                            <h1 className=\"logo-name\">USER</h1>\n                            <h3>Добро пожаловать</h3>\n                        </Col>\n                        <Col span={10} offset={7} >\n                            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                                <Form.Item>\n                                    {getFieldDecorator('login', {\n                                        rules: [{ required: true, message: 'Впишите логин', whitespace: true }],\n                                    })(<Input placeholder=\"Логин\" />)}\n                                </Form.Item>\n\n                                <Form.Item>\n                                    {getFieldDecorator('password', {\n                                        rules: [\n                                            {\n                                                required: true,\n                                                message: 'Впишите пароль',\n                                            },\n                                            {\n                                                validator: this.validateToNextPassword,\n                                            },\n                                        ],\n                                    })(<Input.Password placeholder=\"Пароль\" />)}\n                                </Form.Item>\n\n                                <Form.Item {...tailFormItemLayout}>\n                                    <Button type=\"primary\" htmlType=\"submit\">\n                                        Войти\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Content>\n            </Layout>\n        );\n    }\n}\n\nconst WrappedRegistrationForm = Form.create({name: 'register'})(Login);\n\nexport default connect(\n    (state) => { return { login: state.auth.login }; },\n    (dispatch) => bindActionCreators({authLogin,dispatch}, dispatch)\n)(WrappedRegistrationForm);\n","'use strict';\n\nimport React, {Component} from 'react';\nimport {Provider} from 'react-redux';\n\nimport localStore from './store/state';\n\nimport Login from './component/login';\n\nimport './less/login.less';\n\nexport default class Inbox extends Component {\n    render() {\n        return (\n            <Provider store={localStore}>\n                <Login />\n            </Provider>\n        );\n    }\n}\n"],"sourceRoot":""}
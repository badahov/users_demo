{"version":3,"sources":["webpack:///./modules/edit/route.js","webpack:///./modules/edit/config.js","webpack:///./modules/edit/store/middlewares/user.js","webpack:///./modules/edit/store/reducers/user.js","webpack:///./modules/edit/store/state.js","webpack:///./modules/edit/store/api/user.js","webpack:///./modules/edit/store/actions/user.js","webpack:///./modules/edit/component/page/data/main.jsx","webpack:///./modules/edit/component/page/password/main.jsx","webpack:///./modules/edit/component/page/roles/main.jsx","webpack:///./modules/edit/component/main/header_page.jsx","webpack:///./modules/edit/component/main/menu_left.jsx","webpack:///./modules/edit/component/main/index.jsx","webpack:///./modules/edit/main.jsx"],"names":["path","getComponent","location","cb","require","model","api","item","edit","current","middleware","store","next","action","config","includes","type","middlewareAction","MODEL","toUpperCase","actionReducers","status","state","data","combineReducers","createStoreWithMiddleware","applyMiddleware","user","thunk","createStore","reducers","modelEdit","filter","Query","pointApi","result","then","json","Function","userItem","query","actions","promise","get","userCurrent","domain","appConfig","auth","userEdit","formItemLayout","labelCol","xs","span","sm","wrapperCol","UserDataFormModel","e","preventDefault","props","form","validateFieldsAndScroll","err","values","operator_id","Number","user_id","actionEdit","value","target","setState","confirmDirty","getFieldDecorator","this","isLoad","tip","size","spinning","onSubmit","handleSubmit","gutter","style","marginBottom","Item","label","hasFeedback","rules","required","message","width","min","placeholder","valuePropName","position","left","bottom","borderTop","padding","background","textAlign","htmlType","Component","Form","create","name","mapPropsToFields","operator_code","createFormField","operator_name","operator_login","is_admin","is_reprint_admin","UserPasswordFormModel","confirm","rule","callback","getFieldValue","validateFields","force","validator","validateToNextPassword","Password","compareToFirstPassword","onBlur","handleConfirmBlur","Option","Select","UserRolesFormModel","roles","map","push","id","selected","nextProps","nextState","options","send","option","key","title","mode","onChange","handleSelectedChange","String","Header","Layout","HeaderPage","className","collapsed","onClick","toggle","subTitle","extra","handleClick","to","React","Sider","MenuLeft","selectedKey","page","trigger","collapsible","theme","defaultSelectedKeys","Content","Edit","loading","actionCurrent","actionUser","params","wrappedComponentRef","connect","access","dispatch","bindActionCreators","EditMain","UserStore","header"],"mappings":"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","file":"edit.js?hash=52488d3b7e357210db6a","sourcesContent":["'use strict';\n\nexport default {\n    path: 'user/edit/:user_id/:page',\n    getComponent(location, cb) {\n        require.ensure([], (require) => {\n            cb(null, require('./main').default);\n        });\n    }\n};","'use strict';\n\nexport default {\n    model: 'edit',\n    api: {\n        item:    'interface-users/user',\n        edit:    'interface-users/user-edit',\n        current: 'interface-users/user-current'\n    },\n    middleware: [\n        'USER_ITEM',\n        'USER_CURRENT',\n    ]\n}\n","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\n\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport {combineReducers} from 'redux';\n\nconst MODEL = 'user'.model.toUpperCase();\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n    action: actionReducers([\n        `${MODEL}_ITEM_LOADING`,\n    ]),\n    current: actionReducers([\n        `${MODEL}_CURRENT_LOADED`,\n    ]),\n    item: actionReducers([\n        `${MODEL}_ITEM_LOADED`,\n    ])\n});\n","'use strict';\n\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n//import {createLogger} from 'redux-logger';\n\nimport user from './middlewares/user';\n\n//Найдет и загрузит все reducers из папки\nimport * as reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(\n    user,\n    thunk//, createLogger({collapsed:true})\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers(reducers));\n","'use strict';\n\nimport {Query} from 'modules/app/core';\nimport appConfig from \"config\";\nimport config from \"../../config\";\n\nconst api = config.api;\n\nexport function modelUser(data)\n{\n    let ReactQueryObject = new Query({\n        pointApi: api.item,\n        type: Query.get,\n        data: data,\n    });\n\n    return ReactQueryObject.result();\n}\n\nexport function modelCurrentUser()\n{\n    let ReactQueryObject = new Query({\n        domain: appConfig.domain.auth,\n        type: Query.get,\n        pointApi: api.current,\n    });\n\n    return ReactQueryObject.result();\n}\n\nexport function modelEdit(data, filter, action)\n{\n    let ReactQueryObject = new Query({\n        pointApi: api.edit,\n        data: data\n    });\n\n    return ReactQueryObject.result().then((json) => {\n        if (json) {\n            if (action instanceof Function) {\n                action(filter);\n            }\n        }\n    });\n}\n","'use strict';\n\nimport {modelUser, modelEdit, modelCurrentUser} from '../api/user';\n\nconst MODEL = 'user'.toUpperCase();\n\nexport function userItem(query) {\n    return {\n        type: `${MODEL}_ITEM`,\n        actions: [`${MODEL}_ITEM_LOADING`, `${MODEL}_ITEM_LOADED`, `${MODEL}_ITEM_LOAD_FAILURE`],\n        promise: modelUser(query),\n    };\n}\n\nexport function userCurrent() {\n    return {\n        type: `${MODEL}_CURRENT`,\n        actions: [`${MODEL}_CURRENT_LOADING`, `${MODEL}_CURRENT_LOADED`, `${MODEL}_CURRENT_LOAD_FAILURE`],\n        promise: modelCurrentUser(),\n    };\n}\n\nexport function userEdit(data, filter = null, action = null) {\n    return {\n        type: `${MODEL}_EDIT`,\n        actions: [`${MODEL}_EDIT_LOADED`],\n        model: modelEdit(data, filter, action),\n    };\n}\n","'use strict';\n\nimport React, { Component } from \"react\";\n\nimport { Form, Button, Row, Input, InputNumber, Switch, Col, Spin } from 'antd';\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n    },\n};\n\nclass UserDataFormModel extends Component\n{\n    static defaultProps = {\n        item: null,\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                values.operator_id = Number(this.props.user_id);\n\n                this.props.actionEdit(values);\n            }\n        });\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        let isLoad = (this.props.item) ? false : true;\n\n        return (\n            <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n                <Row>\n                    <Col span={24}>\n                        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                            <Row gutter={16} style={{marginBottom:'50px'}}>\n                                <Form.Item label=\"Код\" hasFeedback>\n                                    {getFieldDecorator('operator_code', {\n                                        rules: [\n                                            { required: true, message: 'Пожалуйста, ввидите код пользователя' }\n                                        ],\n                                    })(<InputNumber style={{ width: '65%' }} min={0} placeholder=\"Код пользователя\" />)}\n                                </Form.Item>\n\n                                <Form.Item label=\"Имя\" hasFeedback>\n                                    {getFieldDecorator('operator_name', {\n                                        rules: [\n                                            { required: true, message: 'Пожалуйста, ввидите имя пользователя' }\n                                        ],\n                                    })(<Input placeholder=\"Имя пользователя\" />)}\n                                </Form.Item>\n\n                                <Form.Item label=\"Логин\" hasFeedback>\n                                    {getFieldDecorator('operator_login', {\n                                        rules: [\n                                            { required: true, message: 'Пожалуйста, ввидите логин пользователя' }\n                                        ],\n                                    })(<Input placeholder=\"Логин пользователя\" />)}\n                                </Form.Item>\n\n                                <Form.Item label=\"Администратор\">\n                                    {getFieldDecorator('is_admin', { valuePropName: 'checked' })(<Switch />)}\n                                </Form.Item>\n\n                                <Form.Item label=\"Перепечать\">\n                                    {getFieldDecorator('is_reprint_admin', { valuePropName: 'checked' })(<Switch />)}\n                                </Form.Item>\n                            </Row>\n\n                            <Row\n                                style={{\n                                    position: 'absolute',\n                                    left: 0,\n                                    bottom: 0,\n                                    width: '100%',\n                                    borderTop: '1px solid #e9e9e9',\n                                    padding: '10px 16px 0 10px',\n                                    background: '#fff',\n                                    textAlign: 'left',\n                                }}\n                            >\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Изменить\n                                </Button>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n            </Spin>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_data_form',\n    mapPropsToFields(props) {\n        return {\n            operator_code: Form.createFormField({\n                ...props.item.operator_code,\n                value: props.item.operator_code,\n            }),\n            operator_name: Form.createFormField({\n                ...props.item.operator_name,\n                value: props.item.operator_name,\n            }),\n            operator_login: Form.createFormField({\n                ...props.item.operator_login,\n                value: props.item.operator_login,\n            }),\n            is_admin: Form.createFormField({\n                ...props.item.is_admin,\n                value: props.item.is_admin,\n            }),\n            is_reprint_admin: Form.createFormField({\n                ...props.item.is_reprint_admin,\n                value: props.item.is_reprint_admin,\n            }),\n        };\n    },\n})(UserDataFormModel);\n","'use strict';\n\nimport React, { Component } from \"react\";\n\nimport { Form, Button, Row, Input, Col } from 'antd';\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n    },\n};\n\nclass UserPasswordFormModel extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            confirmDirty: false\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                delete values.confirm;\n\n                values.operator_id = Number(this.props.user_id);\n\n                this.props.actionEdit(values);\n            }\n        });\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Пароли не совпадают!');\n        } else {\n            callback();\n        }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Row>\n                <Col span={24}>\n                    <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                        <Row gutter={16} style={{marginBottom:'50px'}}>\n                            <Form.Item label=\"Пароль\" hasFeedback>\n                                {getFieldDecorator('password', {\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: 'Пожалуйста, введите пароль!',\n                                        },\n                                        {\n                                            validator: this.validateToNextPassword,\n                                        },\n                                    ],\n                                })(<Input.Password />)}\n                            </Form.Item>\n                            <Form.Item label=\"Повторить пароль\" hasFeedback>\n                                {getFieldDecorator('confirm', {\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: 'Пожалуйста, повторите пароль!',\n                                        },\n                                        {\n                                            validator: this.compareToFirstPassword,\n                                        },\n                                    ],\n                                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n                            </Form.Item>\n                        </Row>\n                        <Row\n                            style={{\n                                position: 'absolute',\n                                left: 0,\n                                bottom: 0,\n                                width: '100%',\n                                borderTop: '1px solid #e9e9e9',\n                                padding: '10px 16px 0 10px',\n                                background: '#fff',\n                                textAlign: 'left',\n                            }}\n                        >\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Изменить\n                            </Button>\n                        </Row>\n                    </Form>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_password_form',\n    mapPropsToFields() {\n        return null;\n    },\n})(UserPasswordFormModel);\n","'use strict';\n\nimport React, { Component } from \"react\";\n\nimport { Form, Button, Row, Select, Col } from 'antd';\nconst { Option } = Select;\n\nimport {Query} from 'modules/app/core';\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 2 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 15 },\n    },\n};\n\nclass UserRolesFormModel extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        let ReactQueryObject = new Query({\n            pointApi: 'interface-users/role-select',\n        });\n\n        ReactQueryObject.send().then((result) => {\n            let option = [];\n            result.map((item) => {\n                option.push(<Option key={item.id}>{item.title}</Option>);\n            });\n\n            this.setState({\n                options: option,\n            });\n        });\n\n        this.state = {\n            options: [],\n            selected: []\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                values.operator_id = Number(this.props.user_id);\n\n                let rules = [];\n                values.roles.map((item) => {\n                    rules.push({id: Number(item)});\n                });\n\n                values.roles = rules;\n\n                this.props.actionEdit(values);\n            }\n        });\n    };\n\n    handleSelectedChange = value => {\n        this.setState({\n            selected: value,\n        });\n    };\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        return nextState.options !== this.state.options || nextState.selected !== this.state.selected;\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Row>\n                <Col span={24}>\n                    <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                        <Row gutter={16} style={{marginBottom:'50px'}}>\n                            <Form.Item label=\"Выбор ролей\" hasFeedback>\n                                {getFieldDecorator('roles', {\n                                    // rules: [\n                                    //     { required: true, message: 'Пожалуйста, выберите роль' }\n                                    // ],\n                                })(<Select\n                                    mode=\"multiple\"\n                                    style={{ width: '100%' }}\n                                    placeholder=\"Пожалуйста, выберите роли\"\n                                    onChange={this.handleSelectedChange}\n                                >\n                                    {this.state.options}\n                                </Select>)}\n                            </Form.Item>\n                        </Row>\n                        <Row\n                            style={{\n                                position: 'absolute',\n                                left: 0,\n                                bottom: 0,\n                                width: '100%',\n                                borderTop: '1px solid #e9e9e9',\n                                padding: '10px 16px 0 10px',\n                                background: '#fff',\n                                textAlign: 'left',\n                            }}\n                        >\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Изменить\n                            </Button>\n                        </Row>\n                    </Form>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_roles_form',\n    mapPropsToFields(props) {\n        let roles = [];\n        if (props.item.roles) {\n            props.item.roles.map((item) => {\n                roles.push(String(item.id));\n            });\n        }\n\n        return {\n            roles: Form.createFormField({\n                ...props.operator_code,\n                value: roles,\n            }),\n        };\n    },\n})(UserRolesFormModel);\n","import React from \"react\";\nimport {Link} from \"react-router\";\n\nimport { Menu, PageHeader, Layout, Icon } from 'antd';\nconst { Header } = Layout;\n\nexport default class HeaderPage extends React.Component {\n    state = {\n        current: 'mail',\n    };\n\n    handleClick = e => {\n        this.setState({\n            current: e.key,\n        });\n    };\n\n    render() {\n        return (\n            <Header>\n                <PageHeader\n                    title={<span><Icon\n                        className=\"trigger\"\n                        type={this.props.collapsed ? 'menu-unfold' : 'menu-fold'}\n                        onClick={this.props.toggle}\n                    />{this.props.title}</span>}\n                    subTitle={this.props.subTitle}\n                    extra={this.props.extra}\n                />\n\n                <Menu onClick={this.handleClick} mode=\"horizontal\">\n                    <Menu.Item key=\"team\">\n                        <Link  to={`/`}><Icon type=\"team\" />Пользователи</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"role\">\n                        <Link  to={`/role`}><Icon type=\"cluster\" />Роли</Link>\n                    </Menu.Item>\n                </Menu>\n            </Header>\n        )\n    }\n}","import React from \"react\";\nimport {Link} from \"react-router\";\n\nimport { Menu, Layout, Icon } from 'antd';\nconst {Sider } = Layout;\n\nexport default class MenuLeft extends React.Component {\n    render() {\n\n        let selectedKey = '1';\n        switch (this.props.page) {\n            case 'data':\n                selectedKey = '1';\n                break;\n            case 'password':\n                selectedKey = '3';\n                break;\n            case 'roles':\n                selectedKey = '4';\n                break;\n        }\n\n        return (\n            <Sider width={250} trigger={null} collapsible collapsed={this.props.collapsed}>\n                <div className=\"logo\">\n                    USER\n                </div>\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[selectedKey]}>\n                    <Menu.Item key=\"1\">\n                        <Link  to={`/user/edit/${this.props.user_id}/data`}><Icon type=\"idcard\" /><span>Данные пользователя</span></Link>\n                    </Menu.Item>\n                    {\n                        (false)\n                            ?\n                            <Menu.Item key=\"2\">\n                                <Link  to={`/user/edit/${this.props.user_id}/token`}><Icon type=\"idcard\" /><span>Токены</span></Link>\n                            </Menu.Item>\n                            : null\n                    }\n                    <Menu.Item key=\"3\">\n                        <Link  to={`/user/edit/${this.props.user_id}/password`}><Icon type=\"safety\" /><span>Изменение пароля</span></Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"4\">\n                        <Link  to={`/user/edit/${this.props.user_id}/roles`}><Icon type=\"control\" /><span>Управление ролями</span></Link>\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n        )\n    }\n}","'use strict';\n\nimport React from 'react';\nimport Helmet from \"react-helmet\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport {Logout} from 'modules/app/core';\n\nimport {\n    userEdit as actionEdit,\n    userCurrent as actionCurrent,\n    userItem as actionUser\n} from '../../store/actions/user';\n\nimport { Layout, Spin } from 'antd';\nconst { Content } = Layout;\n\nimport UserDataForm     from \"../page/data/main\";\nimport UserPasswordForm from \"../page/password/main\";\nimport UserRolesForm    from \"../page/roles/main\";\n\nimport HeaderPage from \"./header_page\";\nimport MenuLeft   from \"./menu_left\";\n\nclass Edit extends React.Component\n{\n    static defaultProps = {\n        params: {\n            user_id: null\n        }\n    };\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            collapsed: false,\n            loading: true,\n        };\n\n        this.props.actionCurrent();\n        this.props.actionUser({id: props.params.user_id});\n    }\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    render()\n    {\n        if (this.props.item && this.props.current) {\n            let isLoad = (this.props.current) ? false : true;\n\n            return (\n                <Layout>\n                    <MenuLeft\n                        collapsed={this.state.collapsed}\n                        page={this.props.params.page}\n                        user_id={this.props.params.user_id}\n                    />\n\n                    <Layout>\n                        <Helmet title=\"Users\"/>\n\n                        <HeaderPage\n                            title={this.props.item.operator_name}\n                            subTitle={`login: ${this.props.item.operator_login}`}\n                            collapsed={this.state.collapsed}\n                            toggle={this.toggle}\n                            extra={[\n                                <Logout key=\"logout-1\" />\n                            ]}\n                        />\n\n                        <Content className='user-edit'>\n                            <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n                                {\n                                    (this.props.params.page === \"data\")\n                                        ?\n                                        <UserDataForm\n                                            title='Добавить пользователя'\n                                            user_id={this.props.params.user_id}\n                                            item={this.props.item}\n                                            actionEdit={this.props.actionEdit}\n                                            wrappedComponentRef={(form) => this.form = form}\n                                        />\n                                        : null\n                                }\n\n                                {\n                                    (this.props.params.page === \"password\")\n                                        ?\n                                        <UserPasswordForm\n                                            title='Добавить пользователя'\n                                            user_id={this.props.params.user_id}\n                                            actionEdit={this.props.actionEdit}\n                                            wrappedComponentRef={(form) => this.form = form}\n                                        />\n                                        : null\n                                }\n\n                                {\n                                    (this.props.params.page === \"roles\")\n                                        ?\n                                        <UserRolesForm\n                                            title='Добавить пользователя'\n                                            user_id={this.props.params.user_id}\n                                            item={this.props.item}\n                                            actionEdit={this.props.actionEdit}\n                                            wrappedComponentRef={(form) => this.form = form}\n                                        />\n                                        : null\n                                }\n                            </Spin>\n                        </Content>\n                    </Layout>\n                </Layout>\n            );\n        } else {\n            return null\n        }\n    }\n}\n\nexport default connect(\n    (state) => {\n        return {\n            access: state.user.access,\n            action: state.user.action,\n            current: state.user.current,\n            item: state.user.item.data,\n        };\n    },\n    (dispatch) => bindActionCreators({actionCurrent, actionUser, actionEdit, dispatch}, dispatch)\n)(Edit);\n","import React, {Component} from 'react';\nimport {Provider} from 'react-redux';\n\nimport UserStore from './store/state';\n\nimport Index from './component/main/index';\n\nimport './less/index.less';\n\nclass EditMain extends Component {\n    render() {\n        return (\n            <Provider store={UserStore}>\n                <Index\n                    header={this.props.header}\n                    location={this.props.location}\n                    params={this.props.params}\n                />\n            </Provider>\n        );\n    }\n}\n\nexport default EditMain;"],"sourceRoot":""}
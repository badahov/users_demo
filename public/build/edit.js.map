{"version":3,"sources":["webpack:///./modules/edit/index.js","webpack:///./modules/edit/state.js","webpack:///./modules/edit/api.js","webpack:///./modules/edit/component/forms/data/main.jsx","webpack:///./modules/edit/component/forms/data/index.js","webpack:///./modules/edit/component/forms/password/main.jsx","webpack:///./modules/edit/component/forms/password/index.js","webpack:///./modules/edit/component/forms/roles/main.jsx","webpack:///./modules/edit/component/forms/roles/index.js","webpack:///./modules/edit/component/header.jsx","webpack:///./modules/edit/component/menu.jsx","webpack:///./modules/edit/component/main.jsx","webpack:///./modules/edit/component/index.js","webpack:///./modules/edit/main.jsx"],"names":["path","getComponent","nextState","component","then","mad","noop","createStoreWithMiddleware","applyMiddleware","middleware","thunk","createStore","combineReducers","system","reducer","name","models","points","entryPoints","api","action","data","callback","Query","pointApi","type","result","domain","appConfig","auth","formItemLayout","labelCol","xs","span","sm","wrapperCol","UserDataFormModel","e","preventDefault","props","form","userId","user_id","submit","validateFieldsAndScroll","err","values","operator_id","Number","value","target","confirmDirty","state","setState","this","item","getFieldDecorator","isLoad","tip","size","spinning","onSubmit","handleSubmit","gutter","style","marginBottom","Item","label","hasFeedback","rules","required","message","width","min","placeholder","valuePropName","position","left","bottom","borderTop","padding","background","textAlign","htmlType","Component","propTypes","PropTypes","objectOf","func","isRequired","string","shape","is_admin","bool","is_reprint_admin","operator_code","number","operator_login","operator_name","operator_token","Form","create","mapPropsToFields","createFormField","UserPasswordFormModel","confirm","rule","getFieldValue","validateFields","force","validator","validateToNextPassword","Password","compareToFirstPassword","onBlur","handleConfirmBlur","defaultProps","Option","Select","UserRolesFormModel","map","roles","id","selected","nextProps","options","send","option","key","title","mode","onChange","handleSelectedChange","String","Header","Layout","HeaderPage","collapsed","toggle","subTitle","extra","className","onClick","to","arrayOf","oneOfType","element","Sider","MenuLeft","selectedKey","page","trigger","collapsible","theme","defaultSelectedKeys","Content","helmetContext","Edit","getTemplate","params","modelEdit","wrappedComponentRef","modelServer","current","operatorName","operatorLogin","context","renderTemplate","React","currentTypes","connectAdvanced","dispatch","ownProps","sendTo","creator","modelItem","json","nextOwnProps","isNull","nextResult","loading","userItem","access","userCurrent","shallowEqual","Users","Module","location","store","UserStore","any"],"mappings":"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","file":"edit.js?hash=93e16ad8076392bda07a","sourcesContent":["import noop from 'lodash/noop';\n\nexport default {\n  path: 'user/edit/:userId/:page',\n  getComponent(nextState, component) {\n    import('./main').then((mad) => component(null, mad.default)).catch(() => noop);\n  },\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\n\nimport thunk from 'redux-thunk';\n\nimport middleware from '../app/middleware';\nimport reducer from '../app/reducer';\n// import {createLogger} from 'redux-logger';\n\nconst module = {\n  name: 'system',\n  models: [\n    {\n      name: 'user',\n      points: ['item', 'current'],\n    },\n  ],\n};\n\nconst createStoreWithMiddleware = applyMiddleware(\n  middleware('system'),\n  thunk,\n  // createLogger({collapsed:true}),\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers({\n  system: reducer(module),\n}));\n","import Query from '../app/component/core/query';\nimport appConfig from '../../config';\n\nconst entryPoints = {\n  item: 'interface-users/user',\n  edit: 'interface-users/user-edit',\n  current: 'interface-users/user-current',\n};\n\nexport default function api(action, data, callback) {\n  switch (action) {\n    case 'userItem':\n      return (new Query({\n        data,\n        pointApi: entryPoints.item,\n        type: 'GET',\n      })).result();\n    case 'userCurrent':\n      return (new Query({\n        domain: appConfig.domain.auth,\n        type: 'GET',\n        pointApi: entryPoints.current,\n      })).result();\n    case 'userEdit':\n      return (new Query({\n        data,\n        pointApi: entryPoints.edit,\n      })).result(callback);\n    default:\n      return null;\n  }\n}\n\n// export function modelEdit(data, filter, action) {\n//   let ReactQueryObject = new Query({\n//     pointApi: api.edit,\n//     data: data,\n//   });\n//\n//   return ReactQueryObject.result().then((json) => {\n//     if (json) {\n//       if (action instanceof Function) {\n//         action(filter);\n//       }\n//     }\n//   });\n// }\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  Button,\n  Row,\n  Input,\n  InputNumber,\n  Switch,\n  Col,\n  Spin,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 4 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 5 },\n  },\n};\n\nclass UserDataFormModel extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const {\n      form,\n      user_id: userId,\n      submit,\n    } = this.props;\n\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        values.operator_id = Number(userId);\n\n        submit(values);\n      }\n    });\n  };\n\n  handleConfirmBlur = (e) => {\n    const { value } = e.target;\n    const { confirmDirty } = this.state;\n    this.setState({ confirmDirty: confirmDirty || !!value });\n  };\n\n  render() {\n    const {\n      item,\n      form: {\n        getFieldDecorator,\n      },\n    } = this.props;\n\n    const isLoad = (!item);\n\n    return (\n      <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n        <Row>\n          <Col span={24}>\n            <Form\n              labelCol={formItemLayout.labelCol}\n              wrapperCol={formItemLayout.wrapperCol}\n              onSubmit={this.handleSubmit}\n            >\n              <Row gutter={16} style={{ marginBottom: '50px' }}>\n                <Form.Item label=\"Код\" hasFeedback>\n                  {getFieldDecorator('operator_code', {\n                    rules: [\n                      { required: true, message: 'Пожалуйста, ввидите код пользователя' },\n                    ],\n                  })(\n                    <InputNumber\n                      style={{ width: '65%' }}\n                      min={0}\n                      placeholder=\"Код пользователя\"\n                    />,\n                  )}\n                </Form.Item>\n\n                <Form.Item label=\"Имя\" hasFeedback>\n                  {getFieldDecorator('operator_name', {\n                    rules: [\n                      { required: true, message: 'Пожалуйста, ввидите имя пользователя' },\n                    ],\n                  })(<Input placeholder=\"Имя пользователя\" />)}\n                </Form.Item>\n\n                <Form.Item label=\"Логин\" hasFeedback>\n                  {getFieldDecorator('operator_login', {\n                    rules: [\n                      { required: true, message: 'Пожалуйста, ввидите логин пользователя' },\n                    ],\n                  })(<Input placeholder=\"Логин пользователя\" />)}\n                </Form.Item>\n\n                <Form.Item label=\"Администратор\">\n                  {getFieldDecorator('is_admin', { valuePropName: 'checked' })(<Switch />)}\n                </Form.Item>\n\n                <Form.Item label=\"Перепечать\">\n                  {getFieldDecorator('is_reprint_admin', { valuePropName: 'checked' })(<Switch />)}\n                </Form.Item>\n              </Row>\n\n              <Row\n                style={{\n                  position: 'absolute',\n                  left: 0,\n                  bottom: 0,\n                  width: '100%',\n                  borderTop: '1px solid #e9e9e9',\n                  padding: '10px 16px 0 10px',\n                  background: '#fff',\n                  textAlign: 'left',\n                }}\n              >\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Изменить\n                </Button>\n              </Row>\n            </Form>\n          </Col>\n        </Row>\n      </Spin>\n    );\n  }\n}\n\nUserDataFormModel.propTypes = {\n  form: PropTypes.objectOf(PropTypes.func).isRequired,\n  user_id: PropTypes.string.isRequired,\n  submit: PropTypes.func.isRequired,\n  item: PropTypes.shape({\n    is_admin: PropTypes.bool.isRequired,\n    is_reprint_admin: PropTypes.bool.isRequired,\n    operator_code: PropTypes.number.isRequired,\n    operator_id: PropTypes.number.isRequired,\n    operator_login: PropTypes.string.isRequired,\n    operator_name: PropTypes.string.isRequired,\n    operator_token: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default UserDataFormModel;\n","import { Form } from 'antd';\n\nimport UserDataFormModel from './main';\n\nexport default Form.create({\n  name: 'user_data_form',\n  mapPropsToFields(props) {\n    return {\n      operator_code: Form.createFormField({\n        ...props.item.operator_code,\n        value: props.item.operator_code,\n      }),\n      operator_name: Form.createFormField({\n        ...props.item.operator_name,\n        value: props.item.operator_name,\n      }),\n      operator_login: Form.createFormField({\n        ...props.item.operator_login,\n        value: props.item.operator_login,\n      }),\n      is_admin: Form.createFormField({\n        ...props.item.is_admin,\n        value: props.item.is_admin,\n      }),\n      is_reprint_admin: Form.createFormField({\n        ...props.item.is_reprint_admin,\n        value: props.item.is_reprint_admin,\n      }),\n    };\n  },\n})(UserDataFormModel);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  Button,\n  Row,\n  Input,\n  Col,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 4 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 5 },\n  },\n};\n\nclass UserPasswordFormModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDirty: false,\n    };\n  }\n\n  handleSubmit = (e) => {\n    const {\n      form,\n      user_id: userId,\n      submit,\n    } = this.props;\n\n    e.preventDefault();\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        delete values.confirm;\n\n        values.operator_id = Number(userId);\n\n        submit(values);\n      }\n    });\n  };\n\n  handleConfirmBlur = (e) => {\n    const { value } = e.target;\n    const { confirmDirty } = this.state;\n    this.setState({\n      confirmDirty: confirmDirty || !!value,\n    });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Пароли не совпадают!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    const { confirmDirty } = this.state;\n    if (value && confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const {\n      form: {\n        getFieldDecorator,\n      },\n    } = this.props;\n\n    return (\n      <Row>\n        <Col span={24}>\n          <Form\n            labelCol={formItemLayout.labelCol}\n            wrapperCol={formItemLayout.wrapperCol}\n            onSubmit={this.handleSubmit}\n          >\n            <Row gutter={16} style={{ marginBottom: '50px' }}>\n              <Form.Item label=\"Пароль\" hasFeedback>\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Пожалуйста, введите пароль!',\n                    },\n                    {\n                      validator: this.validateToNextPassword,\n                    },\n                  ],\n                })(<Input.Password />)}\n              </Form.Item>\n              <Form.Item label=\"Повторить пароль\" hasFeedback>\n                {getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Пожалуйста, повторите пароль!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n              </Form.Item>\n            </Row>\n            <Row\n              style={{\n                position: 'absolute',\n                left: 0,\n                bottom: 0,\n                width: '100%',\n                borderTop: '1px solid #e9e9e9',\n                padding: '10px 16px 0 10px',\n                background: '#fff',\n                textAlign: 'left',\n              }}\n            >\n              <Button type=\"primary\" htmlType=\"submit\">\n                Изменить\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nUserPasswordFormModel.defaultProps = {\n  item: null,\n};\n\nUserPasswordFormModel.propTypes = {\n  form: PropTypes.objectOf(PropTypes.func).isRequired,\n  user_id: PropTypes.string.isRequired,\n  submit: PropTypes.func.isRequired,\n  item: PropTypes.shape({\n    is_admin: PropTypes.bool.isRequired,\n    is_reprint_admin: PropTypes.bool.isRequired,\n    operator_code: PropTypes.number.isRequired,\n    operator_id: PropTypes.number.isRequired,\n    operator_login: PropTypes.string.isRequired,\n    operator_name: PropTypes.string.isRequired,\n    operator_token: PropTypes.string.isRequired,\n  }),\n};\n\nexport default UserPasswordFormModel;\n","import { Form } from 'antd';\n\nimport UserPasswordFormModel from './main';\n\nexport default Form.create({\n  name: 'user_password_form',\n})(UserPasswordFormModel);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport map from 'lodash/map';\nimport noop from 'lodash/noop';\n\nimport {\n  Form,\n  Button,\n  Row,\n  Select,\n  Col,\n} from 'antd';\n\nimport Query from '../../../../app/component/core/query';\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 2 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 15 },\n  },\n};\n\nclass UserRolesFormModel extends Component {\n  constructor(props) {\n    super(props);\n\n    const ReactQueryObject = new Query({\n      pointApi: 'interface-users/role-select',\n    });\n\n    ReactQueryObject.send().then((result) => {\n      const option = map(result, (item) => (<Option key={item.id}>{item.title}</Option>));\n\n      this.setState({\n        options: option,\n      });\n\n      return option;\n    }).catch(() => noop);\n\n    this.state = {\n      options: [],\n      selected: [],\n    };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const {\n      form,\n      user_id: userId,\n      submit,\n    } = this.props;\n\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        values.operator_id = Number(userId);\n\n        const rules = map(values.roles, (item) => ({ id: Number(item) }));\n\n        values.roles = rules;\n\n        submit(values);\n      }\n    });\n  };\n\n  handleSelectedChange = (value) => {\n    this.setState({\n      selected: value,\n    });\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    const { options, selected } = this.state;\n\n    return nextState.options !== options\n      || nextState.selected !== selected;\n  };\n\n  render() {\n    const {\n      form: {\n        getFieldDecorator,\n      },\n    } = this.props;\n    const { options } = this.state;\n\n    return (\n      <Row>\n        <Col span={24}>\n          <Form\n            labelCol={formItemLayout.labelCol}\n            wrapperCol={formItemLayout.wrapperCol}\n            onSubmit={this.handleSubmit}\n          >\n            <Row gutter={16} style={{ marginBottom: '50px' }}>\n              <Form.Item label=\"Выбор ролей\" hasFeedback>\n                {getFieldDecorator('roles', {\n                  // rules: [\n                  //     { required: true, message: 'Пожалуйста, выберите роль' }\n                  // ],\n                })(\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: '100%' }}\n                    placeholder=\"Пожалуйста, выберите роли\"\n                    onChange={this.handleSelectedChange}\n                  >\n                    {options}\n                  </Select>,\n                )}\n              </Form.Item>\n            </Row>\n            <Row\n              style={{\n                position: 'absolute',\n                left: 0,\n                bottom: 0,\n                width: '100%',\n                borderTop: '1px solid #e9e9e9',\n                padding: '10px 16px 0 10px',\n                background: '#fff',\n                textAlign: 'left',\n              }}\n            >\n              <Button type=\"primary\" htmlType=\"submit\">\n                Изменить\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nUserRolesFormModel.propTypes = {\n  form: PropTypes.objectOf(PropTypes.func).isRequired,\n  user_id: PropTypes.string.isRequired,\n  submit: PropTypes.func.isRequired,\n  item: PropTypes.shape({\n    is_admin: PropTypes.bool.isRequired,\n    is_reprint_admin: PropTypes.bool.isRequired,\n    operator_code: PropTypes.number.isRequired,\n    operator_id: PropTypes.number.isRequired,\n    operator_login: PropTypes.string.isRequired,\n    operator_name: PropTypes.string.isRequired,\n    operator_token: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default UserRolesFormModel;\n","import { Form } from 'antd';\nimport map from 'lodash/map';\n\nimport UserRolesFormModel from './main';\n\nexport default Form.create({\n  name: 'user_roles_form',\n  mapPropsToFields(props) {\n    let roles = [];\n    if (props.item.roles) {\n      roles = map(props.item.roles, (item) => String(item.id));\n    }\n\n    return {\n      roles: Form.createFormField({\n        ...props.operator_code,\n        value: roles,\n      }),\n    };\n  },\n})(UserRolesFormModel);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\n\nimport {\n  Menu,\n  PageHeader,\n  Layout,\n  Icon,\n} from 'antd';\n\nconst { Header } = Layout;\n\nconst HeaderPage = (props) => {\n  const {\n    collapsed,\n    toggle,\n    title,\n    subTitle,\n    extra,\n  } = props;\n\n  return (\n    <Header>\n      <PageHeader\n        title={(\n          <span>\n            <Icon\n              className=\"trigger\"\n              type={collapsed ? 'menu-unfold' : 'menu-fold'}\n              onClick={toggle}\n            />\n            {title}\n          </span>\n        )}\n        subTitle={subTitle}\n        extra={extra}\n      />\n      <Menu mode=\"horizontal\">\n        <Menu.Item key=\"team\">\n          <Link to=\"/\">\n            <Icon type=\"team\" />\n            Пользователи\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"role\">\n          <Link to=\"/role\">\n            <Icon type=\"cluster\" />\n            Роли\n          </Link>\n        </Menu.Item>\n      </Menu>\n    </Header>\n  );\n};\n\nHeaderPage.propTypes = {\n  title: PropTypes.string.isRequired,\n  subTitle: PropTypes.string.isRequired,\n  collapsed: PropTypes.bool.isRequired,\n  extra: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.element.isRequired,\n  ])).isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n\nexport default HeaderPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\n\nimport { Menu, Layout, Icon } from 'antd';\n\nconst { Sider } = Layout;\n\nconst MenuLeft = (props) => {\n  const {\n    collapsed,\n    userId,\n    page,\n  } = props;\n\n  let selectedKey;\n  switch (page) {\n    case 'data':\n      selectedKey = '1';\n      break;\n    case 'password':\n      selectedKey = '3';\n      break;\n    case 'roles':\n      selectedKey = '4';\n      break;\n    default:\n      selectedKey = '1';\n  }\n\n  return (\n    <Sider width={250} trigger={null} collapsible collapsed={collapsed}>\n      <div className=\"logo\">USER</div>\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[selectedKey]}>\n        <Menu.Item key=\"1\">\n          <Link to={`/user/edit/${userId}/data`}>\n            <Icon type=\"idcard\" />\n            <span>Данные пользователя</span>\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"3\">\n          <Link to={`/user/edit/${userId}/password`}>\n            <Icon type=\"safety\" />\n            <span>Изменение пароля</span>\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"4\">\n          <Link to={`/user/edit/${userId}/roles`}>\n            <Icon type=\"control\" />\n            <span>Управление ролями</span>\n          </Link>\n        </Menu.Item>\n      </Menu>\n    </Sider>\n  );\n};\n\nMenuLeft.propTypes = {\n  page: PropTypes.string.isRequired,\n  collapsed: PropTypes.bool.isRequired,\n  userId: PropTypes.string.isRequired,\n};\n\nexport default MenuLeft;\n","import React from 'react';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nimport {\n  Layout,\n  Spin,\n} from 'antd';\n\nimport Logout from '../../app/logout';\n\nimport UserDataForm from './forms/data';\nimport UserPasswordForm from './forms/password';\nimport UserRolesForm from './forms/roles';\n\nimport HeaderPage from './header';\nimport Menu from './menu';\nimport { currentTypes } from '../../global/types';\n\nconst { Content } = Layout;\n\nconst helmetContext = {};\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: false,\n    };\n\n    props.modelServer();\n  }\n\n  toggle = () => {\n    const { collapsed } = this.state;\n\n    this.setState({\n      collapsed: !collapsed,\n    });\n  };\n\n  renderTemplate = (page) => {\n    const {\n      item,\n      params: {\n        userId,\n      },\n      modelEdit,\n    } = this.props;\n\n    let getTemplate;\n\n    switch (page) {\n      case 'password':\n        getTemplate = (\n          <UserPasswordForm\n            title=\"Добавить пользователя\"\n            user_id={userId}\n            submit={modelEdit}\n            wrappedComponentRef={(form) => {\n              this.form = form;\n            }}\n          />\n        );\n        break;\n      case 'roles':\n        getTemplate = (\n          <UserRolesForm\n            title=\"Добавить пользователя\"\n            user_id={userId}\n            item={item}\n            submit={modelEdit}\n            wrappedComponentRef={(form) => {\n              this.form = form;\n            }}\n          />\n        );\n        break;\n      default:\n        getTemplate = (\n          <UserDataForm\n            title=\"Добавить пользователя\"\n            user_id={userId}\n            item={item}\n            submit={modelEdit}\n            wrappedComponentRef={(form) => {\n              this.form = form;\n            }}\n          />\n        );\n        break;\n    }\n\n    return getTemplate;\n  };\n\n  render() {\n    const {\n      item,\n      current,\n      params: {\n        page,\n        userId,\n      },\n    } = this.props;\n\n    const { collapsed } = this.state;\n\n    if (item && current) {\n      const operatorName = item.operator_name;\n      const operatorLogin = item.operator_login;\n\n      const isLoad = (!current);\n\n      return (\n        <HelmetProvider context={helmetContext}>\n          <Layout>\n            <Menu\n              collapsed={collapsed}\n              page={page}\n              userId={userId}\n            />\n            <Layout>\n              <Helmet title=\"Users\" />\n              <HeaderPage\n                title={operatorName}\n                subTitle={`login: ${operatorLogin}`}\n                collapsed={collapsed}\n                toggle={this.toggle}\n                extra={[\n                  <Logout key=\"logout-1\" />,\n                ]}\n              />\n              <Content className=\"user-edit\">\n                <Spin\n                  tip=\"Загрузка...\"\n                  size=\"large\"\n                  spinning={isLoad}\n                >\n                  { this.renderTemplate(page) }\n                </Spin>\n              </Content>\n            </Layout>\n          </Layout>\n        </HelmetProvider>\n      );\n    }\n\n    return null;\n  }\n}\n\nEdit.defaultProps = {\n  params: {\n    userId: null,\n  },\n  item: null,\n  current: null,\n};\n\nEdit.propTypes = {\n  current: currentTypes,\n  modelServer: PropTypes.func.isRequired,\n  modelEdit: PropTypes.func.isRequired,\n  params: PropTypes.shape({\n    userId: PropTypes.string.isRequired,\n    page: PropTypes.string.isRequired,\n  }),\n  item: PropTypes.shape({\n    is_admin: PropTypes.bool.isRequired,\n    is_reprint_admin: PropTypes.bool.isRequired,\n    operator_code: PropTypes.number.isRequired,\n    operator_id: PropTypes.number.isRequired,\n    operator_login: PropTypes.string.isRequired,\n    operator_name: PropTypes.string.isRequired,\n    operator_token: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Edit;\n","import { connectAdvanced, shallowEqual } from 'react-redux';\n\nimport creator from '../../app/creator';\nimport api from '../api';\n\nimport Users from './main';\n\nexport default connectAdvanced((dispatch) => {\n  const module = 'system';\n  let ownProps = {};\n  let result = {};\n\n  const sendTo = creator(api, module, dispatch);\n\n  const modelCurrentUser = () => sendTo('userCurrent');\n\n  const modelItem = (data) => sendTo('userItem', data);\n\n  const modelEdit = (data) => sendTo('userEdit', data, (json) => {\n    modelItem({ id: ownProps.params.userId });\n\n    return json;\n  });\n\n  /**\n   * Downloading data from a remote server\n   * @private\n   */\n  const modelServer = () => {\n    modelCurrentUser();\n    modelItem({ id: ownProps.params.userId });\n  };\n\n  return (nextState, nextOwnProps) => {\n    const isNull = (value) => value === null;\n\n    const loading = isNull(nextState[module].userItem);\n    const item = isNull(nextState[module].userItem)\n      ? null\n      : nextState[module].userItem.data;\n    const access = isNull(nextState[module].userItem)\n      ? null\n      : nextState[module].userItem.access;\n    const current = isNull(nextState[module].userCurrent)\n      ? null\n      : nextState[module].userCurrent.data;\n\n    const nextResult = {\n      ...nextOwnProps,\n      loading,\n      item,\n      access,\n      current,\n      modelEdit,\n      modelServer,\n    };\n    ownProps = nextOwnProps;\n    if (!shallowEqual(result, nextResult)) {\n      result = nextResult;\n    }\n\n    return result;\n  };\n})(Users);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\n\nimport UserStore from './state';\n\nimport Index from './component';\n\nimport './css/index.less';\n\nconst Module = (props) => {\n  const { location, params } = props;\n\n  return (\n    <Provider store={UserStore}>\n      <Index\n        location={location}\n        params={params}\n      />\n    </Provider>\n  );\n};\n\nModule.propTypes = {\n  location: PropTypes.oneOfType([\n    PropTypes.any,\n  ]).isRequired,\n  params: PropTypes.oneOfType([\n    PropTypes.any,\n  ]).isRequired,\n};\n\nexport default Module;\n"],"sourceRoot":""}
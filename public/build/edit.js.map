{"version":3,"sources":["webpack:///./modules/edit/route.js","webpack:///./modules/edit/config.js","webpack:///./modules/edit/store/middlewares/user.js","webpack:///./modules/edit/store/reducers/user.js","webpack:///./modules/edit/store/state.js","webpack:///./modules/edit/store/api/user.js","webpack:///./modules/edit/store/actions/user.js","webpack:///./modules/edit/component/page/data/main.jsx","webpack:///./modules/edit/component/page/password/main.jsx","webpack:///./modules/edit/component/page/roles/main.jsx","webpack:///./modules/edit/component/main/header_page.jsx","webpack:///./modules/edit/component/main/menu_left.jsx","webpack:///./modules/edit/component/main/index.jsx","webpack:///./modules/edit/main.jsx"],"names":["__webpack_exports__","path","getComponent","location","cb","require","bind","__webpack_require__","catch","oe","config","model","api","item","edit","current","middleware","store","next","action","includes","type","middlewareAction","MODEL","toUpperCase","actionReducers","status","state","arguments","length","undefined","data","combineReducers","concat","createStoreWithMiddleware","applyMiddleware","user","thunk","createStore","reducers","modelEdit","filter","Query","pointApi","result","then","json","Function","userItem","query","actions","promise","get","userCurrent","domain","appConfig","auth","userEdit","formItemLayout","labelCol","xs","span","sm","wrapperCol","UserDataFormModel","e","preventDefault","_this","props","form","validateFieldsAndScroll","err","values","operator_id","Number","user_id","actionEdit","value","target","setState","confirmDirty","Component","getFieldDecorator","this","isLoad","react_default","a","createElement","spin","tip","size","spinning","row","col","es_form","_extends","onSubmit","handleSubmit","gutter","style","marginBottom","Item","label","hasFeedback","rules","required","message","input_number","width","min","placeholder","input","valuePropName","es_switch","position","left","bottom","borderTop","padding","background","textAlign","es_button","htmlType","Form","create","name","mapPropsToFields","operator_code","createFormField","_objectSpread","operator_name","operator_login","is_admin","is_reprint_admin","UserPasswordFormModel","main_classCallCheck","main_getPrototypeOf","call","main_defineProperty","main_assertThisInitialized","confirm","rule","callback","getFieldValue","validateFields","force","main_extends","validator","validateToNextPassword","Password","compareToFirstPassword","onBlur","handleConfirmBlur","Option","Select","UserRolesFormModel","roles_main_classCallCheck","roles_main_getPrototypeOf","roles_main_defineProperty","roles_main_assertThisInitialized","roles","map","push","id","selected","nextProps","nextState","options","send","option","key","title","roles_main_extends","es_select","mode","onChange","handleSelectedChange","String","main_objectSpread","Header","Layout","HeaderPage","React","page_header","icon","className","collapsed","onClick","toggle","subTitle","extra","menu","handleClick","react_router_es","to","Sider","MenuLeft","selectedKey","page","trigger","collapsible","theme","defaultSelectedKeys","Content","Edit","component_main_classCallCheck","component_main_getPrototypeOf","component_main_defineProperty","component_main_assertThisInitialized","loading","actionCurrent","actionUser","params","_this2","layout","menu_left_MenuLeft","Helmet_default","header_page_HeaderPage","core","main","wrappedComponentRef","password_main","roles_main","connect","access","dispatch","bindActionCreators","EditMain","es","UserStore","component_main","header"],"mappings":"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","file":"edit.js?hash=fa9191841268a73082fb","sourcesContent":["'use strict';\n\nexport default {\n    path: 'user/edit/:user_id/:page',\n    getComponent(location, cb) {\n        require.ensure([], (require) => {\n            cb(null, require('./main').default);\n        });\n    }\n};","'use strict';\n\nexport default {\n    model: 'edit',\n    api: {\n        item:    'interface-users/user',\n        edit:    'interface-users/user-edit',\n        current: 'interface-users/user-current'\n    },\n    middleware: [\n        'USER_ITEM',\n        'USER_CURRENT',\n    ]\n}\n","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\n\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport {combineReducers} from 'redux';\nimport config from \"../../../users/config\";\n\nconst MODEL = config.model.toUpperCase();\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n    action: actionReducers([\n        `${MODEL}_ITEM_LOADING`,\n    ]),\n    current: actionReducers([\n        `${MODEL}_CURRENT_LOADED`,\n    ]),\n    item: actionReducers([\n        `${MODEL}_ITEM_LOADED`,\n    ])\n});\n","'use strict';\n\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n//import {createLogger} from 'redux-logger';\n\nimport user from './middlewares/user';\n\n//Найдет и загрузит все reducers из папки\nimport * as reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(\n    user,\n    thunk//, createLogger({collapsed:true})\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers(reducers));\n","'use strict';\n\nimport {Query} from 'modules/app/core';\nimport appConfig from \"config\";\nimport config from \"../../config\";\n\nconst api = config.api;\n\nexport function modelUser(data)\n{\n    let ReactQueryObject = new Query({\n        pointApi: api.item,\n        type: Query.get,\n        data: data,\n    });\n\n    return ReactQueryObject.result();\n}\n\nexport function modelCurrentUser()\n{\n    let ReactQueryObject = new Query({\n        domain: appConfig.domain.auth,\n        type: Query.get,\n        pointApi: api.current,\n    });\n\n    return ReactQueryObject.result();\n}\n\nexport function modelEdit(data, filter, action)\n{\n    let ReactQueryObject = new Query({\n        pointApi: api.edit,\n        data: data\n    });\n\n    return ReactQueryObject.result().then((json) => {\n        if (json) {\n            if (action instanceof Function) {\n                action(filter);\n            }\n        }\n    });\n}\n","'use strict';\n\nimport {modelUser, modelEdit, modelCurrentUser} from '../api/user';\nimport config from \"../../../users/config\";\n\nconst MODEL = config.model.toUpperCase();\n\nexport function userItem(query) {\n    return {\n        type: `${MODEL}_ITEM`,\n        actions: [`${MODEL}_ITEM_LOADING`, `${MODEL}_ITEM_LOADED`, `${MODEL}_ITEM_LOAD_FAILURE`],\n        promise: modelUser(query),\n    };\n}\n\nexport function userCurrent() {\n    return {\n        type: `${MODEL}_CURRENT`,\n        actions: [`${MODEL}_CURRENT_LOADING`, `${MODEL}_CURRENT_LOADED`, `${MODEL}_CURRENT_LOAD_FAILURE`],\n        promise: modelCurrentUser(),\n    };\n}\n\nexport function userEdit(data, filter = null, action = null) {\n    return {\n        type: `${MODEL}_EDIT`,\n        actions: [`${MODEL}_EDIT_LOADED`],\n        model: modelEdit(data, filter, action),\n    };\n}\n","'use strict';\n\nimport React, { Component } from \"react\";\n\nimport { Form, Button, Row, Input, InputNumber, Switch, Col, Spin } from 'antd';\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n    },\n};\n\nclass UserDataFormModel extends Component\n{\n    static defaultProps = {\n        item: null,\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                values.operator_id = Number(this.props.user_id);\n\n                this.props.actionEdit(values);\n            }\n        });\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        let isLoad = (this.props.item) ? false : true;\n\n        return (\n            <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n                <Row>\n                    <Col span={24}>\n                        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                            <Row gutter={16} style={{marginBottom:'50px'}}>\n                                <Form.Item label=\"Код\" hasFeedback>\n                                    {getFieldDecorator('operator_code', {\n                                        rules: [\n                                            { required: true, message: 'Пожалуйста, ввидите код пользователя' }\n                                        ],\n                                    })(<InputNumber style={{ width: '65%' }} min={0} placeholder=\"Код пользователя\" />)}\n                                </Form.Item>\n\n                                <Form.Item label=\"Имя\" hasFeedback>\n                                    {getFieldDecorator('operator_name', {\n                                        rules: [\n                                            { required: true, message: 'Пожалуйста, ввидите имя пользователя' }\n                                        ],\n                                    })(<Input placeholder=\"Имя пользователя\" />)}\n                                </Form.Item>\n\n                                <Form.Item label=\"Логин\" hasFeedback>\n                                    {getFieldDecorator('operator_login', {\n                                        rules: [\n                                            { required: true, message: 'Пожалуйста, ввидите логин пользователя' }\n                                        ],\n                                    })(<Input placeholder=\"Логин пользователя\" />)}\n                                </Form.Item>\n\n                                <Form.Item label=\"Администратор\">\n                                    {getFieldDecorator('is_admin', { valuePropName: 'checked' })(<Switch />)}\n                                </Form.Item>\n\n                                <Form.Item label=\"Перепечать\">\n                                    {getFieldDecorator('is_reprint_admin', { valuePropName: 'checked' })(<Switch />)}\n                                </Form.Item>\n                            </Row>\n\n                            <Row\n                                style={{\n                                    position: 'absolute',\n                                    left: 0,\n                                    bottom: 0,\n                                    width: '100%',\n                                    borderTop: '1px solid #e9e9e9',\n                                    padding: '10px 16px 0 10px',\n                                    background: '#fff',\n                                    textAlign: 'left',\n                                }}\n                            >\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Изменить\n                                </Button>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n            </Spin>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_data_form',\n    mapPropsToFields(props) {\n        return {\n            operator_code: Form.createFormField({\n                ...props.item.operator_code,\n                value: props.item.operator_code,\n            }),\n            operator_name: Form.createFormField({\n                ...props.item.operator_name,\n                value: props.item.operator_name,\n            }),\n            operator_login: Form.createFormField({\n                ...props.item.operator_login,\n                value: props.item.operator_login,\n            }),\n            is_admin: Form.createFormField({\n                ...props.item.is_admin,\n                value: props.item.is_admin,\n            }),\n            is_reprint_admin: Form.createFormField({\n                ...props.item.is_reprint_admin,\n                value: props.item.is_reprint_admin,\n            }),\n        };\n    },\n})(UserDataFormModel);\n","'use strict';\n\nimport React, { Component } from \"react\";\n\nimport { Form, Button, Row, Input, Col } from 'antd';\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n    },\n};\n\nclass UserPasswordFormModel extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            confirmDirty: false\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                delete values.confirm;\n\n                values.operator_id = Number(this.props.user_id);\n\n                this.props.actionEdit(values);\n            }\n        });\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Пароли не совпадают!');\n        } else {\n            callback();\n        }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Row>\n                <Col span={24}>\n                    <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                        <Row gutter={16} style={{marginBottom:'50px'}}>\n                            <Form.Item label=\"Пароль\" hasFeedback>\n                                {getFieldDecorator('password', {\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: 'Пожалуйста, введите пароль!',\n                                        },\n                                        {\n                                            validator: this.validateToNextPassword,\n                                        },\n                                    ],\n                                })(<Input.Password />)}\n                            </Form.Item>\n                            <Form.Item label=\"Повторить пароль\" hasFeedback>\n                                {getFieldDecorator('confirm', {\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: 'Пожалуйста, повторите пароль!',\n                                        },\n                                        {\n                                            validator: this.compareToFirstPassword,\n                                        },\n                                    ],\n                                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n                            </Form.Item>\n                        </Row>\n                        <Row\n                            style={{\n                                position: 'absolute',\n                                left: 0,\n                                bottom: 0,\n                                width: '100%',\n                                borderTop: '1px solid #e9e9e9',\n                                padding: '10px 16px 0 10px',\n                                background: '#fff',\n                                textAlign: 'left',\n                            }}\n                        >\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Изменить\n                            </Button>\n                        </Row>\n                    </Form>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_password_form',\n    mapPropsToFields() {\n        return null;\n    },\n})(UserPasswordFormModel);\n","'use strict';\n\nimport React, { Component } from \"react\";\n\nimport { Form, Button, Row, Select, Col } from 'antd';\nconst { Option } = Select;\n\nimport {Query} from 'modules/app/core';\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 2 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 15 },\n    },\n};\n\nclass UserRolesFormModel extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        let ReactQueryObject = new Query({\n            pointApi: 'interface-users/role-select',\n        });\n\n        ReactQueryObject.send().then((result) => {\n            let option = [];\n            result.map((item) => {\n                option.push(<Option key={item.id}>{item.title}</Option>);\n            });\n\n            this.setState({\n                options: option,\n            });\n        });\n\n        this.state = {\n            options: [],\n            selected: []\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                values.operator_id = Number(this.props.user_id);\n\n                let rules = [];\n                values.roles.map((item) => {\n                    rules.push({id: Number(item)});\n                });\n\n                values.roles = rules;\n\n                this.props.actionEdit(values);\n            }\n        });\n    };\n\n    handleSelectedChange = value => {\n        this.setState({\n            selected: value,\n        });\n    };\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        return nextState.options !== this.state.options || nextState.selected !== this.state.selected;\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Row>\n                <Col span={24}>\n                    <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                        <Row gutter={16} style={{marginBottom:'50px'}}>\n                            <Form.Item label=\"Выбор ролей\" hasFeedback>\n                                {getFieldDecorator('roles', {\n                                    // rules: [\n                                    //     { required: true, message: 'Пожалуйста, выберите роль' }\n                                    // ],\n                                })(<Select\n                                    mode=\"multiple\"\n                                    style={{ width: '100%' }}\n                                    placeholder=\"Пожалуйста, выберите роли\"\n                                    onChange={this.handleSelectedChange}\n                                >\n                                    {this.state.options}\n                                </Select>)}\n                            </Form.Item>\n                        </Row>\n                        <Row\n                            style={{\n                                position: 'absolute',\n                                left: 0,\n                                bottom: 0,\n                                width: '100%',\n                                borderTop: '1px solid #e9e9e9',\n                                padding: '10px 16px 0 10px',\n                                background: '#fff',\n                                textAlign: 'left',\n                            }}\n                        >\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Изменить\n                            </Button>\n                        </Row>\n                    </Form>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_roles_form',\n    mapPropsToFields(props) {\n        let roles = [];\n        if (props.item.roles) {\n            props.item.roles.map((item) => {\n                roles.push(String(item.id));\n            });\n        }\n\n        return {\n            roles: Form.createFormField({\n                ...props.operator_code,\n                value: roles,\n            }),\n        };\n    },\n})(UserRolesFormModel);\n","import React from \"react\";\nimport {Link} from \"react-router\";\n\nimport { Menu, PageHeader, Layout, Icon } from 'antd';\nconst { Header } = Layout;\n\nexport default class HeaderPage extends React.Component {\n    state = {\n        current: 'mail',\n    };\n\n    handleClick = e => {\n        this.setState({\n            current: e.key,\n        });\n    };\n\n    render() {\n        return (\n            <Header>\n                <PageHeader\n                    title={<span><Icon\n                        className=\"trigger\"\n                        type={this.props.collapsed ? 'menu-unfold' : 'menu-fold'}\n                        onClick={this.props.toggle}\n                    />{this.props.title}</span>}\n                    subTitle={this.props.subTitle}\n                    extra={this.props.extra}\n                />\n\n                <Menu onClick={this.handleClick} mode=\"horizontal\">\n                    <Menu.Item key=\"team\">\n                        <Link  to={`/`}><Icon type=\"team\" />Пользователи</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"role\">\n                        <Link  to={`/role`}><Icon type=\"cluster\" />Роли</Link>\n                    </Menu.Item>\n                </Menu>\n            </Header>\n        )\n    }\n}","import React from \"react\";\nimport {Link} from \"react-router\";\n\nimport { Menu, Layout, Icon } from 'antd';\nconst {Sider } = Layout;\n\nexport default class MenuLeft extends React.Component {\n    render() {\n\n        let selectedKey = '1';\n        switch (this.props.page) {\n            case 'data':\n                selectedKey = '1';\n                break;\n            case 'password':\n                selectedKey = '3';\n                break;\n            case 'roles':\n                selectedKey = '4';\n                break;\n        }\n\n        return (\n            <Sider width={250} trigger={null} collapsible collapsed={this.props.collapsed}>\n                <div className=\"logo\">\n                    USER\n                </div>\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[selectedKey]}>\n                    <Menu.Item key=\"1\">\n                        <Link  to={`/user/edit/${this.props.user_id}/data`}><Icon type=\"idcard\" /><span>Данные пользователя</span></Link>\n                    </Menu.Item>\n                    {\n                        (false)\n                            ?\n                            <Menu.Item key=\"2\">\n                                <Link  to={`/user/edit/${this.props.user_id}/token`}><Icon type=\"idcard\" /><span>Токены</span></Link>\n                            </Menu.Item>\n                            : null\n                    }\n                    <Menu.Item key=\"3\">\n                        <Link  to={`/user/edit/${this.props.user_id}/password`}><Icon type=\"safety\" /><span>Изменение пароля</span></Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"4\">\n                        <Link  to={`/user/edit/${this.props.user_id}/roles`}><Icon type=\"control\" /><span>Управление ролями</span></Link>\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n        )\n    }\n}","'use strict';\n\nimport React from 'react';\nimport Helmet from \"react-helmet\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport {Logout} from 'modules/app/core';\n\nimport {\n    userEdit as actionEdit,\n    userCurrent as actionCurrent,\n    userItem as actionUser\n} from '../../store/actions/user';\n\nimport { Layout, Spin } from 'antd';\nconst { Content } = Layout;\n\nimport UserDataForm     from \"../page/data/main\";\nimport UserPasswordForm from \"../page/password/main\";\nimport UserRolesForm    from \"../page/roles/main\";\n\nimport HeaderPage from \"./header_page\";\nimport MenuLeft   from \"./menu_left\";\n\nclass Edit extends React.Component\n{\n    static defaultProps = {\n        params: {\n            user_id: null\n        }\n    };\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            collapsed: false,\n            loading: true,\n        };\n\n        this.props.actionCurrent();\n        this.props.actionUser({id: props.params.user_id});\n    }\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    render()\n    {\n        if (this.props.item && this.props.current) {\n            let isLoad = (this.props.current) ? false : true;\n\n            return (\n                <Layout>\n                    <MenuLeft\n                        collapsed={this.state.collapsed}\n                        page={this.props.params.page}\n                        user_id={this.props.params.user_id}\n                    />\n\n                    <Layout>\n                        <Helmet title=\"Users\"/>\n\n                        <HeaderPage\n                            title={this.props.item.operator_name}\n                            subTitle={`login: ${this.props.item.operator_login}`}\n                            collapsed={this.state.collapsed}\n                            toggle={this.toggle}\n                            extra={[\n                                <Logout key=\"logout-1\" />\n                            ]}\n                        />\n\n                        <Content className='user-edit'>\n                            <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n                                {\n                                    (this.props.params.page === \"data\")\n                                        ?\n                                        <UserDataForm\n                                            title='Добавить пользователя'\n                                            user_id={this.props.params.user_id}\n                                            item={this.props.item}\n                                            actionEdit={this.props.actionEdit}\n                                            wrappedComponentRef={(form) => this.form = form}\n                                        />\n                                        : null\n                                }\n\n                                {\n                                    (this.props.params.page === \"password\")\n                                        ?\n                                        <UserPasswordForm\n                                            title='Добавить пользователя'\n                                            user_id={this.props.params.user_id}\n                                            actionEdit={this.props.actionEdit}\n                                            wrappedComponentRef={(form) => this.form = form}\n                                        />\n                                        : null\n                                }\n\n                                {\n                                    (this.props.params.page === \"roles\")\n                                        ?\n                                        <UserRolesForm\n                                            title='Добавить пользователя'\n                                            user_id={this.props.params.user_id}\n                                            item={this.props.item}\n                                            actionEdit={this.props.actionEdit}\n                                            wrappedComponentRef={(form) => this.form = form}\n                                        />\n                                        : null\n                                }\n                            </Spin>\n                        </Content>\n                    </Layout>\n                </Layout>\n            );\n        } else {\n            return null\n        }\n    }\n}\n\nexport default connect(\n    (state) => {\n        return {\n            access: state.user.access,\n            action: state.user.action,\n            current: state.user.current,\n            item: state.user.item.data,\n        };\n    },\n    (dispatch) => bindActionCreators({actionCurrent, actionUser, actionEdit, dispatch}, dispatch)\n)(Edit);\n","import React, {Component} from 'react';\nimport {Provider} from 'react-redux';\n\nimport UserStore from './store/state';\n\nimport Index from './component/main/index';\n\nimport './less/index.less';\n\nclass EditMain extends Component {\n    render() {\n        return (\n            <Provider store={UserStore}>\n                <Index\n                    header={this.props.header}\n                    location={this.props.location}\n                    params={this.props.params}\n                />\n            </Provider>\n        );\n    }\n}\n\nexport default EditMain;"],"sourceRoot":""}
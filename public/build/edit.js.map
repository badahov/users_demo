{"version":3,"sources":["webpack:///./modules/edit/index.js","webpack:///./modules/edit/state.js","webpack:///./modules/edit/api.js","webpack:///./modules/edit/component/forms/data/main.jsx","webpack:///./modules/edit/component/forms/data/index.js","webpack:///./modules/edit/component/forms/password/main.jsx","webpack:///./modules/edit/component/forms/password/index.js","webpack:///./modules/edit/component/forms/roles/main.jsx","webpack:///./modules/edit/component/forms/roles/index.js","webpack:///./modules/edit/component/header.jsx","webpack:///./modules/edit/component/menu.jsx","webpack:///./modules/edit/component/main.jsx","webpack:///./modules/edit/component/index.js","webpack:///./modules/edit/main.jsx"],"names":["path","getComponent","nextState","component","then","mad","noop","createStoreWithMiddleware","applyMiddleware","middleware","thunk","createStore","combineReducers","system","reducer","name","models","points","entryPoints","api","action","data","callback","Query","pointApi","type","get","result","domain","appConfig","auth","formItemLayout","labelCol","xs","span","sm","wrapperCol","UserDataFormModel","e","preventDefault","props","form","validateFieldsAndScroll","err","values","operator_id","Number","user_id","submit","value","target","setState","confirmDirty","state","getFieldDecorator","this","isLoad","item","tip","size","spinning","onSubmit","handleSubmit","gutter","style","marginBottom","Item","label","hasFeedback","rules","required","message","width","min","placeholder","valuePropName","position","left","bottom","borderTop","padding","background","textAlign","htmlType","Component","Form","create","mapPropsToFields","operator_code","createFormField","operator_name","operator_login","is_admin","is_reprint_admin","UserPasswordFormModel","confirm","rule","getFieldValue","validateFields","force","validator","validateToNextPassword","Password","compareToFirstPassword","onBlur","handleConfirmBlur","Option","Select","UserRolesFormModel","roles","map","id","selected","nextProps","options","send","option","push","key","title","mode","onChange","handleSelectedChange","String","Header","Layout","HeaderPage","className","collapsed","onClick","toggle","subTitle","extra","to","Sider","MenuLeft","userId","selectedKey","page","trigger","collapsible","theme","defaultSelectedKeys","Content","Edit","getTemplate","params","modelEdit","wrappedComponentRef","modelServer","current","operatorName","operatorLogin","renderTemplate","React","defaultProps","connectAdvanced","dispatch","ownProps","sendTo","creator","modelItem","json","location","query","nextOwnProps","isNull","nextResult","loading","userItem","access","userCurrent","shallowEqual","Users","Module","store","UserStore"],"mappings":"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","file":"edit.js?hash=c6faec142ae0475d6d0a","sourcesContent":["import noop from 'lodash/noop';\n\nexport default {\n    path: 'user/edit/:userId/:page',\n    getComponent(nextState, component) {\n        import('./main').then((mad) => component(null, mad.default)).catch(() => noop);\n    },\n};","'use strict';\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\n\nimport middleware from '../app/middleware';\nimport reducer from '../app/reducer';\n\nimport thunk from 'redux-thunk';\n// import {createLogger} from 'redux-logger';\n\nconst module = {\n  name: 'system',\n  models: [\n    {\n      name: 'user',\n      points: ['item', 'current']\n    }\n  ]\n};\n\nconst createStoreWithMiddleware = applyMiddleware(\n  middleware('system'),\n  thunk,\n  // createLogger({collapsed:true}),\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers({\n  system: reducer(module)\n}));\n","'use strict';\n\nimport { Query } from 'modules/app/core';\nimport appConfig from 'config';\n\nfunction query(pointApi, data, type = Query.post) {\n  return new Query({\n    pointApi: pointApi,\n    type: type,\n    data: data\n  });\n}\n\nconst entryPoints = {\n  item: 'interface-users/user',\n  edit: 'interface-users/user-edit',\n  current: 'interface-users/user-current',\n};\n\nexport default function api(action, data, callback) {\n  switch (action) {\n    case 'userItem':\n      return (new Query({\n        data,\n        pointApi: entryPoints.item,\n        type: Query.get,\n      })).result();\n    case 'userCurrent':\n      return (new Query({\n        domain: appConfig.domain.auth,\n        type: Query.get,\n        pointApi: entryPoints.current\n      })).result();\n    case 'userEdit':\n      return (new Query({\n        data,\n        pointApi: entryPoints.edit\n      })).result();\n  }\n}\n\n// export function modelEdit(data, filter, action) {\n//   let ReactQueryObject = new Query({\n//     pointApi: api.edit,\n//     data: data,\n//   });\n//\n//   return ReactQueryObject.result().then((json) => {\n//     if (json) {\n//       if (action instanceof Function) {\n//         action(filter);\n//       }\n//     }\n//   });\n// }\n","'use strict';\n\nimport React, { Component } from 'react';\n\nimport { Form, Button, Row, Input, InputNumber, Switch, Col, Spin } from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 4 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 5 },\n  },\n};\n\nclass UserDataFormModel extends Component {\n  static defaultProps = {\n    item: null,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        values.operator_id = Number(this.props.user_id);\n\n        this.props.submit(values);\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    let isLoad = (this.props.item) ? false : true;\n\n    return (\n      <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n        <Row>\n          <Col span={24}>\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n              <Row gutter={16} style={{ marginBottom: '50px' }}>\n                <Form.Item label=\"Код\" hasFeedback>\n                  {getFieldDecorator('operator_code', {\n                    rules: [\n                      { required: true, message: 'Пожалуйста, ввидите код пользователя' },\n                    ],\n                  })(<InputNumber style={{ width: '65%' }} min={0}\n                                  placeholder=\"Код пользователя\"/>)}\n                </Form.Item>\n\n                <Form.Item label=\"Имя\" hasFeedback>\n                  {getFieldDecorator('operator_name', {\n                    rules: [\n                      { required: true, message: 'Пожалуйста, ввидите имя пользователя' },\n                    ],\n                  })(<Input placeholder=\"Имя пользователя\"/>)}\n                </Form.Item>\n\n                <Form.Item label=\"Логин\" hasFeedback>\n                  {getFieldDecorator('operator_login', {\n                    rules: [\n                      { required: true, message: 'Пожалуйста, ввидите логин пользователя' },\n                    ],\n                  })(<Input placeholder=\"Логин пользователя\"/>)}\n                </Form.Item>\n\n                <Form.Item label=\"Администратор\">\n                  {getFieldDecorator('is_admin', { valuePropName: 'checked' })(<Switch/>)}\n                </Form.Item>\n\n                <Form.Item label=\"Перепечать\">\n                  {getFieldDecorator('is_reprint_admin', { valuePropName: 'checked' })(<Switch/>)}\n                </Form.Item>\n              </Row>\n\n              <Row\n                style={{\n                  position: 'absolute',\n                  left: 0,\n                  bottom: 0,\n                  width: '100%',\n                  borderTop: '1px solid #e9e9e9',\n                  padding: '10px 16px 0 10px',\n                  background: '#fff',\n                  textAlign: 'left',\n                }}\n              >\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Изменить\n                </Button>\n              </Row>\n            </Form>\n          </Col>\n        </Row>\n      </Spin>\n    );\n  }\n}\n\nexport default UserDataFormModel;\n","import { Form } from 'antd';\n\nimport UserDataFormModel from './main';\n\nexport default Form.create({\n  name: 'user_data_form',\n  mapPropsToFields(props) {\n    return {\n      operator_code: Form.createFormField({\n        ...props.item.operator_code,\n        value: props.item.operator_code,\n      }),\n      operator_name: Form.createFormField({\n        ...props.item.operator_name,\n        value: props.item.operator_name,\n      }),\n      operator_login: Form.createFormField({\n        ...props.item.operator_login,\n        value: props.item.operator_login,\n      }),\n      is_admin: Form.createFormField({\n        ...props.item.is_admin,\n        value: props.item.is_admin,\n      }),\n      is_reprint_admin: Form.createFormField({\n        ...props.item.is_reprint_admin,\n        value: props.item.is_reprint_admin,\n      }),\n    };\n  },\n})(UserDataFormModel);\n","'use strict';\n\nimport React, { Component } from 'react';\n\nimport { Form, Button, Row, Input, Col } from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 4 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 5 },\n  },\n};\n\nclass UserPasswordFormModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDirty: false,\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        delete values.confirm;\n\n        values.operator_id = Number(this.props.user_id);\n\n        this.props.submit(values);\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Пароли не совпадают!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Row>\n        <Col span={24}>\n          <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n            <Row gutter={16} style={{ marginBottom: '50px' }}>\n              <Form.Item label=\"Пароль\" hasFeedback>\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Пожалуйста, введите пароль!',\n                    },\n                    {\n                      validator: this.validateToNextPassword,\n                    },\n                  ],\n                })(<Input.Password/>)}\n              </Form.Item>\n              <Form.Item label=\"Повторить пароль\" hasFeedback>\n                {getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Пожалуйста, повторите пароль!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(<Input.Password onBlur={this.handleConfirmBlur}/>)}\n              </Form.Item>\n            </Row>\n            <Row\n              style={{\n                position: 'absolute',\n                left: 0,\n                bottom: 0,\n                width: '100%',\n                borderTop: '1px solid #e9e9e9',\n                padding: '10px 16px 0 10px',\n                background: '#fff',\n                textAlign: 'left',\n              }}\n            >\n              <Button type=\"primary\" htmlType=\"submit\">\n                Изменить\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default UserPasswordFormModel;\n","import { Form } from 'antd';\n\nimport UserPasswordFormModel from './main';\n\nexport default Form.create({\n  name: 'user_password_form',\n  mapPropsToFields() {\n    return null;\n  },\n})(UserPasswordFormModel);\n","import React, { Component } from 'react';\n\nimport { Form, Button, Row, Select, Col } from 'antd';\n\nconst { Option } = Select;\n\nimport { Query } from 'modules/app/core';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 2 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 15 },\n  },\n};\n\nclass UserRolesFormModel extends Component {\n  constructor(props) {\n    super(props);\n\n    let ReactQueryObject = new Query({\n      pointApi: 'interface-users/role-select',\n    });\n\n    ReactQueryObject.send().then((result) => {\n      let option = [];\n      result.map((item) => {\n        option.push(<Option key={item.id}>{item.title}</Option>);\n      });\n\n      this.setState({\n        options: option,\n      });\n    });\n\n    this.state = {\n      options: [],\n      selected: [],\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        values.operator_id = Number(this.props.user_id);\n\n        let rules = values.roles.map((item) => {\n          return { id: Number(item) };\n        });\n\n        values.roles = rules;\n\n        this.props.submit(values);\n      }\n    });\n  };\n\n  handleSelectedChange = value => {\n    this.setState({\n      selected: value,\n    });\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    return nextState.options !== this.state.options || nextState.selected !== this.state.selected;\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Row>\n        <Col span={24}>\n          <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n            <Row gutter={16} style={{ marginBottom: '50px' }}>\n              <Form.Item label=\"Выбор ролей\" hasFeedback>\n                {getFieldDecorator('roles', {\n                  // rules: [\n                  //     { required: true, message: 'Пожалуйста, выберите роль' }\n                  // ],\n                })(<Select\n                  mode=\"multiple\"\n                  style={{ width: '100%' }}\n                  placeholder=\"Пожалуйста, выберите роли\"\n                  onChange={this.handleSelectedChange}\n                >\n                  {this.state.options}\n                </Select>)}\n              </Form.Item>\n            </Row>\n            <Row\n              style={{\n                position: 'absolute',\n                left: 0,\n                bottom: 0,\n                width: '100%',\n                borderTop: '1px solid #e9e9e9',\n                padding: '10px 16px 0 10px',\n                background: '#fff',\n                textAlign: 'left',\n              }}\n            >\n              <Button type=\"primary\" htmlType=\"submit\">\n                Изменить\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default UserRolesFormModel;\n","import { Form } from 'antd';\n\nimport UserRolesFormModel from './main';\n\nexport default Form.create({\n  name: 'user_roles_form',\n  mapPropsToFields(props) {\n    let roles = [];\n    if (props.item.roles) {\n      roles = props.item.roles.map((item) => {\n        return String(item.id);\n      });\n    }\n\n    return {\n      roles: Form.createFormField({\n        ...props.operator_code,\n        value: roles,\n      }),\n    };\n  },\n})(UserRolesFormModel);\n","import React from 'react';\nimport { Link } from 'react-router';\n\nimport { Menu, PageHeader, Layout, Icon } from 'antd';\n\nconst { Header } = Layout;\n\nconst HeaderPage = (props) => {\n    return (\n      <Header>\n        <PageHeader\n          title={<span><Icon\n            className=\"trigger\"\n            type={props.collapsed ? 'menu-unfold' : 'menu-fold'}\n            onClick={props.toggle}\n          />{props.title}</span>}\n          subTitle={props.subTitle}\n          extra={props.extra}\n        />\n\n        <Menu mode=\"horizontal\">\n          <Menu.Item key=\"team\">\n            <Link to={`/`}><Icon type=\"team\"/>Пользователи</Link>\n          </Menu.Item>\n          <Menu.Item key=\"role\">\n            <Link to={`/role`}><Icon type=\"cluster\"/>Роли</Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n    );\n};\n\nexport default HeaderPage;\n","import React from 'react';\nimport { Link } from 'react-router';\n\nimport { Menu, Layout, Icon } from 'antd';\n\nconst { Sider } = Layout;\n\nconst MenuLeft = (props) => {\n    const { collapsed, userId, page } = props;\n\n    let selectedKey = '1';\n    switch (page) {\n      case 'data':\n        selectedKey = '1';\n        break;\n      case 'password':\n        selectedKey = '3';\n        break;\n      case 'roles':\n        selectedKey = '4';\n        break;\n    }\n\n    return (\n      <Sider width={250} trigger={null} collapsible collapsed={collapsed}>\n        <div className=\"logo\">USER</div>\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[selectedKey]}>\n          <Menu.Item key=\"1\">\n            <Link to={`/user/edit/${userId}/data`}><Icon type=\"idcard\"/><span>Данные пользователя</span></Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\">\n            <Link to={`/user/edit/${userId}/password`}><Icon type=\"safety\"/><span>Изменение пароля</span></Link>\n          </Menu.Item>\n          <Menu.Item key=\"4\">\n            <Link to={`/user/edit/${userId}/roles`}><Icon type=\"control\"/><span>Управление ролями</span></Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    );\n};\n\nexport default MenuLeft;\n","'use strict';\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { Logout } from 'modules/app/core';\n\nimport { Layout, Spin } from 'antd';\n\nconst { Content } = Layout;\n\nimport UserDataForm from './forms/data';\nimport UserPasswordForm from './forms/password';\nimport UserRolesForm from './forms/roles';\n\nimport HeaderPage from './header';\nimport Menu from './menu';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: false,\n    };\n\n    props.modelServer();\n  }\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  renderTemplate = (page) => {\n    const { item, params: {userId}, modelEdit } = this.props;\n\n    let getTemplate;\n\n    switch (page) {\n      case 'password':\n        getTemplate = (\n          <UserPasswordForm\n            title='Добавить пользователя'\n            user_id={userId}\n            submit={modelEdit}\n            wrappedComponentRef={(form) => this.form = form}\n          />\n        );\n        break;\n      case 'roles':\n        getTemplate = (\n          <UserRolesForm\n            title='Добавить пользователя'\n            user_id={userId}\n            item={item}\n            submit={modelEdit}\n            wrappedComponentRef={(form) => this.form = form}\n          />\n        );\n        break;\n      default:\n        getTemplate = (\n          <UserDataForm\n            title='Добавить пользователя'\n            user_id={userId}\n            item={item}\n            submit={modelEdit}\n            wrappedComponentRef={(form) => this.form = form}\n          />);\n        break;\n    }\n\n    return getTemplate;\n  };\n\n  render() {\n    const { item, current, params: {page, userId} } = this.props;\n    const { collapsed } = this.state;\n\n    if (item && current) {\n      const operatorName = item.operator_name;\n      const operatorLogin = item.operator_login;\n\n      let isLoad = (!current);\n\n      return (\n        <Layout>\n          <Menu\n            collapsed={collapsed}\n            page={page}\n            userId={userId}\n          />\n          <Layout>\n            <Helmet title=\"Users\" />\n            <HeaderPage\n              title={operatorName}\n              subTitle={`login: ${operatorLogin}`}\n              collapsed={collapsed}\n              toggle={this.toggle}\n              extra={[\n                <Logout key=\"logout-1\" />,\n              ]}\n            />\n            <Content className=\"user-edit\">\n              <Spin\n                tip=\"Загрузка...\"\n                size=\"large\"\n                spinning={isLoad}\n              >\n                { this.renderTemplate(page) }\n              </Spin>\n            </Content>\n          </Layout>\n        </Layout>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nEdit.defaultProps = {\n  params: {\n    userId: null,\n  },\n};\n\nexport default Edit;\n","import { shallowEqual } from 'react-redux';\nimport { connectAdvanced } from 'react-redux';\n\nimport creator from '../../app/creator';\nimport api from '../api';\n\nimport Users from './main';\n\nexport default connectAdvanced((dispatch) => {\n  const module = 'system';\n  let ownProps = {};\n  let result = {};\n\n  const sendTo = creator(api, module, dispatch);\n\n  const modelCurrentUser = () => sendTo('userCurrent');\n\n  const modelItem   = (data) => sendTo('userItem', data);\n\n  const modelEdit = (data) => sendTo('userEdit', data, (json) => {\n    modelItem(ownProps.location.query);\n    return json;\n  });\n\n  /**\n   * Downloading data from a remote server\n   * @private\n   */\n  const modelServer = () => {\n    modelCurrentUser();\n    modelItem({ id: ownProps.params.userId });\n  };\n\n  return (nextState, nextOwnProps) => {\n    const isNull = (value) => value === null;\n\n    const loading  = isNull(nextState[module].userItem) ? true : false;\n    const item     = isNull(nextState[module].userItem) ? null : nextState[module].userItem.data;\n    const access   = isNull(nextState[module].userItem) ? null : nextState[module].userItem.access;\n    const current  = isNull(nextState[module].userCurrent) ? null : nextState[module].userCurrent.data;\n\n    const nextResult = {\n      ...nextOwnProps,\n      loading,\n      item,\n      access,\n      current,\n      modelEdit,\n      modelServer\n    };\n    ownProps = nextOwnProps;\n    if (!shallowEqual(result, nextResult)) {\n      result = nextResult\n    }\n\n    return result;\n  }\n})(Users);\n","import React from 'react';\nimport {Provider} from 'react-redux';\n\nimport UserStore from './state';\n\nimport Index from './component';\n\nimport './css/index.less';\n\nconst Module = (props) => {\n  const {location, params} = props;\n\n  return (\n    <Provider store={UserStore}>\n      <Index\n        location={location}\n        params={params}\n      />\n    </Provider>\n  );\n};\n\nexport default Module;\n"],"sourceRoot":""}
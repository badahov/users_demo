{"version":3,"sources":["webpack:///./modules/edit/route.js","webpack:///./modules/edit/config.js","webpack:///./modules/edit/store/middlewares/user.js","webpack:///./modules/edit/store/reducers/user.js","webpack:///./modules/edit/store/state.js","webpack:///./modules/edit/store/api/user.js","webpack:///./modules/edit/store/actions/user.js","webpack:///./modules/edit/component/forms/data/main.jsx","webpack:///./modules/edit/component/forms/data/index.js","webpack:///./modules/edit/component/forms/password/main.jsx","webpack:///./modules/edit/component/forms/password/index.js","webpack:///./modules/edit/component/forms/roles/main.jsx","webpack:///./modules/edit/component/forms/roles/index.js","webpack:///./modules/edit/component/header.jsx","webpack:///./modules/edit/component/menu.jsx","webpack:///./modules/edit/component/main.jsx","webpack:///./modules/edit/component/index.js","webpack:///./modules/edit/main.jsx"],"names":["path","getComponent","nextState","component","then","mad","noop","model","api","item","edit","current","middleware","store","next","action","config","includes","type","middlewareAction","MODEL","toUpperCase","actionReducers","status","state","data","combineReducers","createStoreWithMiddleware","applyMiddleware","user","thunk","createStore","reducers","modelEdit","filter","Query","pointApi","result","json","Function","userItem","query","actions","promise","get","userCurrent","domain","appConfig","auth","userEdit","formItemLayout","labelCol","xs","span","sm","wrapperCol","UserDataFormModel","e","preventDefault","props","form","validateFieldsAndScroll","err","values","operator_id","Number","user_id","actionEdit","value","target","setState","confirmDirty","getFieldDecorator","this","isLoad","tip","size","spinning","onSubmit","handleSubmit","gutter","style","marginBottom","Item","label","hasFeedback","rules","required","message","width","min","placeholder","valuePropName","position","left","bottom","borderTop","padding","background","textAlign","htmlType","Component","Form","create","name","mapPropsToFields","operator_code","createFormField","operator_name","operator_login","is_admin","is_reprint_admin","UserPasswordFormModel","confirm","rule","callback","getFieldValue","validateFields","force","validator","validateToNextPassword","Password","compareToFirstPassword","onBlur","handleConfirmBlur","Option","Select","UserRolesFormModel","roles","map","push","id","selected","nextProps","options","send","option","key","title","mode","onChange","handleSelectedChange","String","Header","Layout","HeaderPage","className","collapsed","onClick","toggle","subTitle","extra","to","Sider","MenuLeft","userId","selectedKey","page","trigger","collapsible","theme","defaultSelectedKeys","Content","Edit","getTemplate","params","wrappedComponentRef","actionCurrent","actionUser","operatorName","operatorLogin","renderTemplate","React","defaultProps","connect","access","dispatch","bindActionCreators","Module","location","UserStore"],"mappings":"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","file":"edit.js?hash=cb4ea467696b646c50e4","sourcesContent":["import noop from 'lodash/noop';\n\nexport default {\n    path: 'user/edit/:userId/:page',\n    getComponent(nextState, component) {\n        import('./main').then((mad) => component(null, mad.default)).catch(() => noop);\n    },\n};","'use strict';\n\nexport default {\n  model: 'edit',\n  api: {\n    item: 'interface-users/user',\n    edit: 'interface-users/user-edit',\n    current: 'interface-users/user-current',\n  },\n  middleware: [\n    'USER_ITEM',\n    'USER_CURRENT',\n  ],\n};\n","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\n\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport {combineReducers} from 'redux';\n\nconst MODEL = 'user'.toUpperCase();\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n    action: actionReducers([\n        `${MODEL}_ITEM_LOADING`,\n    ]),\n    current: actionReducers([\n        `${MODEL}_CURRENT_LOADED`,\n    ]),\n    item: actionReducers([\n        `${MODEL}_ITEM_LOADED`,\n    ])\n});\n","'use strict';\n\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n//import {createLogger} from 'redux-logger';\n\nimport user from './middlewares/user';\n\n//Найдет и загрузит все reducers из папки\nimport * as reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(\n    user,\n    thunk//, createLogger({collapsed:true})\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers(reducers));\n","'use strict';\n\nimport {Query} from 'modules/app/core';\nimport appConfig from \"config\";\nimport config from \"../../config\";\n\nconst api = config.api;\n\nexport function modelUser(data)\n{\n    let ReactQueryObject = new Query({\n        pointApi: api.item,\n        type: Query.get,\n        data: data,\n    });\n\n    return ReactQueryObject.result();\n}\n\nexport function modelCurrentUser()\n{\n    let ReactQueryObject = new Query({\n        domain: appConfig.domain.auth,\n        type: Query.get,\n        pointApi: api.current,\n    });\n\n    return ReactQueryObject.result();\n}\n\nexport function modelEdit(data, filter, action)\n{\n    let ReactQueryObject = new Query({\n        pointApi: api.edit,\n        data: data\n    });\n\n    return ReactQueryObject.result().then((json) => {\n        if (json) {\n            if (action instanceof Function) {\n                action(filter);\n            }\n        }\n    });\n}\n","'use strict';\n\nimport {modelUser, modelEdit, modelCurrentUser} from '../api/user';\n\nconst MODEL = 'user'.toUpperCase();\n\nexport function userItem(query) {\n    return {\n        type: `${MODEL}_ITEM`,\n        actions: [`${MODEL}_ITEM_LOADING`, `${MODEL}_ITEM_LOADED`, `${MODEL}_ITEM_LOAD_FAILURE`],\n        promise: modelUser(query),\n    };\n}\n\nexport function userCurrent() {\n    return {\n        type: `${MODEL}_CURRENT`,\n        actions: [`${MODEL}_CURRENT_LOADING`, `${MODEL}_CURRENT_LOADED`, `${MODEL}_CURRENT_LOAD_FAILURE`],\n        promise: modelCurrentUser(),\n    };\n}\n\nexport function userEdit(data, filter = null, action = null) {\n    return {\n        type: `${MODEL}_EDIT`,\n        actions: [`${MODEL}_EDIT_LOADED`],\n        model: modelEdit(data, filter, action),\n    };\n}\n","'use strict';\n\nimport React, { Component } from 'react';\n\nimport { Form, Button, Row, Input, InputNumber, Switch, Col, Spin } from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 4 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 5 },\n  },\n};\n\nclass UserDataFormModel extends Component {\n  static defaultProps = {\n    item: null,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        values.operator_id = Number(this.props.user_id);\n\n        this.props.actionEdit(values);\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    let isLoad = (this.props.item) ? false : true;\n\n    return (\n      <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n        <Row>\n          <Col span={24}>\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n              <Row gutter={16} style={{ marginBottom: '50px' }}>\n                <Form.Item label=\"Код\" hasFeedback>\n                  {getFieldDecorator('operator_code', {\n                    rules: [\n                      { required: true, message: 'Пожалуйста, ввидите код пользователя' },\n                    ],\n                  })(<InputNumber style={{ width: '65%' }} min={0}\n                                  placeholder=\"Код пользователя\"/>)}\n                </Form.Item>\n\n                <Form.Item label=\"Имя\" hasFeedback>\n                  {getFieldDecorator('operator_name', {\n                    rules: [\n                      { required: true, message: 'Пожалуйста, ввидите имя пользователя' },\n                    ],\n                  })(<Input placeholder=\"Имя пользователя\"/>)}\n                </Form.Item>\n\n                <Form.Item label=\"Логин\" hasFeedback>\n                  {getFieldDecorator('operator_login', {\n                    rules: [\n                      { required: true, message: 'Пожалуйста, ввидите логин пользователя' },\n                    ],\n                  })(<Input placeholder=\"Логин пользователя\"/>)}\n                </Form.Item>\n\n                <Form.Item label=\"Администратор\">\n                  {getFieldDecorator('is_admin', { valuePropName: 'checked' })(<Switch/>)}\n                </Form.Item>\n\n                <Form.Item label=\"Перепечать\">\n                  {getFieldDecorator('is_reprint_admin', { valuePropName: 'checked' })(<Switch/>)}\n                </Form.Item>\n              </Row>\n\n              <Row\n                style={{\n                  position: 'absolute',\n                  left: 0,\n                  bottom: 0,\n                  width: '100%',\n                  borderTop: '1px solid #e9e9e9',\n                  padding: '10px 16px 0 10px',\n                  background: '#fff',\n                  textAlign: 'left',\n                }}\n              >\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Изменить\n                </Button>\n              </Row>\n            </Form>\n          </Col>\n        </Row>\n      </Spin>\n    );\n  }\n}\n\nexport default UserDataFormModel;\n","import { Form } from 'antd';\n\nimport UserDataFormModel from './main';\n\nexport default Form.create({\n  name: 'user_data_form',\n  mapPropsToFields(props) {\n    return {\n      operator_code: Form.createFormField({\n        ...props.item.operator_code,\n        value: props.item.operator_code,\n      }),\n      operator_name: Form.createFormField({\n        ...props.item.operator_name,\n        value: props.item.operator_name,\n      }),\n      operator_login: Form.createFormField({\n        ...props.item.operator_login,\n        value: props.item.operator_login,\n      }),\n      is_admin: Form.createFormField({\n        ...props.item.is_admin,\n        value: props.item.is_admin,\n      }),\n      is_reprint_admin: Form.createFormField({\n        ...props.item.is_reprint_admin,\n        value: props.item.is_reprint_admin,\n      }),\n    };\n  },\n})(UserDataFormModel);\n","'use strict';\n\nimport React, { Component } from 'react';\n\nimport { Form, Button, Row, Input, Col } from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 4 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 5 },\n  },\n};\n\nclass UserPasswordFormModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDirty: false,\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        delete values.confirm;\n\n        values.operator_id = Number(this.props.user_id);\n\n        this.props.actionEdit(values);\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Пароли не совпадают!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Row>\n        <Col span={24}>\n          <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n            <Row gutter={16} style={{ marginBottom: '50px' }}>\n              <Form.Item label=\"Пароль\" hasFeedback>\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Пожалуйста, введите пароль!',\n                    },\n                    {\n                      validator: this.validateToNextPassword,\n                    },\n                  ],\n                })(<Input.Password/>)}\n              </Form.Item>\n              <Form.Item label=\"Повторить пароль\" hasFeedback>\n                {getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Пожалуйста, повторите пароль!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(<Input.Password onBlur={this.handleConfirmBlur}/>)}\n              </Form.Item>\n            </Row>\n            <Row\n              style={{\n                position: 'absolute',\n                left: 0,\n                bottom: 0,\n                width: '100%',\n                borderTop: '1px solid #e9e9e9',\n                padding: '10px 16px 0 10px',\n                background: '#fff',\n                textAlign: 'left',\n              }}\n            >\n              <Button type=\"primary\" htmlType=\"submit\">\n                Изменить\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default UserPasswordFormModel;\n\n","import { Form } from 'antd';\n\nimport UserPasswordFormModel from './main';\n\nexport default Form.create({\n  name: 'user_password_form',\n  mapPropsToFields() {\n    return null;\n  },\n})(UserPasswordFormModel);\n","import React, { Component } from 'react';\n\nimport { Form, Button, Row, Select, Col } from 'antd';\n\nconst { Option } = Select;\n\nimport { Query } from 'modules/app/core';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 2 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 15 },\n  },\n};\n\nclass UserRolesFormModel extends Component {\n  constructor(props) {\n    super(props);\n\n    let ReactQueryObject = new Query({\n      pointApi: 'interface-users/role-select',\n    });\n\n    ReactQueryObject.send().then((result) => {\n      let option = [];\n      result.map((item) => {\n        option.push(<Option key={item.id}>{item.title}</Option>);\n      });\n\n      this.setState({\n        options: option,\n      });\n    });\n\n    this.state = {\n      options: [],\n      selected: [],\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        values.operator_id = Number(this.props.user_id);\n\n        let rules = [];\n        values.roles.map((item) => {\n          rules.push({ id: Number(item) });\n        });\n\n        values.roles = rules;\n\n        this.props.actionEdit(values);\n      }\n    });\n  };\n\n  handleSelectedChange = value => {\n    this.setState({\n      selected: value,\n    });\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    return nextState.options !== this.state.options || nextState.selected !== this.state.selected;\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Row>\n        <Col span={24}>\n          <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n            <Row gutter={16} style={{ marginBottom: '50px' }}>\n              <Form.Item label=\"Выбор ролей\" hasFeedback>\n                {getFieldDecorator('roles', {\n                  // rules: [\n                  //     { required: true, message: 'Пожалуйста, выберите роль' }\n                  // ],\n                })(<Select\n                  mode=\"multiple\"\n                  style={{ width: '100%' }}\n                  placeholder=\"Пожалуйста, выберите роли\"\n                  onChange={this.handleSelectedChange}\n                >\n                  {this.state.options}\n                </Select>)}\n              </Form.Item>\n            </Row>\n            <Row\n              style={{\n                position: 'absolute',\n                left: 0,\n                bottom: 0,\n                width: '100%',\n                borderTop: '1px solid #e9e9e9',\n                padding: '10px 16px 0 10px',\n                background: '#fff',\n                textAlign: 'left',\n              }}\n            >\n              <Button type=\"primary\" htmlType=\"submit\">\n                Изменить\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default UserRolesFormModel;\n","import { Form } from 'antd';\n\nimport UserRolesFormModel from './main';\n\nexport default Form.create({\n  name: 'user_roles_form',\n  mapPropsToFields(props) {\n    let roles = [];\n    if (props.item.roles) {\n      roles = props.item.roles.map((item) => {\n        return String(item.id);\n      });\n    }\n\n    return {\n      roles: Form.createFormField({\n        ...props.operator_code,\n        value: roles,\n      }),\n    };\n  },\n})(UserRolesFormModel);\n","import React from 'react';\nimport { Link } from 'react-router';\n\nimport { Menu, PageHeader, Layout, Icon } from 'antd';\n\nconst { Header } = Layout;\n\nconst HeaderPage = (props) => {\n    return (\n      <Header>\n        <PageHeader\n          title={<span><Icon\n            className=\"trigger\"\n            type={props.collapsed ? 'menu-unfold' : 'menu-fold'}\n            onClick={props.toggle}\n          />{props.title}</span>}\n          subTitle={props.subTitle}\n          extra={props.extra}\n        />\n\n        <Menu mode=\"horizontal\">\n          <Menu.Item key=\"team\">\n            <Link to={`/`}><Icon type=\"team\"/>Пользователи</Link>\n          </Menu.Item>\n          <Menu.Item key=\"role\">\n            <Link to={`/role`}><Icon type=\"cluster\"/>Роли</Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n    );\n};\n\nexport default HeaderPage;\n","import React from 'react';\nimport { Link } from 'react-router';\n\nimport { Menu, Layout, Icon } from 'antd';\n\nconst { Sider } = Layout;\n\nconst MenuLeft = (props) => {\n    const { collapsed, userId, page } = props;\n\n    let selectedKey = '1';\n    switch (page) {\n      case 'data':\n        selectedKey = '1';\n        break;\n      case 'password':\n        selectedKey = '3';\n        break;\n      case 'roles':\n        selectedKey = '4';\n        break;\n    }\n\n    return (\n      <Sider width={250} trigger={null} collapsible collapsed={collapsed}>\n        <div className=\"logo\">USER</div>\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[selectedKey]}>\n          <Menu.Item key=\"1\">\n            <Link to={`/user/edit/${userId}/data`}><Icon type=\"idcard\"/><span>Данные пользователя</span></Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\">\n            <Link to={`/user/edit/${userId}/password`}><Icon type=\"safety\"/><span>Изменение пароля</span></Link>\n          </Menu.Item>\n          <Menu.Item key=\"4\">\n            <Link to={`/user/edit/${userId}/roles`}><Icon type=\"control\"/><span>Управление ролями</span></Link>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    );\n};\n\nexport default MenuLeft;\n","'use strict';\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { Logout } from 'modules/app/core';\n\nimport { Layout, Spin } from 'antd';\n\nconst { Content } = Layout;\n\nimport UserDataForm from './forms/data';\nimport UserPasswordForm from './forms/password';\nimport UserRolesForm from './forms/roles';\n\nimport HeaderPage from './header';\nimport Menu from './menu';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: false,\n    };\n\n    props.actionCurrent();\n    props.actionUser({ id: props.params.userId });\n  }\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  renderTemplate = (page) => {\n    const { item, params: {userId}, actionEdit } = this.props;\n\n    let getTemplate;\n\n    switch (page) {\n      case 'password':\n        getTemplate = (\n          <UserPasswordForm\n            title='Добавить пользователя'\n            user_id={userId}\n            actionEdit={actionEdit}\n            wrappedComponentRef={(form) => this.form = form}\n          />\n        );\n        break;\n      case 'roles':\n        getTemplate = (\n          <UserRolesForm\n            title='Добавить пользователя'\n            user_id={userId}\n            item={item}\n            actionEdit={actionEdit}\n            wrappedComponentRef={(form) => this.form = form}\n          />\n        );\n        break;\n      default:\n        getTemplate = (\n          <UserDataForm\n            title='Добавить пользователя'\n            user_id={userId}\n            item={item}\n            actionEdit={actionEdit}\n            wrappedComponentRef={(form) => this.form = form}\n          />);\n        break;\n    }\n\n    return getTemplate;\n  };\n\n  render() {\n    const { item, current, params: {page, userId} } = this.props;\n    const { collapsed } = this.state;\n\n    if (item && current) {\n      const operatorName = item.operator_name;\n      const operatorLogin = item.operator_login;\n\n      let isLoad = (!current);\n\n      return (\n        <Layout>\n          <Menu\n            collapsed={collapsed}\n            page={page}\n            userId={userId}\n          />\n          <Layout>\n            <Helmet title=\"Users\" />\n            <HeaderPage\n              title={operatorName}\n              subTitle={`login: ${operatorLogin}`}\n              collapsed={collapsed}\n              toggle={this.toggle}\n              extra={[\n                <Logout key=\"logout-1\" />,\n              ]}\n            />\n            <Content className=\"user-edit\">\n              <Spin\n                tip=\"Загрузка...\"\n                size=\"large\"\n                spinning={isLoad}\n              >\n                { this.renderTemplate(page) }\n              </Spin>\n            </Content>\n          </Layout>\n        </Layout>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nEdit.defaultProps = {\n  params: {\n    userId: null,\n  },\n};\n\nexport default Edit;\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport {\n  userEdit as actionEdit,\n  userCurrent as actionCurrent,\n  userItem as actionUser,\n} from '../store/actions/user';\n\nimport Edit from './main';\n\nexport default connect(\n  (state) => {\n    return {\n      access: state.user.access,\n      action: state.user.action,\n      current: state.user.current,\n      item: state.user.item.data,\n    };\n  },\n  (dispatch) => bindActionCreators({ actionCurrent, actionUser, actionEdit, dispatch }, dispatch),\n)(Edit);\n","import React from 'react';\nimport {Provider} from 'react-redux';\n\nimport UserStore from './store/state';\n\nimport Index from './component';\n\nimport './css/index.less';\n\nconst Module = (props) => {\n  const {location, params} = props;\n\n  return (\n    <Provider store={UserStore}>\n      <Index\n        location={location}\n        params={params}\n      />\n    </Provider>\n  );\n};\n\nexport default Module;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./modules/app/component/core/query.js","webpack:///./modules/app/component/pagination.jsx","webpack:///./modules/app/component/filter/filter.jsx","webpack:///./modules/app/component/filter/sorting.jsx","webpack:///./modules/app/component/filter/search.jsx","webpack:///./modules/app/component/table/table.jsx","webpack:///./modules/login/component/logout.jsx","webpack:///./modules/app/core.js","webpack:///./modules/app/component/core/middleware.js","webpack:///./modules/role/config.js","webpack:///./modules/role/store/middlewares/user.js","webpack:///./modules/role/store/middlewares/role.js","webpack:///./modules/role/store/reducers/user.js","webpack:///./modules/role/store/reducers/role.js","webpack:///./modules/role/store/state.js","webpack:///./modules/role/store/api/user.js","webpack:///./modules/role/store/actions/user.js","webpack:///./modules/role/store/api/role.js","webpack:///./modules/role/store/actions/role.js","webpack:///./modules/role/component/main/source_add_form.jsx","webpack:///./modules/role/component/main/index.jsx","webpack:///./modules/role/main.jsx"],"names":["fetch","require","Query","options","_this","this","_classCallCheck","_defineProperty","config","domain","api","_fetch","callback","arguments","length","undefined","send","then","json","Function","status","msg","_success","result","_error","_errorMsg","url","type","get","data","_getParams","server","setPoint","pointApi","prefix","method","headers","Accept","Content-Type","credentials","post","body","JSON","stringify","_getUrl","fetchParam","_getFetchParam","response","error","statusText","_requestXdomainToken","message","success","param","str","map","item","push","join","Object","keys","key","concat","encodeURIComponent","setUrl","auth","xhr","XMLHttpRequest","XDomainRequest","open","withCredentials","self","onload","_loginPage","parse","responseText","arr","split","domainAuth","formData","FormData","append","xdomainToken","location","reload","page","login","Item","Component","react_default","a","createElement","es","query","props","to","pathname","className","children","PropTypes","string","isRequired","object","Items","onQuery","prev_page_query","next_page_query","pageSize","_objectSpread","current","originalElement","pagination_Item","pagination","total","page_size","onChange","handleChange","itemRender","number","Pagination","_this$props","Array","isArray","pagination_Items","parseInt","page_url","func","Filter","Sorting","ev","sortArr","element","target","sortClass","sortId","id","parentElement","querySelectorAll","classElement","forEach","classList","remove","add","sort_status","name","sort_id","fsort","onClick","handlerClick","aria-controls","Search","search_classCallCheck","search_getPrototypeOf","call","search_defineProperty","search_assertThisInitialized","placeholder","querySelector","insertAdjacentHTML","setAttribute","value","textContent","nextProps","nextState","textInput","React","createRef","prevProps","prevState","snapshot","parent","width","style","minWidth","lib","model","ref","onFocus","handlerFocus","onBlur","handlerBlur","TheadItem","classes","classNames","Table","overlayClassName","table-striped","striped","table-middle","middle","table-responsive","responsive","thead","i","table_TheadItem","confirm","Modal","Logout","title","okText","okType","cancelText","onOk","urlAuth","urlMain","xhr2","onCancel","console","log","es_button","size","handleLogout","icon","__webpack_require__","d","__webpack_exports__","query_Query","pagination_Pagination","filter_Filter","sorting_Sorting","search_Search","table_Table","logout_Logout","middlewareAction","store","action","_action$actions","_slicedToArray","actions","start","failure","promise","constructor","dispatch","permission","rolePermission","roles","roleAdd","roleEdit","roleDelete","userCurrent","userEdit","middleware","next","includes","actionReducers","state","combineReducers","role","createStoreWithMiddleware","applyMiddleware","user","thunk","createStore","reducers","modelEdit","filter","appConfig","modelPermission","role_id","modelRole","ButtonGroup","Button","Group","Input","UserAddFormModel","_getPrototypeOf","_assertThisInitialized","e","preventDefault","form","validateFieldsAndScroll","err","values","actionRole","onClose","listRoleItemId","inputRoleName","btnRoleEdit","btnRoleDelete","btnRoleSave","display","onRoleSelect","visible","setState","_this2","getFieldDecorator","drawer","zIndex","row","marginBottom","col","span","es_form","layout","onSubmit","handleSubmit","hasFeedback","input","htmlType","list","marginTop","bordered","dataSource","roleList","renderItem","editable","onRoleEditAction","popconfirm","onConfirm","onRoleDelete","placement","react_router_es","enterButton","defaultValue","onSearch","event","onRoleEdit","visibleId","successionId","operationId","inputSourceId","stageId","Form","create","mapPropsToFields","createFormField","sourceTitle","Header","Layout","Content","Sider","Panel","Collapse","Meta","Card","Roles","main_classCallCheck","main_getPrototypeOf","main_defineProperty","main_assertThisInitialized","collapsed","visibleSourceAddForm","selectRoleName","selectRoleId","actionPermission","document","group","enabled","permission_id","items","loading","actionCurrent","isLoad","trigger","collapsible","menu","theme","mode","defaultSelectedKeys","ItemGroup","Helmet_default","page_header","toggle","subTitle","extra","onOpen","core","spin","tip","spinning","collapse","defaultActiveKey","modules","header","desc","grid","gutter","xs","sm","md","lg","xl","xxl","permissions","permissionsSwitch","popover","content","card","permissions-enabled","avatar","source_add_form","wrappedComponentRef","connect","access","bindActionCreators","actionEdit","EditMain","UserStore","main","params"],"mappings":"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","file":"9.js?hash=c723387c510ab8647878","sourcesContent":["'use strict';\n\nimport config from 'config';\n\nconst fetch = require('isomorphic-fetch');\n\nexport default class Query\n{\n    static post = 'POST';\n    static get  = 'GET';\n\n    type     = 'POST';\n    data     = null;\n    pointApi = null;\n    domain   = config.domain.api;\n\n    constructor(options) {\n        if (options.type !== undefined) {\n            this.type = options.type;\n        }\n\n        if (options.data !== undefined) {\n            this.data = options.data;\n        }\n\n        if (options.pointApi !== undefined) {\n            this.pointApi = options.pointApi;\n        }\n\n        if (options.domain !== undefined) {\n            this.domain = options.domain;\n        }\n    }\n\n    send = () => {\n        return this._fetch();\n    };\n\n    result = (callback = null) => {\n        return this.send().then((json) => {\n            if (callback instanceof Function) {\n                return callback(json);\n            } else {\n                if (json.status === \"ok\") {\n                    if (json.msg) {\n                        this._success(json.msg);\n                    }\n\n                    if (json.result) {\n                        return json.result;\n                    } else {\n                        return true;\n                    }\n                } else if (json.msg) {\n                    this._error(this._errorMsg(json.msg));\n\n                    return false;\n                }\n            }\n        });\n    };\n\n    _getUrl = () => {\n        let url    = '';\n\n        if (this.type === Query.get) {\n            let get = null;\n\n            if (this.data) {\n                get = this._getParams(this.data);\n            }\n\n            url = get ? this.domain + config.server.setPoint + this.pointApi + config.server.prefix + get : this.domain + config.server.setPoint + this.pointApi;\n        } else {\n            url = this.domain + config.server.setPoint + this.pointApi;\n        }\n\n        return url;\n    };\n\n    _getFetchParam = () => {\n        let fetchParam = {};\n\n        if (this.type === Query.get) {\n            fetchParam = {\n                method: Query.get,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include'\n            }\n        } else {\n            fetchParam = {\n                method: Query.post,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(this.data),\n                credentials: \"include\"\n            }\n        }\n\n        return fetchParam;\n    };\n\n    _fetch = () => {\n        const url      = this._getUrl();\n        let fetchParam = this._getFetchParam();\n\n        return fetch(url, fetchParam).then((response) => {\n            if (response.status === 200) {\n                return response.json();\n            } else if (response.status === 500) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else if (response.status === 404) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else if (response.status === 417) {\n                const res = response.json();\n                res.then((data) => {\n                    if (!data.status) {\n                        this._error(this._errorMsg(data.msg));\n                    } else {\n                        this._error(config.error[response.status]);\n                    }\n                });\n                throw response.statusText;\n            } else if (response.status === 423) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else if (response.status === 401) {\n                this._requestXdomainToken(url);\n            } else if (response.status === 403) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else {\n                throw response.statusText;\n            }\n        });\n    };\n\n    _error = message => {\n        config.message.error(message);\n    };\n\n    _success = message => {\n        config.message.success(message);\n    };\n\n    _errorMsg = param => {\n        if (typeof(param) === 'string') {\n            return param;\n        } else {\n            let str = ['<ul class=\"list-unstyled\">'];\n            param.map((item) =>\n                str.push('<li>' + item + '</li>')\n            );\n            str.push('</ul>');\n\n            return str.join(' ');\n        }\n    };\n\n    _getParams = data => {\n        return Object.keys(data).map(key => `${key}=${encodeURIComponent(data[key])}`).join('&');\n    };\n\n    _requestXdomainToken(setUrl) {\n        //We request a token on the authorization server\n        const url = config.domain.auth + config.server.setPoint + '/auth/get-xdomain-token';\n        let XHR = (\"onload\" in new XMLHttpRequest()) ? XMLHttpRequest : XDomainRequest;\n        let xhr = new XHR();\n        xhr.open('POST', url, true);\n        xhr.withCredentials = true;\n        xhr.send();\n\n        let self = this;\n        xhr.onload = function () {\n            switch (this.status) {\n                case 401:// User is not authorized on the authorization server\n                    self._loginPage();\n                    break;\n                case 200:\n                    let result = JSON.parse(this.responseText);\n                    let arr = setUrl.split(\"/\");\n                    let domain = arr[0] + \"//\" + arr[2];\n                    let domainAuth = domain + config.server.setPoint + 'auth/login';\n\n                    let formData = new FormData();\n                    formData.append('xdomainToken', result.xdomainToken);\n                    let xhr = new XMLHttpRequest();\n                    xhr.open('POST', domainAuth, true);\n                    xhr.withCredentials = true;\n                    xhr.send(formData);\n\n                    xhr.onload = function () {\n                        switch (this.status) {\n                            case 401:// User is not authorized\n                                self._loginPage();\n                                break;\n                            case 200:\n                                location.reload();\n                                break;\n                        }\n                    };\n                    break;\n            }\n        };\n    }\n\n    _loginPage() {\n        config.page.login();\n    }\n}\n","'use strict';\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router';\n\nimport { Pagination as PaginationAntd } from 'antd';\n\nclass Item extends Component\n{\n    static propTypes = {\n        url: PropTypes.string.isRequired,\n        query: PropTypes.object.isRequired\n    };\n\n    render() {\n        return (\n            <Link query={this.props.query} to={{ pathname: this.props.url, query: this.props.query }} className={this.props.className}>{this.props.children}</Link>\n        )\n    }\n}\n\nclass Items extends Component\n{\n    static propTypes = {\n        total: PropTypes.number.isRequired,\n        page_size: PropTypes.number.isRequired,\n        current: PropTypes.number.isRequired,\n        query: PropTypes.object.isRequired,\n        url: PropTypes.string.isRequired,\n    };\n\n    handlePrevLoading = () =>\n    {\n        this.props.onQuery(this.props.prev_page_query);\n    };\n\n    handleNextLoading = () =>\n    {\n        this.props.onQuery(this.props.next_page_query);\n    };\n\n    handleChange = (page, pageSize) => {\n        this.props.onQuery({page, ...this.props.query});\n    };\n\n    itemRender = (current, type, originalElement) => {\n        return <Item\n            type={type}\n            className={originalElement.props.className}\n            children={originalElement.props.children}\n            query={{page: current, ...this.props.query}}\n            url={this.props.url}\n        />;\n    };\n\n    render() {\n        return (\n            <PaginationAntd total={this.props.total} pageSize={this.props.page_size} current={this.props.current} onChange={this.handleChange} itemRender={this.itemRender} />\n        )\n    }\n}\n\nexport default class Pagination extends Component\n{\n    static propTypes = {\n        url: PropTypes.string.isRequired,\n        data: PropTypes.object.isRequired,\n        onQuery: PropTypes.func.isRequired,\n    };\n\n    render() {\n        const {data, url, onQuery} = this.props;\n\n        const query = Array.isArray(data.query) ? {} : data.query;\n\n        if (data.total >= data.page_size) {\n            return (<Items\n                key='paginate-1'\n                total={data.total}\n                page_size={data.page_size}\n                current={parseInt(data.current)}\n                query={query}\n                page_url={data.page_url}\n                url={url ? url : '/'}\n\n                onQuery={onQuery}\n            />)\n        } else {\n            return null\n        }\n    }\n}\n","'use strict';\n\nimport React, { Component } from 'react';\n\nimport \"./lib/filterdata/table.filter.css\";\n\nexport default class Filter extends Component {\n    render() {\n        return (\n            <div className=\"row-table-filter\">\n                {this.props.children}\n            </div>\n        )\n    }\n}\n","'use strict';\n\nimport React, { Component } from 'react';\n\nexport default class Sorting extends Component {\n\n    static classElement = 'cell-2';\n\n    handlerClick = ev => {\n        let sortArr = [];\n\n        let element   = ev.target;\n        let sortClass = ev.target.className;\n        let sortId    = ev.target.id;\n\n        if (typeof(sortId) !== 'undefined') {\n            let parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n            let cell   = parent.querySelectorAll(`div.${Sorting.classElement}`);\n\n            cell.forEach((item) => {\n                if (item.id !== sortId) {\n                    item.classList.remove(\"sorting_desc\",\"sorting_asc\");\n                    item.classList.add(\"sorting\");\n                }\n            });\n\n            switch(sortClass) {\n                case Sorting.classElement + ' sorting':\n                    element.classList.remove(\"sorting\");\n                    element.classList.add(\"sorting_desc\");\n\n                    this.sort_status = 'desc';\n\n                    sortArr.push({name : this.sort_id, status : this.sort_status});\n                    break;\n                case Sorting.classElement + ' sorting_asc':\n                    element.classList.remove(\"sorting_asc\");\n                    element.classList.add(\"sorting_desc\");\n\n                    this.sort_status = 'desc';\n\n                    sortArr.push({name : this.sort_id, status : this.sort_status});\n                    break;\n                case Sorting.classElement + ' sorting_desc':\n                    element.classList.remove(\"sorting_desc\");\n                    element.classList.add(\"sorting_asc\");\n\n                    this.sort_status = 'asc';\n\n                    sortArr.push({name : this.sort_id, status : this.sort_status});\n                    break;\n            }\n\n            this.props.fsort(sortArr);\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"cell-2 sorting\" onClick={this.handlerClick} id={this.props.id} aria-controls=\"DataTables_Table_1\"></div>\n        )\n    }\n}\n","'use strict';\n\nimport React from 'react';\n\nimport { Field } from 'react-redux-form';\n\nexport default class Search extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.textInput = React.createRef();\n    }\n\n    handlerFocus = ev => {\n        let placeholder = ev.target.placeholder;\n\n        let is_placeholder = (ev.target.parentElement.querySelector(\".placeholder\") === null) ? false : true;\n        if (!is_placeholder) {\n            //beforebegin, afterbegin, beforeend, afterend\n            ev.target.parentElement.insertAdjacentHTML('beforeend', '<div class=\"placeholder\">' + placeholder + '</div>');\n            ev.target.placeholder = '';\n        }\n\n        ev.target.setAttribute(\"style\", \"border-bottom: 1px solid #ac2925;\");\n    };\n\n    handlerBlur = ev => {\n        let val = ev.target.value;\n\n        if (val.length === 0) {\n            let is_placeholder = (ev.target.parentElement.querySelector(\".placeholder\") === null) ? false : true;\n            if (is_placeholder) {\n                let placeholder = ev.target.parentElement.querySelector(\".placeholder\").textContent;\n                ev.target.placeholder = placeholder;\n                ev.target.parentElement.querySelector(\".placeholder\").remove();\n            }\n\n            ev.target.setAttribute(\"style\", \"border-bottom: 1px solid #e5e6e7;\");\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.value) {\n            let placeholder = this.textInput.current.placeholder;\n\n            const parent = this.textInput.current.parentElement;\n\n            let is_placeholder = (parent.querySelector(\".placeholder\") === null) ? false : true;\n            if (!is_placeholder) {\n                parent.insertAdjacentHTML('beforeend', '<div class=\"placeholder\">' + placeholder + '</div>');\n                this.textInput.current.placeholder = '';\n\n                this.textInput.current.setAttribute(\"style\", \"border-bottom: 1px solid #ac2925;\");\n            }\n        }\n    }\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        return nextProps.value !== this.props.value;\n    };\n\n    render() {\n        const width = (this.props.width) ? this.props.width : 0;\n\n        return (\n            <div className=\"cell\" style={{minWidth: width + 'px'}}>\n                <Field model={this.props.model}>\n                    <input key=\"input-search\" ref={this.textInput} onFocus={this.handlerFocus} onBlur={this.handlerBlur} style={{minWidth: width + 'px'}} className=\"filter-search\" placeholder={this.props.placeholder} type=\"text\" />\n                </Field>\n            </div>\n        )\n    }\n}\n","'use strict';\n\nimport React, {Component} from 'react';\nimport classNames from \"classnames\";\nimport {Icon} from 'react-fa';\n\nimport './less/table.less';\n\nclass TheadItem extends React.Component {\n    render() {\n        const classes  = classNames('t-head-item', 't-head-item-' + this.props.id);\n\n        return (\n            <th className={classes}>\n                {this.props.children}\n            </th>\n        )\n    }\n}\n\nexport default class Table extends Component\n{\n    static defaultProps = {\n        striped: true,\n        middle: true,\n        responsive: true,\n        className: 'table table-filter',\n        overlayClassName: null\n    };\n\n    render() {\n        const classes  = classNames(this.props.className, this.props.overlayClassName, {\n            'table-striped': this.props.striped,\n            'table-middle': this.props.middle,\n            'table-responsive': this.props.responsive,\n        });\n\n        return (\n            <table className={classes}>\n                <thead className='table-thead'>\n                    <tr>\n                    {\n                        (this.props.thead) ?\n                            this.props.thead.map((item, i) => <TheadItem key={i} id={i}>{item}</TheadItem>)\n                        : null\n                    }\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.props.children}\n                </tbody>\n            </table>\n        )\n    }\n}\n","'use strict';\n\nimport config from 'config';\n\nimport React, {Component} from 'react';\n\nimport { Modal, Icon, Button } from 'antd';\nconst confirm = Modal.confirm;\n\nexport default class Logout extends Component\n{\n    handleLogout = () => {\n        confirm({\n            title: 'Вы хотите выйти?',\n            okText: 'Да',\n            okType: 'danger',\n            cancelText: 'Нет',\n            onOk() {\n                const urlAuth = config.domain.auth + config.server.setPoint + '/auth/log-out';\n\n                let XHR = (\"onload\" in new XMLHttpRequest()) ? XMLHttpRequest : XDomainRequest;\n                let xhr = new XHR();\n                xhr.open('POST', urlAuth, true);\n                xhr.withCredentials = true;\n                xhr.send();\n                xhr.onload = function() {\n                    const urlMain = config.domain.api + config.server.setPoint + '/auth/log-out';\n                    let XHR2 = (\"onload\" in new XMLHttpRequest()) ? XMLHttpRequest : XDomainRequest;\n                    let xhr2 = new XHR2();\n                    xhr2.open('POST', urlMain, true);\n                    xhr2.withCredentials = true;\n                    xhr2.send();\n                    xhr2.onload = function() {\n                        config.page.login();\n                    }\n                };\n            },\n            onCancel() {\n                console.log('Cancel handle logout');\n            },\n        });\n    };\n\n    render () {\n        return (\n            <Button type=\"danger\" size=\"small\" onClick={this.handleLogout}><Icon type=\"logout\" /> Выход</Button>\n        );\n    }\n}\n","export { default as Query } from './component/core/query';\nexport { default as Pagination } from './component/pagination';\nexport { default as Filter } from './component/filter/filter';\nexport { default as Sorting } from './component/filter/sorting';\nexport { default as Search } from './component/filter/search';\nexport { default as Table } from './component/table/table';\nexport { default as Logout } from 'modules/login/component/logout';","'use strict';\n\nconst middlewareAction = (store, action) => {\n    const [start, success, failure] = action.actions;\n\n    if (action.promise.constructor.name === 'Promise') {\n        //LOADING\n        store.dispatch({\n            type: start,\n            data: true\n        });\n\n        action.promise.then((data) => {\n            //LOADED\n            store.dispatch({\n                type: success,\n                data,\n            });\n\n            //LOADING\n            store.dispatch({\n                type: start,\n                data: false\n            });\n        }, (error) => {\n            //FAILURE\n            store.dispatch({\n                type: failure,\n                error,\n            });\n        });\n    } else {\n        store.dispatch({\n            type: start,\n            data: true\n        });\n\n        store.dispatch({\n            type: success,\n            data: action.promise\n        });\n\n        //LOADING\n        store.dispatch({\n            type: start,\n            data: false\n        });\n    }\n};\n\nexport default middlewareAction;","'use strict';\n\nexport default {\n    model: 'role',\n    api: {\n        permission:   'interface-users/permission',\n        rolePermission:  'interface-users/role-permission',\n\n        roles:   'interface-users/roles',\n        roleAdd: 'interface-users/role-add',\n        roleEdit: 'interface-users/role-edit',\n        roleDelete: 'interface-users/role-delete',\n\n        userCurrent: 'interface-users/user-current',\n        userEdit: 'interface-users/user-edit',\n    },\n    middleware: [\n        'PERMISSION',\n        'ROLE',\n        'USER_CURRENT',\n        'USER_ITEM',\n    ]\n}","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport {combineReducers} from 'redux';\n\nconst MODEL = 'USER';\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n    action: actionReducers([\n        `${MODEL}_ITEM_LOADING`\n    ]),\n    current: actionReducers([\n        `${MODEL}_CURRENT_LOADED`\n    ]),\n    item: actionReducers([\n        `${MODEL}_ITEM_LOADED`\n    ])\n});\n","'use strict';\n\nimport {combineReducers} from 'redux';\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n    permission: actionReducers([\n        'PERMISSION_LOADED'\n    ]),\n    role: actionReducers([\n        'ROLE_LOADED'\n    ]),\n});\n","'use strict';\n\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n//import {createLogger} from 'redux-logger';\n\nimport user from './middlewares/user';\nimport role from './middlewares/role';\n\n//Найдет и загрузит все reducers из папки\nimport * as reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(\n    user,\n    role,\n    thunk//, createLogger({collapsed:true})\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers(reducers));\n","'use strict';\n\nimport {Query} from 'modules/app/core';\nimport appConfig from \"config\";\nimport config from \"../../config\";\n\nconst api = config.api;\n\nexport function modelCurrentUser()\n{\n    let ReactQueryObject = new Query({\n        domain: appConfig.domain.auth,\n        type: Query.get,\n        pointApi: api.userCurrent\n    });\n\n    return ReactQueryObject.result();\n}\n\nexport function modelEdit(data, filter, action)\n{\n    let ReactQueryObject = new Query({\n        pointApi: api.userEdit,\n        data: data\n    });\n\n    return ReactQueryObject.result().then((json) => {\n        if (json) {\n            if (action instanceof Function) {\n                action(filter);\n            }\n        }\n    });\n}\n","'use strict';\n\nimport {modelEdit, modelCurrentUser} from '../api/user';\n\nexport function userCurrent() {\n    return {\n        type: 'USER_CURRENT',\n        actions: ['USER_CURRENT_LOADING', 'USER_CURRENT_LOADED', 'USER_CURRENT_LOAD_FAILURE'],\n        promise: modelCurrentUser(),\n    };\n}\n\nexport function userEdit(data, filter = null, action = null) {\n    return {\n        type: 'USER_EDIT',\n        actions: ['USER_EDIT_LOADED'],\n        model: modelEdit(data, filter, action),\n    };\n}\n","'use strict';\n\nimport {Query} from 'modules/app/core';\nimport config from \"../../config\";\n\nconst api = config.api;\n\nfunction query (pointApi, data, type = Query.post) {\n    return new Query({\n        pointApi: pointApi,\n        type: type,\n        data: data\n    });\n}\n\n/**\n * Управление разрешениями\n *\n * @param action\n * @param data\n * @param callback\n * @returns {*}\n */\nexport function modelPermission(action, data, callback)\n{\n    switch (action) {\n        case 'item':\n            return query(api.permission, data, Query.get).result();\n        case 'switch':\n            return query(api.rolePermission, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.permission, {id: data.role_id}, Query.get).result();\n                }\n            });\n    }\n}\n\n/**\n * Управление ролями\n *\n * @param action\n * @param data\n * @param callback\n * @returns {*}\n */\nexport function modelRole(action, data = {}, callback)\n{\n    switch (action) {\n        case 'items':\n            return query(api.roles, data, Query.get).result();\n        case 'add':\n            return query(api.roleAdd, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.roles).result();\n                }\n            });\n        case 'edit':\n            return query(api.roleEdit, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.roles).result(callback);\n                }\n            });\n        case 'delete':\n            return query(api.roleDelete, data, Query.post).result(callback).then((json) => {\n                if (json) {\n                    return query(api.roles).result();\n                }\n            });\n    }\n}\n","import { modelPermission, modelRole } from '../api/role';\n\nexport function permission(action, data, callback) {\n    return {\n        type: 'PERMISSION',\n        actions: ['PERMISSION_LOADING', 'PERMISSION_LOADED', 'PERMISSION_LOAD_FAILURE'],\n        promise: modelPermission(action, data, callback),\n    };\n}\n\nexport function role(action, data, callback) {\n    return {\n       type: 'ROLE',\n       actions: ['ROLE_LOADING', 'ROLE_LOADED', 'ROLE_LOAD_FAILURE'],\n       promise: modelRole(action, data, callback),\n    };\n}\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router\";\nimport { Form, Button, Row, Input, List, Drawer, Col, Icon, message, Popconfirm } from 'antd';\nconst ButtonGroup = Button.Group;\n\nconst { Search } = Input;\n\nclass UserAddFormModel extends Component\n{\n    static defaultProps = {\n        visible: true,\n        visibleId: null,\n        successionId: null,\n        operationId: null,\n        inputSourceId: null,\n        stageId: null,\n        title: null,\n    };\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            visible: props.visible\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                delete values.confirm;\n\n                this.props.actionRole('add', values);\n            }\n        });\n    };\n\n    onClose = () => {\n        this.props.onClose();\n    };\n\n    onRoleEditAction = (ev, id) => {\n        let parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n        let listRoleItemId = parent.querySelector(`.link-role-name-${id}`);\n        let inputRoleName  = parent.querySelector(`.input-role-name-${id}`);\n        let btnRoleEdit    = parent.querySelector(`.btn-role-edit-${id}`);\n        let btnRoleDelete  = parent.querySelector(`.btn-role-delete-${id}`);\n        let btnRoleSave    = parent.querySelector(`.btn-role-save-${id}`);\n\n        listRoleItemId.style.display = \"none\";\n        inputRoleName.style.display = \"inline\";\n\n        btnRoleEdit.style.display = \"none\";\n        btnRoleDelete.style.display = \"none\";\n        btnRoleSave ? btnRoleSave.style.display = \"inline\" : null;\n    };\n\n    onRoleDelete = (id) => {\n        this.props.actionRole('delete', {\n            id: id\n        }, (json) => {\n            if (json.status === \"ok\") {\n                if (json.msg) {\n                    message.success(json.msg);\n\n                    this.props.onRoleSelect(0);\n                }\n\n                if (json.result) {\n                    return json.result;\n                } else {\n                    return true;\n                }\n            } else if (json.msg) {\n                message.error(this._errorMsg(json.msg));\n                return false;\n            }\n        });\n\n\n    };\n\n    onRoleEdit = (ev, id, name) => {\n        let parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n\n        this.props.actionRole('edit', {\n            id: id,\n            name: name\n        }, (json) => {\n            if (json.status === \"ok\") {\n                if (json.msg) {\n                    message.success(json.msg);\n                }\n\n                if (json.result) {\n                    let listRoleItemId = parent.querySelector(`.link-role-name-${id}`);\n                    let inputRoleName  = parent.querySelector(`.input-role-name-${id}`);\n                    let btnRoleEdit    = parent.querySelector(`.btn-role-edit-${id}`);\n                    let btnRoleDelete  = parent.querySelector(`.btn-role-delete-${id}`);\n                    let btnRoleSave    = parent.querySelector(`.btn-role-save-${id}`);\n\n                    listRoleItemId.style.display = \"inline\";\n                    inputRoleName.style.display = \"none\";\n\n                    btnRoleEdit.style.display = \"inline\";\n                    btnRoleDelete.style.display = \"inline\";\n                    btnRoleSave ? btnRoleSave.style.display = \"none\" : null;\n\n                    return json.result;\n                } else {\n                    return true;\n                }\n            } else if(json.msg) {\n                message.error(this._errorMsg(json.msg));\n                return false;\n            }\n        });\n    };\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        if (this.props.visible !== nextProps.visible) {\n            this.setState({\n                visible: nextProps.visible\n            });\n        }\n\n        return true;\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Drawer\n                title={this.props.title}\n                width={550}\n                onClose={this.onClose}\n                visible={this.state.visible}\n                zIndex={1050}\n            >\n                <Row style={{marginBottom:'20px'}}>\n                    <Col span={24}>\n                        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n                            <Form.Item hasFeedback>\n                                {getFieldDecorator('name', {\n                                    // rules: [\n                                    //     { required: true, message: 'Пожалуйста, ввидите код пользователя' }\n                                    // ],\n                                })(<Input placeholder=\"Название новой роли\" />)}\n                            </Form.Item>\n\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Добавить\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24}>\n                        <List\n                            size=\"small\"\n                            style={{marginTop:'10px'}}\n                            bordered\n                            dataSource={this.props.roleList}\n                            renderItem={item =>\n                            <List.Item\n                                className={`list-role-item list-role-item-${item.id}`}\n                                actions={(item.editable) ? [\n                                <ButtonGroup>\n                                    <Button className={`btn-role-edit btn-role-edit-${item.id}`} onClick={(ev) => this.onRoleEditAction(ev, item.id)} size=\"small\" icon=\"edit\" />\n                                    <Popconfirm\n                                        title=\"Удалить роль?\"\n                                        onConfirm={() => this.onRoleDelete(item.id)}\n                                        okText=\"Да\"\n                                        cancelText=\"Нет\"\n                                        placement=\"left\"\n                                        zIndex={1050}\n                                    >\n                                        <Button className={`btn-role-delete btn-role-delete-${item.id}`} size=\"small\" icon=\"delete\" />\n                                    </Popconfirm>\n                                </ButtonGroup>\n                                ] : null}>\n                                <Link onClick={(ev) => {\n                                    this.props.onRoleSelect(ev, item.id)\n                                }} className={`link-role-name link-role-name-${item.id}`} style={{width:'100%'}}>{item.name}</Link>\n\n                                <Search\n                                    className={`input-role-name input-role-name-${item.id}`}\n                                    placeholder=\"Название новой роли\"\n                                    enterButton={<Icon type=\"save\" />}\n                                    size=\"small\"\n                                    defaultValue={item.name}\n                                    onSearch={(value, event) => this.onRoleEdit(event, item.id, value)}\n                                />\n                            </List.Item>}\n                        />\n                    </Col>\n                </Row>\n            </Drawer>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_add_form',\n    mapPropsToFields(props) {\n        return {\n            title: Form.createFormField({\n                ...props.sourceTitle,\n                value: props.sourceTitle,\n            }),\n        };\n    },\n})(UserAddFormModel);\n","'use strict';\n\nimport React from 'react';\nimport Helmet from \"react-helmet\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport {Logout} from 'modules/app/core';\n\nimport {\n    userEdit as actionEdit,\n    userCurrent as actionCurrent,\n} from '../../store/actions/user';\n\nimport {permission as actionPermission, role as actionRole } from '../../store/actions/role';\n\nimport {Collapse, Card, List, Menu, PageHeader, Layout, Spin, Icon, Row, Col, Popover, Button} from 'antd';\nconst { Header, Content, Sider } = Layout;\nconst Panel = Collapse.Panel;\nconst { Meta } = Card;\n\nimport UserAddForm from \"./source_add_form\";\n\nclass Roles extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            selectRoleName: 'Гость',\n            selectRoleId: 0,\n\n            collapsed: true,\n            visibleSourceAddForm: false,\n            visibleId: null,\n            items: props.items,\n            loading: true,\n            operationId: '',\n        };\n\n        this.props.actionCurrent();\n        this.props.actionRole('items');\n\n        this.props.actionPermission('item', {id:0});\n    }\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visibleSourceAddForm: false,\n        });\n    };\n\n    onOpen = () => {\n        this.setState({\n            visibleSourceAddForm: !this.state.visibleSourceAddForm,\n            visibleId: 1\n        });\n    };\n\n    onRoleSelect = (ev, id) => {\n        for (let i=0; i < this.props.role.length; i++) {\n            let item = this.props.role[i];\n\n            if (item.id === id) {\n                this.setState({\n                    selectRoleName: item.name,\n                    selectRoleId: item.id,\n                });\n\n                this.props.actionPermission('item', {id:item.id});\n\n                break;\n            }\n        }\n\n        let listRoleItems = document.querySelectorAll(\".list-role-item\");\n        listRoleItems.forEach((item) => {\n            item.setAttribute(\"style\", \"background: #fff\");\n        });\n\n        let listRoleItemId = document.querySelector(`.list-role-item-${id}`);\n        listRoleItemId.setAttribute(\"style\", \"background: #fafafa\");\n    };\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        return nextProps.permission !== this.props.permission ||\n            nextState.visibleSourceAddForm !== this.state.visibleSourceAddForm ||\n            nextState.collapsed !== this.state.collapsed ||\n            nextProps.role !== this.props.role;\n    };\n\n    permissionsSwitch = (group, permission, enabled) => {\n        this.props.actionPermission('switch', {\n            enabled: enabled,\n            permission_id: permission,\n            role_id: this.state.selectRoleId\n        });\n    };\n\n    render()\n    {\n        if (this.props.current) {\n            let isLoad = (this.props.current) ? false : true;\n\n            return (\n                <Layout>\n                    <Sider width={300} trigger={null} collapsible collapsed={this.state.collapsed}>\n                        <div className=\"logo\">\n                            USER\n                        </div>\n                        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['2']}>\n                            <Menu.Item key=\"1\">\n                                <Link  to=\"/\"><Icon type=\"team\" /><span>Пользователи</span></Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"2\">\n                                <Link  to=\"/role\"><Icon type=\"cluster\" /><span>Роли</span></Link>\n                            </Menu.Item>\n                            <Menu.ItemGroup key=\"roles\" title=\"\">\n                                {\n                                    (this.props.role)\n                                    ?\n                                        this.props.role.map((item) =>\n                                            <Menu.Item onClick={(ev) => {\n                                                this.onRoleSelect(ev, item.id)\n                                            }} key={`role-${item.id}`}>\n                                                <Icon type=\"property-safety\" />\n                                                <span>{item.name}</span>\n                                            </Menu.Item>\n                                        )\n                                    :null\n                                }\n                            </Menu.ItemGroup>\n                        </Menu>\n                    </Sider>\n                    <Layout>\n                        <Helmet title={this.state.selectRoleName} />\n                        <Header>\n                            <PageHeader\n                                title={<span><Icon\n                                    className=\"trigger\"\n                                    type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                                    onClick={this.toggle}\n                                />Управление ролями</span>}\n                                subTitle={`текущая: ${this.state.selectRoleName}`}\n                                extra={[\n                                    <Button key=\"add-role\" className=\"btn-user-add\" onClick={() => this.onOpen()} type=\"primary\" size=\"small\">\n                                        Управление ролями\n                                    </Button>,\n                                    <Logout key=\"logout-1\" />\n                                ]}\n                            />\n                        </Header>\n                        <Content className='user-list'>\n                            <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n                                <Row>\n                                    <Col span={24}>\n                                        <Collapse defaultActiveKey={['1']}>\n                                        {\n                                            (this.props.permission.modules) ?\n                                                this.props.permission.modules.map((item) =>\n                                                    <Panel header={`${item.name}: ${item.desc}`} key={item.group}>\n                                                        <List\n                                                            grid={{\n                                                                gutter: 16,\n                                                                xs: 1,\n                                                                sm: 1,\n                                                                md: 2,\n                                                                lg: 3,\n                                                                xl: 4,\n                                                                xxl: 4,\n                                                            }}\n                                                            dataSource={item.permissions}\n                                                            renderItem={(item, i) => (\n                                                                <List.Item>\n                                                                    <Link  onClick={() => { this.permissionsSwitch(item.group, item.id, item.enabled) }}>\n                                                                        <Popover content={item.desc} title={item.name}>\n                                                                        <Card\n                                                                            className={\n                                                                                classNames('permissions-default', {\n                                                                                    'permissions-enabled': item.enabled,\n                                                                                })\n                                                                            }\n                                                                            size=\"small\"\n                                                                        >\n                                                                            <Meta\n                                                                                avatar={\n                                                                                    (item.enabled) ? <Icon type=\"check\" /> : <Icon type=\"stop\" />\n                                                                                }\n                                                                                title={item.name}\n                                                                                //description=\"Описание\"\n                                                                            />\n\n                                                                        </Card>\n                                                                        </Popover>\n                                                                    </Link>\n                                                                </List.Item>\n                                                            )}\n                                                        />\n                                                    </Panel>\n                                                )\n                                            : null\n                                        }\n                                        </Collapse>\n                                    </Col>\n\n                                    <UserAddForm\n                                        visible={this.state.visibleSourceAddForm}\n                                        visibleId={this.state.visibleId}\n                                        title='Роли'\n                                        onRoleSelect={this.onRoleSelect}\n                                        roleList={this.props.role}\n                                        actionRole={this.props.actionRole}\n\n                                        onClose={this.onClose} wrappedComponentRef={(form) => this.form = form}\n                                    />\n                                </Row>\n                            </Spin>\n                        </Content>\n                    </Layout>\n                </Layout>\n            );\n        } else {\n            return null\n        }\n    }\n}\n\nexport default connect(\n    (state) => {\n        return {\n            access: state.user.access,\n            current: state.user.current,\n            role: state.role.role,\n            permission: state.role.permission\n        };\n    },\n    (dispatch) => bindActionCreators({actionCurrent, actionEdit, actionPermission, actionRole, dispatch}, dispatch)\n)(Roles);\n","import React, {Component} from 'react';\nimport {Provider} from 'react-redux';\n\nimport UserStore from './store/state';\n\nimport Index from './component/main/index';\n\nimport './less/index.less';\n\nclass EditMain extends Component {\n    render() {\n        return (\n            <Provider store={UserStore}>\n                <Index\n                    header={this.props.header}\n                    location={this.props.location}\n                    params={this.props.params}\n                />\n            </Provider>\n        );\n    }\n}\n\nexport default EditMain;"],"sourceRoot":""}
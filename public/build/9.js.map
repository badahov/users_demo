{"version":3,"sources":["webpack:///./modules/app/component/core/query.js","webpack:///./modules/app/component/core/middleware.js","webpack:///./modules/login/component/logout.jsx","webpack:///./modules/role/config.js","webpack:///./modules/role/store/middlewares/user.js","webpack:///./modules/role/store/middlewares/role.js","webpack:///./modules/role/store/reducers/user.js","webpack:///./modules/role/store/reducers/role.js","webpack:///./modules/role/store/state.js","webpack:///./modules/role/store/api/user.js","webpack:///./modules/role/store/actions/user.js","webpack:///./modules/role/store/api/role.js","webpack:///./modules/role/store/actions/role.js","webpack:///./modules/role/component/main/source_add_form.jsx","webpack:///./modules/role/component/main/index.jsx","webpack:///./modules/role/main.jsx"],"names":["__webpack_require__","d","__webpack_exports__","Query","config__WEBPACK_IMPORTED_MODULE_0__","fetch","require","options","_this","this","_classCallCheck","_defineProperty","config","domain","api","_fetch","callback","arguments","length","undefined","send","then","json","Function","status","msg","_success","result","_error","_errorMsg","url","type","get","data","_getParams","server","setPoint","pointApi","prefix","method","headers","Accept","Content-Type","credentials","post","body","JSON","stringify","_getUrl","fetchParam","_getFetchParam","response","error","statusText","_requestXdomainToken","message","success","param","str","map","item","push","join","Object","keys","key","concat","encodeURIComponent","setUrl","auth","xhr","XMLHttpRequest","XDomainRequest","open","withCredentials","self","onload","_loginPage","parse","responseText","arr","split","domainAuth","formData","FormData","append","xdomainToken","location","reload","history","middlewareAction","store","action","_action$actions","_slicedToArray","actions","start","failure","promise","constructor","name","dispatch","Logout","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","antd__WEBPACK_IMPORTED_MODULE_2__","antd__WEBPACK_IMPORTED_MODULE_3__","antd__WEBPACK_IMPORTED_MODULE_4__","confirm","Modal","title","okText","okType","cancelText","onOk","urlAuth","urlMain","xhr2","page","login","onCancel","console","log","Component","a","createElement","size","onClick","handleLogout","model","permission","rolePermission","roles","roleAdd","roleEdit","roleDelete","userCurrent","userEdit","middleware","next","includes","actionReducers","state","combineReducers","current","role","createStoreWithMiddleware","applyMiddleware","user","thunk","createStore","reducers","modelEdit","filter","appConfig","query","modelPermission","id","role_id","modelRole","ButtonGroup","Button","Group","Search","Input","UserAddFormModel","props","_getPrototypeOf","call","_assertThisInitialized","e","preventDefault","form","validateFieldsAndScroll","err","values","actionRole","onClose","ev","parent","target","parentElement","listRoleItemId","querySelector","inputRoleName","btnRoleEdit","btnRoleDelete","btnRoleSave","style","display","onRoleSelect","nextProps","nextState","visible","setState","_this2","getFieldDecorator","react_default","drawer","width","zIndex","row","marginBottom","col","span","es_form","layout","onSubmit","handleSubmit","Item","hasFeedback","input","placeholder","es_button","htmlType","list","marginTop","bordered","dataSource","roleList","renderItem","className","editable","onRoleEditAction","icon","popconfirm","onConfirm","onRoleDelete","placement","react_router_es","enterButton","defaultValue","onSearch","value","event","onRoleEdit","visibleId","successionId","operationId","inputSourceId","stageId","Form","create","mapPropsToFields","createFormField","_objectSpread","sourceTitle","Header","Layout","Content","Sider","Panel","Collapse","Meta","Card","Roles","main_classCallCheck","main_getPrototypeOf","main_defineProperty","main_assertThisInitialized","collapsed","visibleSourceAddForm","i","selectRoleName","selectRoleId","actionPermission","document","querySelectorAll","forEach","setAttribute","group","enabled","permission_id","items","loading","actionCurrent","React","isLoad","trigger","collapsible","menu","theme","mode","defaultSelectedKeys","to","ItemGroup","Helmet_default","page_header","toggle","subTitle","extra","onOpen","logout","spin","tip","spinning","collapse","defaultActiveKey","modules","header","desc","grid","gutter","xs","sm","md","lg","xl","xxl","permissions","permissionsSwitch","popover","content","card","classNames","permissions-enabled","avatar","source_add_form","wrappedComponentRef","connect","access","bindActionCreators","actionEdit","EditMain","es","UserStore","main","params"],"mappings":"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","file":"9.js?hash=19ff83dc3df5a6bcd75d","sourcesContent":["'use strict';\n\nimport config from 'config';\n\nconst fetch = require('isomorphic-fetch');\n\nexport default class Query\n{\n    static post = 'POST';\n    static get  = 'GET';\n\n    type     = 'POST';\n    data     = null;\n    pointApi = null;\n    domain   = config.domain.api;\n\n    constructor(options)\n    {\n        if (options.type !== undefined) {\n            this.type = options.type;\n        }\n\n        if (options.data !== undefined) {\n            this.data = options.data;\n        }\n\n        if (options.pointApi !== undefined) {\n            this.pointApi = options.pointApi;\n        }\n\n        if (options.domain !== undefined) {\n            this.domain = options.domain;\n        }\n    }\n\n    send = () => {\n        return this._fetch();\n    };\n\n    result = (callback = null) => {\n        return this.send().then((json) => {\n            if (callback instanceof Function) {\n                return callback(json);\n            } else {\n                if (json.status === \"ok\") {\n                    if (json.msg) {\n                        this._success(json.msg);\n                    }\n\n                    if (json.result) {\n                        return json.result;\n                    } else {\n                        return true;\n                    }\n                } else if(json.msg) {\n                    this._error(this._errorMsg(json.msg));\n\n                    return false;\n                }\n            }\n        });\n    };\n\n    _getUrl = () => {\n        let url    = '';\n\n        if (this.type === Query.get) {\n            let get = null;\n\n            if (this.data) {\n                get = this._getParams(this.data);\n            }\n\n            url = get ? this.domain + config.server.setPoint + this.pointApi + config.server.prefix + get : this.domain + config.server.setPoint + this.pointApi;\n        } else {\n            url = this.domain + config.server.setPoint + this.pointApi;\n        }\n\n        return url;\n    };\n\n    _getFetchParam = () => {\n        let fetchParam = {};\n\n        if (this.type === Query.get) {\n            fetchParam = {\n                method: Query.get,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include'\n            }\n        } else {\n            fetchParam = {\n                method: Query.post,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(this.data),\n                credentials: \"include\"\n            }\n        }\n\n        return fetchParam;\n    };\n\n    _fetch = () => {\n        const url      = this._getUrl();\n        let fetchParam = this._getFetchParam();\n\n        return fetch(url, fetchParam).then((response) => {\n            if (response.status === 200) {\n                return response.json();\n            } else if (response.status === 500) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else if (response.status === 404) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else if (response.status === 417) {\n                const res = response.json();\n                res.then((data) => {\n                    if (!data.status) {\n                        this._error(this._errorMsg(data.msg));\n                    } else {\n                        this._error(config.error[response.status]);\n                    }\n                });\n                throw response.statusText;\n            } else if (response.status === 423) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else if (response.status === 401) {\n                this._requestXdomainToken(url);\n            } else if (response.status === 403) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else {\n                throw response.statusText;\n            }\n        });\n    };\n\n    _error = message => {\n        config.message.error(message);\n    };\n\n    _success = message => {\n        config.message.success(message);\n    };\n\n    _errorMsg = param => {\n        if (typeof(param) === 'string') {\n            return param;\n        } else {\n            let str = ['<ul class=\"list-unstyled\">'];\n            param.map((item) =>\n                str.push('<li>' + item + '</li>')\n            );\n            str.push('</ul>');\n\n            return str.join(' ');\n        }\n    };\n\n    _getParams = data => {\n        return Object.keys(data).map(key => `${key}=${encodeURIComponent(data[key])}`).join('&');\n    };\n\n    _requestXdomainToken(setUrl) {\n        //We request a token on the authorization server\n        const url = config.domain.auth + config.server.setPoint + '/auth/get-xdomain-token';\n        let XHR = (\"onload\" in new XMLHttpRequest()) ? XMLHttpRequest : XDomainRequest;\n        let xhr = new XHR();\n        xhr.open('POST', url, true);\n        xhr.withCredentials = true;\n        xhr.send();\n\n        let self = this;\n        xhr.onload = function () {\n            switch (this.status) {\n                case 401:// User is not authorized on the authorization server\n                    self._loginPage();\n                    break;\n                case 200:\n                    let result = JSON.parse(this.responseText);\n                    let arr = setUrl.split(\"/\");\n                    let domain = arr[0] + \"//\" + arr[2];\n                    let domainAuth = domain + config.server.setPoint + 'auth/login';\n\n                    //Отправляем токен в точку авторизации целевого сервера\n                    let formData = new FormData();\n                    formData.append('xdomainToken', result.xdomainToken);\n                    let xhr = new XMLHttpRequest();\n                    xhr.open('POST', domainAuth, true);\n                    xhr.withCredentials = true;\n                    xhr.send(formData);\n\n                    xhr.onload = function () {\n                        switch (this.status) {\n                            case 401:// User is not authorized\n                                self._loginPage();\n                                break;\n                            case 200:\n                                location.reload();\n                                break;\n                        }\n                    };\n                    break;\n            }\n        };\n    }\n\n    _loginPage() {\n        config.history.push('/login');\n    }\n}\n","'use strict';\n\nconst middlewareAction = (store, action) => {\n    const [start, success, failure] = action.actions;\n\n    if (action.promise.constructor.name === 'Promise') {\n        //LOADING\n        store.dispatch({\n            type: start,\n            data: true\n        });\n\n        action.promise.then((data) => {\n            //LOADED\n            store.dispatch({\n                type: success,\n                data,\n            });\n\n            //LOADING\n            store.dispatch({\n                type: start,\n                data: false\n            });\n        }, (error) => {\n            //FAILURE\n            store.dispatch({\n                type: failure,\n                error,\n            });\n        });\n    } else {\n        store.dispatch({\n            type: start,\n            data: true\n        });\n\n        store.dispatch({\n            type: success,\n            data: action.promise\n        });\n\n        //LOADING\n        store.dispatch({\n            type: start,\n            data: false\n        });\n    }\n};\n\nexport default middlewareAction;","'use strict';\n\nimport config from 'config';\n\nimport React, {Component} from 'react';\n\nimport { Modal, Icon, Button } from 'antd';\nconst confirm = Modal.confirm;\n\nexport default class Logout extends Component\n{\n    handleLogout = () => {\n        confirm({\n            title: 'Вы хотите выйти?',\n            okText: 'Да',\n            okType: 'danger',\n            cancelText: 'Нет',\n            onOk() {\n                const urlAuth = config.domain.auth + config.server.setPoint + '/auth/log-out';\n\n                let XHR = (\"onload\" in new XMLHttpRequest()) ? XMLHttpRequest : XDomainRequest;\n                let xhr = new XHR();\n                xhr.open('POST', urlAuth, true);\n                xhr.withCredentials = true;\n                xhr.send();\n                xhr.onload = function() {\n                    const urlMain = config.domain.api + config.server.setPoint + '/auth/log-out';\n                    let XHR2 = (\"onload\" in new XMLHttpRequest()) ? XMLHttpRequest : XDomainRequest;\n                    let xhr2 = new XHR2();\n                    xhr2.open('POST', urlMain, true);\n                    xhr2.withCredentials = true;\n                    xhr2.send();\n                    xhr2.onload = function() {\n                        config.page.login();\n                    }\n                };\n            },\n            onCancel() {\n                console.log('Cancel handle logout');\n            },\n        });\n    };\n\n    render () {\n        return (\n            <Button type=\"danger\" size=\"small\" onClick={this.handleLogout}><Icon type=\"logout\" /> Выход</Button>\n        );\n    }\n}\n","'use strict';\n\nexport default {\n    model: 'role',\n    api: {\n        permission:   'interface-users/permission',\n        rolePermission:  'interface-users/role-permission',\n\n        roles:   'interface-users/roles',\n        roleAdd: 'interface-users/role-add',\n        roleEdit: 'interface-users/role-edit',\n        roleDelete: 'interface-users/role-delete',\n\n        userCurrent: 'interface-users/user-current',\n        userEdit: 'interface-users/user-edit',\n    },\n    middleware: [\n        'PERMISSION',\n        'ROLE',\n        'USER_CURRENT',\n        'USER_ITEM',\n    ]\n}","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport {combineReducers} from 'redux';\n\nconst MODEL = 'USER';\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n    action: actionReducers([\n        `${MODEL}_ITEM_LOADING`\n    ]),\n    current: actionReducers([\n        `${MODEL}_CURRENT_LOADED`\n    ]),\n    item: actionReducers([\n        `${MODEL}_ITEM_LOADED`\n    ])\n});\n","'use strict';\n\nimport {combineReducers} from 'redux';\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n    permission: actionReducers([\n        'PERMISSION_LOADED'\n    ]),\n    role: actionReducers([\n        'ROLE_LOADED'\n    ]),\n});\n","'use strict';\n\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n//import {createLogger} from 'redux-logger';\n\nimport user from './middlewares/user';\nimport role from './middlewares/role';\n\n//Найдет и загрузит все reducers из папки\nimport * as reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(\n    user,\n    role,\n    thunk//, createLogger({collapsed:true})\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers(reducers));\n","'use strict';\n\nimport Query from 'modules/app/component/core/query';\nimport appConfig from \"config\";\nimport config from \"../../config\";\n\nconst api = config.api;\n\nexport function modelCurrentUser()\n{\n    let ReactQueryObject = new Query({\n        domain: appConfig.domain.auth,\n        type: Query.get,\n        pointApi: api.userCurrent\n    });\n\n    return ReactQueryObject.result();\n}\n\nexport function modelEdit(data, filter, action)\n{\n    let ReactQueryObject = new Query({\n        pointApi: api.userEdit,\n        data: data\n    });\n\n    return ReactQueryObject.result().then((json) => {\n        if (json) {\n            if (action instanceof Function) {\n                action(filter);\n            }\n        }\n    });\n}\n","'use strict';\n\nimport {modelEdit, modelCurrentUser} from '../api/user';\n\nexport function userCurrent() {\n    return {\n        type: 'USER_CURRENT',\n        actions: ['USER_CURRENT_LOADING', 'USER_CURRENT_LOADED', 'USER_CURRENT_LOAD_FAILURE'],\n        promise: modelCurrentUser(),\n    };\n}\n\nexport function userEdit(data, filter = null, action = null) {\n    return {\n        type: 'USER_EDIT',\n        actions: ['USER_EDIT_LOADED'],\n        model: modelEdit(data, filter, action),\n    };\n}\n","'use strict';\n\nimport Query from 'modules/app/component/core/query';\nimport config from \"../../config\";\n\nconst api = config.api;\n\nfunction query (pointApi, data, type = Query.post) {\n    return new Query({\n        pointApi: pointApi,\n        type: type,\n        data: data\n    });\n}\n\n/**\n * Управление разрешениями\n *\n * @param action\n * @param data\n * @param callback\n * @returns {*}\n */\nexport function modelPermission(action, data, callback)\n{\n    switch (action) {\n        case 'item':\n            return query(api.permission, data, Query.get).result();\n        case 'switch':\n            return query(api.rolePermission, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.permission, {id: data.role_id}, Query.get).result();\n                }\n            });\n    }\n}\n\n/**\n * Управление ролями\n *\n * @param action\n * @param data\n * @param callback\n * @returns {*}\n */\nexport function modelRole(action, data = {}, callback)\n{\n    switch (action) {\n        case 'items':\n            return query(api.roles, data, Query.get).result();\n        case 'add':\n            return query(api.roleAdd, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.roles).result();\n                }\n            });\n        case 'edit':\n            return query(api.roleEdit, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.roles).result(callback);\n                }\n            });\n        case 'delete':\n            return query(api.roleDelete, data, Query.post).result(callback).then((json) => {\n                if (json) {\n                    return query(api.roles).result();\n                }\n            });\n    }\n}\n","import { modelPermission, modelRole } from '../api/role';\n\nexport function permission(action, data, callback) {\n    return {\n        type: 'PERMISSION',\n        actions: ['PERMISSION_LOADING', 'PERMISSION_LOADED', 'PERMISSION_LOAD_FAILURE'],\n        promise: modelPermission(action, data, callback),\n    };\n}\n\nexport function role(action, data, callback) {\n    return {\n       type: 'ROLE',\n       actions: ['ROLE_LOADING', 'ROLE_LOADED', 'ROLE_LOAD_FAILURE'],\n       promise: modelRole(action, data, callback),\n    };\n}\n","import React, {Component} from \"react\";\n\nimport {Link} from \"react-router\";\nimport {Form, Button, Row, Input, List, Drawer, Col, Icon, message, Popconfirm} from 'antd';\nconst ButtonGroup = Button.Group;\n\nconst { Search } = Input;\n\nclass UserAddFormModel extends Component\n{\n    static defaultProps = {\n        visible: true,\n        visibleId: null,\n        successionId: null,\n        operationId: null,\n        inputSourceId: null,\n        stageId: null,\n        title: null,\n    };\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            visible: props.visible\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                delete values.confirm;\n\n                this.props.actionRole('add', values);\n            }\n        });\n    };\n\n    onClose = () => {\n        this.props.onClose();\n    };\n\n    onRoleEditAction = (ev, id) => {\n        let parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n        let listRoleItemId = parent.querySelector(`.link-role-name-${id}`);\n        let inputRoleName  = parent.querySelector(`.input-role-name-${id}`);\n        let btnRoleEdit    = parent.querySelector(`.btn-role-edit-${id}`);\n        let btnRoleDelete  = parent.querySelector(`.btn-role-delete-${id}`);\n        let btnRoleSave    = parent.querySelector(`.btn-role-save-${id}`);\n\n        listRoleItemId.style.display = \"none\";\n        inputRoleName.style.display = \"inline\";\n\n        btnRoleEdit.style.display = \"none\";\n        btnRoleDelete.style.display = \"none\";\n        btnRoleSave ? btnRoleSave.style.display = \"inline\" : null;\n    };\n\n    onRoleDelete = (id) => {\n        this.props.actionRole('delete', {\n            id: id\n        }, (json) => {\n            if (json.status === \"ok\") {\n                if (json.msg) {\n                    message.success(json.msg);\n\n                    this.props.onRoleSelect(0);\n                }\n\n                if (json.result) {\n                    return json.result;\n                } else {\n                    return true;\n                }\n            } else if (json.msg) {\n                message.error(this._errorMsg(json.msg));\n                return false;\n            }\n        });\n\n\n    };\n\n    onRoleEdit = (ev, id, name) => {\n        let parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n\n        this.props.actionRole('edit', {\n            id: id,\n            name: name\n        }, (json) => {\n            if (json.status === \"ok\") {\n                if (json.msg) {\n                    message.success(json.msg);\n                }\n\n                if (json.result) {\n                    let listRoleItemId = parent.querySelector(`.link-role-name-${id}`);\n                    let inputRoleName  = parent.querySelector(`.input-role-name-${id}`);\n                    let btnRoleEdit    = parent.querySelector(`.btn-role-edit-${id}`);\n                    let btnRoleDelete  = parent.querySelector(`.btn-role-delete-${id}`);\n                    let btnRoleSave    = parent.querySelector(`.btn-role-save-${id}`);\n\n                    listRoleItemId.style.display = \"inline\";\n                    inputRoleName.style.display = \"none\";\n\n                    btnRoleEdit.style.display = \"inline\";\n                    btnRoleDelete.style.display = \"inline\";\n                    btnRoleSave ? btnRoleSave.style.display = \"none\" : null;\n\n                    return json.result;\n                } else {\n                    return true;\n                }\n            } else if(json.msg) {\n                message.error(this._errorMsg(json.msg));\n                return false;\n            }\n        });\n    };\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        if (this.props.visible !== nextProps.visible) {\n            this.setState({\n                visible: nextProps.visible\n            });\n        }\n\n        return true;\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Drawer\n                title={this.props.title}\n                width={550}\n                onClose={this.onClose}\n                visible={this.state.visible}\n                zIndex={1050}\n            >\n                <Row style={{marginBottom:'20px'}}>\n                    <Col span={24}>\n                        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n                            <Form.Item hasFeedback>\n                                {getFieldDecorator('name', {\n                                    // rules: [\n                                    //     { required: true, message: 'Пожалуйста, ввидите код пользователя' }\n                                    // ],\n                                })(<Input placeholder=\"Название новой роли\" />)}\n                            </Form.Item>\n\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Добавить\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24}>\n                        <List\n                            size=\"small\"\n                            style={{marginTop:'10px'}}\n                            bordered\n                            dataSource={this.props.roleList}\n                            renderItem={item =>\n                            <List.Item\n                                className={`list-role-item list-role-item-${item.id}`}\n                                actions={(item.editable) ? [\n                                <ButtonGroup>\n                                    <Button className={`btn-role-edit btn-role-edit-${item.id}`} onClick={(ev) => this.onRoleEditAction(ev, item.id)} size=\"small\" icon=\"edit\" />\n                                    <Popconfirm\n                                        title=\"Удалить роль?\"\n                                        onConfirm={() => this.onRoleDelete(item.id)}\n                                        okText=\"Да\"\n                                        cancelText=\"Нет\"\n                                        placement=\"left\"\n                                        zIndex={1050}\n                                    >\n                                        <Button className={`btn-role-delete btn-role-delete-${item.id}`} size=\"small\" icon=\"delete\" />\n                                    </Popconfirm>\n                                </ButtonGroup>\n                                ] : null}>\n                                <Link onClick={(ev) => {\n                                    this.props.onRoleSelect(ev, item.id)\n                                }} className={`link-role-name link-role-name-${item.id}`} style={{width:'100%'}}>{item.name}</Link>\n\n                                <Search\n                                    className={`input-role-name input-role-name-${item.id}`}\n                                    placeholder=\"Название новой роли\"\n                                    enterButton={<Icon type=\"save\" />}\n                                    size=\"small\"\n                                    defaultValue={item.name}\n                                    onSearch={(value, event) => this.onRoleEdit(event, item.id, value)}\n                                />\n                            </List.Item>}\n                        />\n                    </Col>\n                </Row>\n            </Drawer>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_add_form',\n    mapPropsToFields(props) {\n        return {\n            title: Form.createFormField({\n                ...props.sourceTitle,\n                value: props.sourceTitle,\n            }),\n        };\n    },\n})(UserAddFormModel);\n","'use strict';\n\nimport React from 'react';\nimport Helmet from \"react-helmet\";\nimport classNames from \"classnames\";\nimport {Link} from \"react-router\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport {\n    userEdit as actionEdit,\n    userCurrent as actionCurrent,\n} from '../../store/actions/user';\n\nimport {permission as actionPermission, role as actionRole } from '../../store/actions/role';\n\nimport {Collapse, Card, List, Menu, PageHeader, Layout, Spin, Icon, Row, Col, Popover, Button} from 'antd';\nconst { Header, Content, Sider } = Layout;\nconst Panel = Collapse.Panel;\nconst { Meta } = Card;\n\nimport Logout from 'modules/login/component/logout';\n\nimport UserAddForm from \"./source_add_form\";\n\nclass Roles extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            selectRoleName: 'Гость',\n            selectRoleId: 0,\n\n            collapsed: true,\n            visibleSourceAddForm: false,\n            visibleId: null,\n            items: props.items,\n            loading: true,\n            operationId: '',\n        };\n\n        this.props.actionCurrent();\n        this.props.actionRole('items');\n\n        this.props.actionPermission('item', {id:0});\n    }\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visibleSourceAddForm: false,\n        });\n    };\n\n    onOpen = () => {\n        this.setState({\n            visibleSourceAddForm: !this.state.visibleSourceAddForm,\n            visibleId: 1\n        });\n    };\n\n    onRoleSelect = (ev, id) => {\n        for (let i=0; i < this.props.role.length; i++) {\n            let item = this.props.role[i];\n\n            if (item.id === id) {\n                this.setState({\n                    selectRoleName: item.name,\n                    selectRoleId: item.id,\n                });\n\n                this.props.actionPermission('item', {id:item.id});\n\n                break;\n            }\n        }\n\n        let listRoleItems = document.querySelectorAll(\".list-role-item\");\n        listRoleItems.forEach((item) => {\n            item.setAttribute(\"style\", \"background: #fff\");\n        });\n\n        let listRoleItemId = document.querySelector(`.list-role-item-${id}`);\n        listRoleItemId.setAttribute(\"style\", \"background: #fafafa\");\n    };\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        return nextProps.permission !== this.props.permission ||\n            nextState.visibleSourceAddForm !== this.state.visibleSourceAddForm ||\n            nextState.collapsed !== this.state.collapsed ||\n            nextProps.role !== this.props.role;\n    };\n\n    permissionsSwitch = (group, permission, enabled) => {\n        this.props.actionPermission('switch', {\n            enabled: enabled,\n            permission_id: permission,\n            role_id: this.state.selectRoleId\n        });\n    };\n\n    render()\n    {\n        if (this.props.current) {\n            let isLoad = (this.props.current) ? false : true;\n\n            return (\n                <Layout>\n                    <Sider width={300} trigger={null} collapsible collapsed={this.state.collapsed}>\n                        <div className=\"logo\">\n                            USER\n                        </div>\n                        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['2']}>\n                            <Menu.Item key=\"1\">\n                                <Link  to=\"/\"><Icon type=\"team\" /><span>Пользователи</span></Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"2\">\n                                <Link  to=\"/role\"><Icon type=\"cluster\" /><span>Роли</span></Link>\n                            </Menu.Item>\n                            <Menu.ItemGroup key=\"roles\" title=\"\">\n                                {\n                                    (this.props.role)\n                                    ?\n                                        this.props.role.map((item) =>\n                                            <Menu.Item onClick={(ev) => {\n                                                this.onRoleSelect(ev, item.id)\n                                            }} key={`role-${item.id}`}>\n                                                <Icon type=\"property-safety\" />\n                                                <span>{item.name}</span>\n                                            </Menu.Item>\n                                        )\n                                    :null\n                                }\n                            </Menu.ItemGroup>\n                        </Menu>\n                    </Sider>\n                    <Layout>\n                        <Helmet title={this.state.selectRoleName} />\n                        <Header>\n                            <PageHeader\n                                title={<span><Icon\n                                    className=\"trigger\"\n                                    type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                                    onClick={this.toggle}\n                                />Управление ролями</span>}\n                                subTitle={`текущая: ${this.state.selectRoleName}`}\n                                extra={[\n                                    <Button key=\"add-role\" className=\"btn-user-add\" onClick={() => this.onOpen()} type=\"primary\" size=\"small\">\n                                        Управление ролями\n                                    </Button>,\n                                    <Logout key=\"logout-1\" />\n                                ]}\n                            />\n                        </Header>\n                        <Content className='user-list'>\n                            <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n                                <Row>\n                                    <Col span={24}>\n                                        <Collapse defaultActiveKey={['1']}>\n                                        {\n                                            (this.props.permission.modules) ?\n                                                this.props.permission.modules.map((item) =>\n                                                    <Panel header={`${item.name}: ${item.desc}`} key={item.group}>\n                                                        <List\n                                                            grid={{\n                                                                gutter: 16,\n                                                                xs: 1,\n                                                                sm: 1,\n                                                                md: 2,\n                                                                lg: 3,\n                                                                xl: 4,\n                                                                xxl: 4,\n                                                            }}\n                                                            dataSource={item.permissions}\n                                                            renderItem={(item, i) => (\n                                                                <List.Item>\n                                                                    <Link  onClick={() => { this.permissionsSwitch(item.group, item.id, item.enabled) }}>\n                                                                        <Popover content={item.desc} title={item.name}>\n                                                                        <Card\n                                                                            className={\n                                                                                classNames('permissions-default', {\n                                                                                    'permissions-enabled': item.enabled,\n                                                                                })\n                                                                            }\n                                                                            size=\"small\"\n                                                                        >\n                                                                            <Meta\n                                                                                avatar={\n                                                                                    (item.enabled) ? <Icon type=\"check\" /> : <Icon type=\"stop\" />\n                                                                                }\n                                                                                title={item.name}\n                                                                                //description=\"Описание\"\n                                                                            />\n\n                                                                        </Card>\n                                                                        </Popover>\n                                                                    </Link>\n                                                                </List.Item>\n                                                            )}\n                                                        />\n                                                    </Panel>\n                                                )\n                                            : null\n                                        }\n                                        </Collapse>\n                                    </Col>\n\n                                    <UserAddForm\n                                        visible={this.state.visibleSourceAddForm}\n                                        visibleId={this.state.visibleId}\n                                        title='Роли'\n                                        onRoleSelect={this.onRoleSelect}\n                                        roleList={this.props.role}\n                                        actionRole={this.props.actionRole}\n\n                                        onClose={this.onClose} wrappedComponentRef={(form) => this.form = form}\n                                    />\n                                </Row>\n                            </Spin>\n                        </Content>\n                    </Layout>\n                </Layout>\n            );\n        } else {\n            return null\n        }\n    }\n}\n\nexport default connect(\n    (state) => {\n        return {\n            access: state.user.access,\n            current: state.user.current,\n            role: state.role.role,\n            permission: state.role.permission\n        };\n    },\n    (dispatch) => bindActionCreators({actionCurrent, actionEdit, actionPermission, actionRole, dispatch}, dispatch)\n)(Roles);\n","import React, {Component} from 'react';\nimport {Provider} from 'react-redux';\n\nimport UserStore from './store/state';\n\nimport Index from './component/main/index';\n\nimport './less/index.less';\n\nclass EditMain extends Component {\n    render() {\n        return (\n            <Provider store={UserStore}>\n                <Index\n                    header={this.props.header}\n                    location={this.props.location}\n                    params={this.props.params}\n                />\n            </Provider>\n        );\n    }\n}\n\nexport default EditMain;"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./modules/users/route.js","webpack:///./modules/users/config.js","webpack:///./modules/users/store/middlewares/user.js","webpack:///./modules/users/store/reducers/user.js","webpack:///./modules/users/store/state.js","webpack:///./modules/users/store/api/user.js","webpack:///./modules/users/store/actions/user.js","webpack:///./modules/users/component/main/user_table_item.jsx","webpack:///./modules/users/component/main/user_add_form.jsx","webpack:///./modules/users/component/main/index.jsx","webpack:///./modules/users/main.jsx"],"names":["getComponent","location","cb","require","model","api","items","delete","add","current","middleware","store","next","action","config","includes","type","middlewareAction","MODEL","toUpperCase","actionReducers","status","state","data","combineForms","loading","save","header","createStoreWithMiddleware","applyMiddleware","user","thunk","createStore","combineReducers","reducers","query","pointApi","Query","post","modelUser","callback","code","name","login","result","then","json","domain","appConfig","auth","get","actionKey","actions","promise","UserTableItem","this","props","isAdmin","isReprintAdmin","userCode","userName","userLogin","access","userId","admin","reprintAdmin","className","Group","update","title","to","onConfirm","onDeleteUser","okText","cancelText","placement","zIndex","size","icon","Component","PropTypes","objectOf","shape","arrayOf","bool","isRequired","number","string","style","position","left","bottom","width","borderTop","padding","background","textAlign","formItemLayout","labelCol","xs","span","sm","wrapperCol","UserAddFormModel","DrawerWidth","DrawerZIndex","e","preventDefault","form","validateFieldsAndScroll","err","values","confirm","actionUser","msg","message","success","urlQuery","error","_errorMsg","onClose","value","target","setState","confirmDirty","rule","getFieldValue","validateFields","force","getFieldDecorator","visible","onSubmit","handleSubmit","gutter","marginBottom","Item","label","hasFeedback","rules","required","min","placeholder","validator","validateToNextPassword","Password","compareToFirstPassword","onBlur","handleConfirmBlur","valuePropName","onClick","marginRight","htmlType","Form","create","mapPropsToFields","console","log","Header","Layout","Content","Sider","Users","operator_id","visibleUserAddForm","collapsedSiderMenu","sort","nextProps","nextState","isUpdate","history","push","pathname","siderWidth","menuSelectedKeys","_loadingDataServer","trigger","collapsible","collapsed","theme","mode","defaultSelectedKeys","key","tip","spinning","_switchSiderMenu","subTitle","extra","onOpenUserAddForm","overlayClassName","striped","thead","id","fsort","_fsort","map","item","operator_code","operator_name","operator_login","is_admin","is_reprint_admin","paginate","url","onQuery","onCloseUserAddForm","wrappedComponentRef","React","connect","Array","isArray","dispatch","bindActionCreators","UsersMain","UserStore"],"mappings":"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","file":"users.js?hash=a7b65a53612fc73ca879","sourcesContent":["'use strict';\n\nexport default {\n    getComponent(location, cb) {\n        require.ensure([], (require) => {\n            cb(null, require('./main').default);\n        });\n    }\n};","'use strict';\n\nexport default {\n    model: 'user',\n    api: {\n        items:   'interface-users/items',\n        delete:  'interface-users/user-delete',\n        add:     'interface-users/user-add',\n        current: 'interface-users/user-current'\n    },\n    middleware: [\n        'USER_ADD',\n        'USER_DELETE',\n        'USER_ITEMS',\n        'USER_CURRENT',\n        'USER_HEADER'\n    ]\n}\n","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\n\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport {combineForms} from 'react-redux-form';\nimport config from '../../config';\n\nconst MODEL = config.model.toUpperCase();\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineForms({\n    loading:  actionReducers([\n        `${MODEL}_ITEMS_LOADING`,\n        `${MODEL}_DELETE_LOADING`\n    ]),\n    items: actionReducers([\n        `${MODEL}_ITEMS_LOADED`\n    ]),\n    save: actionReducers([\n        `${MODEL}_ADD_LOADED`\n    ]),\n    header: actionReducers([\n        `${MODEL}_HEADER_LOADED`\n    ]),\n    current: actionReducers([\n        `${MODEL}_CURRENT_LOADED`\n    ])\n}, config.model);\n","'use strict';\n\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n//import {createLogger} from 'redux-logger';\n\nimport user from './middlewares/user';\n\n//Найдет и загрузит все reducers из папки\nimport * as reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(\n    user,\n    thunk//, createLogger({collapsed:true})\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers(reducers));\n","'use strict';\n\nimport {Query} from 'modules/app/core';\n\nimport appConfig from 'config';\nimport config from '../../config';\n\nfunction query (pointApi, data, type = Query.post) {\n    return new Query({\n        pointApi: pointApi,\n        type: type,\n        data: data\n    });\n}\n\nexport function modelUser(action, data, callback)\n{\n    switch (action.toUpperCase()) {\n        case 'HEADER':\n            return {\n                code: (data.code !== 0)? data.code : '',\n                name: (data.name !== 0)? data.name : '',\n                login: (data.login !== 0)? data.login : '',\n                status: (data.status === 0)? \"0\" : \"1\"\n            };\n        case 'ITEMS':\n            let queryItems = new Query({\n                pointApi: config.api.items,\n                data: data\n            });\n\n            return queryItems.result();\n        case 'DELETE':\n            return query(config.api.delete, data, Query.post).result(callback).then((json) => {\n                if (json) {\n                    return query(config.api.items).result();\n                }\n            });\n        case 'ADD':\n            return query(config.api.add, data, Query.post).result(callback).then((json) => {\n                if (json) {\n                    return query(config.api.items).result();\n                }\n            });\n        case 'CURRENT':\n            let queryCurrent = new Query({\n                domain: appConfig.domain.auth,\n                type: Query.get,\n                pointApi: config.api.current\n            });\n\n            return queryCurrent.result();\n    }\n}\n","'use strict';\n\nimport {modelUser} from '../api/user';\nimport config from \"../../config\";\n\nconst MODEL = config.model.toUpperCase();\n\nexport function user(action, data, callback) {\n    const actionKey = action.toUpperCase();\n\n    return {\n        type: `${MODEL}_${actionKey}`,\n        actions: [`${MODEL}_${actionKey}_LOADING`,`${MODEL}_${actionKey}_LOADED`,`${MODEL}_${actionKey}_LOAD_FAILURE`],\n        promise: modelUser(action, data, callback),\n    };\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Icon, Button, Popconfirm} from 'antd';\n\nimport {Link} from 'react-router';\n\nexport default class UserTableItem extends Component\n{\n    static propTypes = {\n        access: PropTypes.objectOf(PropTypes.shape({\n            user: PropTypes.arrayOf(PropTypes.shape({\n                delete: PropTypes.bool.isRequired,\n                update: PropTypes.bool.isRequired,\n            })),\n        })),\n        isAdmin: PropTypes.bool,\n        isReprintAdmin: PropTypes.bool,\n        userCode: PropTypes.number,\n        userId: PropTypes.number.isRequired,\n        userLogin: PropTypes.string.isRequired,\n        userName: PropTypes.string.isRequired,\n    };\n\n    render()\n    {\n        const {isAdmin, isReprintAdmin, userCode, userName, userLogin, access, userId} = this.props;\n\n        let admin = (isAdmin) ? 'Да' : 'Нет';\n        let reprintAdmin = (isReprintAdmin) ? 'Да' : 'Нет';\n\n        return (\n            <tr>\n                <td>{userCode}</td>\n                <td>{userName}</td>\n                <td>{userLogin}</td>\n                <td>{admin}</td>\n                <td>{reprintAdmin}</td>\n\n                <td className=\"box-button\">\n                    <Button.Group>\n                    {\n                        (access.user.update)\n                        ?\n                            <Link className=\"ant-btn ant-btn-primary ant-btn-sm ant-btn-icon-only\" title=\"Изменить\" to={`/user/edit/${userId}/data`}>\n                                <Icon type=\"edit\" />\n                            </Link>\n                        : null\n                    }\n                    {\n                        (access.user.delete)\n                        ?\n                            <Popconfirm\n                                title=\"Удалить пользователя?\"\n                                onConfirm={() => this.props.onDeleteUser(userId)}\n                                okText=\"Да\"\n                                cancelText=\"Нет\"\n                                placement=\"left\"\n                                zIndex={1050}\n                            >\n                                <Button type=\"primary\" size=\"small\" icon=\"delete\" />\n                            </Popconfirm>\n                        : null\n                    }\n                    </Button.Group>\n                </td>\n            </tr>\n        )\n    }\n}","import React, {Component} from \"react\";\n\nimport {Form, Button, Row, Input, InputNumber, Switch, Drawer, message} from 'antd';\n\nconst style = {\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    width: '100%',\n    borderTop: '1px solid #e9e9e9',\n    padding: '10px 16px',\n    background: '#fff',\n    textAlign: 'right',\n    zIndex:2000\n};\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 12 },\n    },\n};\n\nclass UserAddFormModel extends Component\n{\n    state = {\n        DrawerWidth: 550,\n        DrawerZIndex: 1050\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                delete values.confirm;\n\n                this.props.actionUser('add', values, (json) => {\n                    if (json.status === \"ok\") {\n                        if (json.msg) {\n                            message.success(json.msg);\n\n                            this.props.actionUser('items', this.props.urlQuery);\n                        }\n\n                        return true;\n                    } else if(json.msg) {\n                        message.error(this._errorMsg(json.msg));\n                        return false;\n                    }\n                });\n            }\n        });\n    };\n\n    onClose = () => {\n        this.props.onClose();\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Пароли не совпадают!');\n        } else {\n            callback();\n        }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Drawer\n                title={this.props.title}\n                width={this.state.DrawerWidth}\n                onClose={this.onClose}\n                visible={this.props.visible}\n                zIndex={this.state.DrawerZIndex}\n            >\n                <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                    <Row gutter={16} style={{marginBottom:'20px'}}>\n                        <Form.Item label=\"Код\" hasFeedback>\n                            {getFieldDecorator('operator_code', {\n                                rules: [\n                                    { required: true, message: 'Пожалуйста, ввидите код пользователя' }\n                                ],\n                            })(<InputNumber style={{ width: '65%' }} min={1} placeholder=\"Код пользователя\" />)}\n                        </Form.Item>\n\n                        <Form.Item label=\"Имя\" hasFeedback>\n                            {getFieldDecorator('operator_name', {\n                                rules: [\n                                    { required: true, message: 'Пожалуйста, ввидите имя пользователя' }\n                                ],\n                            })(<Input placeholder=\"Имя пользователя\" />)}\n                        </Form.Item>\n\n                        <Form.Item label=\"Логин\" hasFeedback>\n                            {getFieldDecorator('operator_login', {\n                                rules: [\n                                    { required: true, message: 'Пожалуйста, ввидите логин пользователя' }\n                                ],\n                            })(<Input placeholder=\"Логин пользователя\" />)}\n                        </Form.Item>\n\n                        <Form.Item label=\"Пароль\" hasFeedback>\n                            {getFieldDecorator('password', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: 'Пожалуйста, введите пароль!',\n                                    },\n                                    {\n                                        validator: this.validateToNextPassword,\n                                    },\n                                ],\n                            })(<Input.Password />)}\n                        </Form.Item>\n                        <Form.Item label=\"Повторить пароль\" hasFeedback>\n                            {getFieldDecorator('confirm', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: 'Пожалуйста, повторите пароль!',\n                                    },\n                                    {\n                                        validator: this.compareToFirstPassword,\n                                    },\n                                ],\n                            })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n                        </Form.Item>\n                        <Form.Item label=\"Администратор\">\n                            {getFieldDecorator('is_admin', { valuePropName: 'checked' })(<Switch />)}\n                        </Form.Item>\n                        <Form.Item label=\"Перепечать\">\n                            {getFieldDecorator('is_reprint_admin', { valuePropName: 'checked' })(<Switch />)}\n                        </Form.Item>\n                    </Row>\n                    <Row\n                        style={style}\n                    >\n                        <Button onClick={this.onClose} style={{ marginRight: 8 }}>\n                            Закрыить\n                        </Button>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Отправить\n                        </Button>\n                    </Row>\n                </Form>\n            </Drawer>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_add_form',\n    mapPropsToFields(props) {\n        return {\n\n        };\n    },\n})(UserAddFormModel);\n","'use strict';\n\nconsole.log('user index');\n\nimport config from 'config';\n\nimport React from 'react';\nimport Helmet from \"react-helmet\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from \"react-router\";\n\nimport { Pagination, Filter, Sorting, Search, Table, Logout } from 'modules/app/core';\n\nimport { user as actionUser } from '../../store/actions/user';\n\nimport { Menu, PageHeader, Layout, Row, Col, Spin, Icon, Button, message } from 'antd';\nconst { Header, Content, Sider } = Layout;\n\nimport UserTableItem from './user_table_item';\nimport UserAddForm from \"./user_add_form\";\n\nclass Users extends React.Component\n{\n    static defaultProps = {\n        loading: true,\n        location: {\n            query: {}\n        }\n    };\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            siderWidth: 200,\n            menuSelectedKeys: ['left-menu-1'],\n\n            collapsedSiderMenu: props.collapsedSiderMenu,\n            visibleUserAddForm: props.visibleUserAddForm,\n        };\n\n        props.actionUser('current');\n        this._loadingDataServer();\n    }\n\n    /**\n     * Delete user\n     * @param userId\n     */\n    onDeleteUser = userId => {\n        this.props.actionUser('delete', {\n            operator_id: userId\n            }, (json) => {\n            if (json.status === \"ok\") {\n                if (json.msg) {\n                    message.success(json.msg);\n                    this.props.actionUser('items', this.props.location.query);\n                }\n\n                return true;\n            } else if(json.msg) {\n                message.error(this._errorMsg(json.msg));\n                return false;\n            }\n        });\n    };\n\n    /**\n     * Open the add user form\n     */\n    onCloseUserAddForm = () => {\n        this.setState({\n            visibleUserAddForm: false,\n        });\n    };\n\n    /**\n     * Close the add user form\n     */\n    onOpenUserAddForm = () => {\n        this.setState({\n            visibleUserAddForm: !this.state.visibleUserAddForm\n        });\n    };\n\n    /**\n     * Open or close the menu\n     * @private\n     */\n    _switchSiderMenu = () => {\n        this.setState({\n            collapsedSiderMenu: !this.state.collapsedSiderMenu,\n        });\n    };\n\n    _fsort = sort => {\n        this.props.location.query.sort = sort;\n        this.props.actionUser('items', this.props.location.query);\n    };\n\n    /**\n     * Downloading data from a remote server\n     * @private\n     */\n    _loadingDataServer = () => {\n        this.props.actionUser('header', this.props.location.query);\n        this.props.actionUser('items', this.props.location.query);\n    };\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        const {location, header} = this.props;\n\n        let isUpdate = false;\n\n        if ((location.query.name !== nextProps.header.name) &&\n            (header.name !== nextProps.header.name)) {\n            location.query.name = nextProps.header.name;\n\n            config.history.push({pathname: '/', query: location.query});\n            isUpdate = true;\n        } else if (location.query.name === '') {\n            delete location.query.name;\n            config.history.push({pathname: '/', query: location.query});\n        }\n\n        if ((location.query.code !== nextProps.header.code) &&\n            (header.code !== nextProps.header.code)) {\n            location.query.code = nextProps.header.code;\n\n            config.history.push({pathname: '/', query: location.query});\n            isUpdate = true;\n        } else if (location.query.code === '') {\n            delete location.query.code;\n            config.history.push({pathname: '/', query: location.query});\n        }\n\n        if ((location.query.login !== nextProps.header.login) &&\n            (header.login !== nextProps.header.login)) {\n\n            location.query.login = nextProps.header.login;\n\n            config.history.push({pathname: '/', query: location.query});\n            isUpdate = true;\n        } else if (location.query.login === '') {\n            delete location.query.login;\n            config.history.push({pathname: '/', query: location.query});\n        }\n\n        if (isUpdate) {\n            this.props.actionUser('items', this.props.location.query);\n        }\n\n        if (this.props.loading && !nextProps.loading) {\n            this.setState({\n                loading: nextProps.loading\n            });\n        }\n\n        return this.props.loading !== nextProps.loading ||\n            this.state.collapsedSiderMenu !== nextState.collapsedSiderMenu ||\n            this.state.visibleUserAddForm !== nextState.visibleUserAddForm ||\n            this.props.items !== nextProps.items;\n    };\n\n    render()\n    {\n        return (\n            <Layout>\n                <Sider width={this.state.siderWidth} trigger={null} collapsible collapsed={this.state.collapsedSiderMenu}>\n                    <div className=\"logo\">USER</div>\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={this.state.menuSelectedKeys}>\n                        <Menu.Item key=\"left-menu-1\">\n                            <Link to=\"/\"><Icon type=\"team\" /><span>Пользователи</span></Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"left-menu-2\">\n                            <Link to=\"/role\"><Icon type=\"cluster\" /><span>Роли</span></Link>\n                        </Menu.Item>\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Spin tip=\"Загрузка...\" size=\"large\" spinning={this.props.loading}>\n                        <Helmet title=\"Users\" />\n                        <Header>\n                            <PageHeader\n                                title={<span><Icon\n                                    className=\"trigger\"\n                                    type={this.state.collapsedSiderMenu ? 'menu-unfold' : 'menu-fold'}\n                                    onClick={this._switchSiderMenu}\n                                />Users</span>}\n                                subTitle=\"Пользователи\"\n                                extra={[\n                                    <Button key=\"add-user\" className=\"btn-user-add\" onClick={() => this.onOpenUserAddForm()} type=\"primary\" icon=\"user-add\" size=\"small\">\n                                        Добавить пользователя\n                                    </Button>,\n                                    <Logout key=\"logout-1\" />\n                                ]}\n                            />\n                        </Header>\n                        <Content className='user-list'>\n                            <Row>\n                                <Col span={24}>\n                                    <Table overlayClassName=\"table-users\" striped={false} thead={[\n                                        <Filter>\n                                            <Search model=\"user.header.code\" value={this.props.header.code} placeholder=\"Код\" />\n                                            <Sorting id='code' fsort={this._fsort} />\n                                        </Filter>,\n                                        <Filter>\n                                            <Search model=\"user.header.name\" value={this.props.header.name} placeholder=\"Имя\" />\n                                            <Sorting id='name' fsort={this._fsort} />\n                                        </Filter>,\n                                        <Filter>\n                                            <Search model=\"user.header.login\" value={this.props.header.login} placeholder=\"Логин\" />\n                                            <Sorting id='login' fsort={this._fsort} />\n                                        </Filter>,\n                                        <span>Админ</span>,\n                                        <span>Перепечать</span>,\n                                        <span></span>\n                                    ]}>\n                                        {\n                                            (this.props.items)\n                                            ?\n                                                this.props.items.map((item) => <UserTableItem\n                                                    key={item.operator_id}\n                                                    userId={item.operator_id}\n                                                    userCode={item.operator_code}\n                                                    userName={item.operator_name}\n                                                    userLogin={item.operator_login}\n                                                    isAdmin={item.is_admin}\n                                                    isReprintAdmin={item.is_reprint_admin}\n\n                                                    access={this.props.access}\n\n                                                    onDeleteUser={this.onDeleteUser}\n                                                />)\n                                            : null\n                                        }\n                                    </Table>\n                                </Col>\n                                <Col span={24}>\n                                    {\n                                        (this.props.paginate)\n                                        ?\n                                            <Pagination\n                                                url=\"/\"\n                                                data={this.props.paginate}\n                                                onQuery={(query) => {\n                                                    this.props.actionUser('items', query);\n                                                }}\n                                            />\n                                        : null\n                                    }\n                                </Col>\n                                <UserAddForm\n                                    title=\"Добавить пользователя\"\n                                    visible={this.state.visibleUserAddForm}\n                                    urlQuery={this.props.location.query}\n                                    actionUser={this.props.actionUser}\n                                    onClose={this.onCloseUserAddForm} wrappedComponentRef={(form) => this.form = form}\n                                />\n                            </Row>\n                        </Content>\n                    </Spin>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n\nexport default connect(\n    (state) => {\n        return {\n            loading: (Array.isArray(state.user.loading)) ? true : state.user.loading,\n            header: state.user.header,\n            items: state.user.items.data,\n            paginate: state.user.items.paginate,\n            access: state.user.items.access,\n            current: state.user.current,\n        };\n    },\n    (dispatch) => bindActionCreators({actionUser, dispatch}, dispatch)\n)(Users);\n","import React, {Component} from 'react';\nimport {Provider} from 'react-redux';\n\nimport UserStore from './store/state';\n\nimport Index from './component/main/index';\n\nimport './less/index.less';\n\nclass UsersMain extends Component {\n\n    static defaultProps = {\n        visibleUserAddForm: false,\n        collapsedSiderMenu: true\n    };\n\n    render() {\n        return (\n            <Provider store={UserStore}>\n                <Index\n                    header={this.props.header}\n                    location={this.props.location}\n                    visibleUserAddForm={this.props.visibleUserAddForm}\n                    collapsedSiderMenu={this.props.collapsedSiderMenu}\n                />\n            </Provider>\n        );\n    }\n}\n\nexport default UsersMain;"],"sourceRoot":""}
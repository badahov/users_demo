{"version":3,"sources":["webpack:///./modules/users/index.js","webpack:///./modules/users/state.js","webpack:///./modules/users/api.js","webpack:///./modules/users/component/user_table_item.jsx","webpack:///./modules/users/component/forms/add/form.jsx","webpack:///./modules/users/component/forms/add/index.js","webpack:///./modules/users/component/main.jsx","webpack:///./modules/users/component/index.js","webpack:///./modules/users/main.jsx"],"names":["getComponent","nextState","component","then","mad","noop","createStoreWithMiddleware","applyMiddleware","middleware","thunk","createStore","combineReducers","system","reducer","name","models","points","entryPoints","query","pointApi","data","type","Query","api","action","callback","code","login","status","result","domain","appConfig","auth","UserTableItem","props","isAdmin","isReprintAdmin","userCode","userName","userLogin","access","userId","onDeleteUser","admin","reprintAdmin","user","isUpdate","update","isDelete","className","Group","title","to","isAction","onConfirm","okText","cancelText","placement","zIndex","size","icon","tmplButtonDelete","propTypes","PropTypes","shape","delete","bool","isRequired","number","string","func","style","position","left","bottom","width","borderTop","padding","background","textAlign","formItemLayout","labelCol","xs","span","sm","wrapperCol","UserAddFormModel","e","form","submitForm","preventDefault","validateFieldsAndScroll","err","values","confirm","value","target","confirmDirty","state","setState","rule","getFieldValue","validateFields","force","DrawerWidth","DrawerZIndex","this","onClose","visible","getFieldDecorator","onSubmit","handleSubmit","gutter","marginBottom","Item","label","hasFeedback","rules","required","message","min","placeholder","validator","validateToNextPassword","Password","compareToFirstPassword","onBlur","handleConfirmBlur","valuePropName","onClick","marginRight","htmlType","Component","objectOf","Form","create","FormAdd","Header","Layout","Content","Sider","helmetContext","Users","visibleUserAddForm","collapsedSiderMenu","siderWidth","menuSelectedKeys","modelCurrentUser","modelServer","nextProps","items","header","modelItems","loading","location","page","Filters","params","nextHeader","JSON","stringify","setHeader","sort","modelDelete","paginate","modelAdd","context","trigger","collapsible","collapsed","theme","mode","defaultSelectedKeys","key","tip","spinning","subTitle","switchSiderMenu","extra","onOpenUserAddForm","overlayClassName","striped","thead","model","id","fsort","map","item","operator_id","operator_code","operator_name","operator_login","is_admin","is_reprint_admin","url","onQuery","urlQuery","onCloseUserAddForm","wrappedComponentRef","React","defaultProps","arrayOf","object","accessTypes","locationTypes","paginateTypes","connectAdvanced","dispatch","module","ownProps","sendTo","creator","modelHeader","json","setSort","nextOwnProps","nextResult","isNull","userItems","userHeader","current","userCurrent","shallowEqual","Module","store","UserStore","oneOfType","any"],"mappings":"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","file":"users.js?hash=3050f2f23596eb9d00f2","sourcesContent":["import noop from 'lodash/noop';\n\nexport default {\n  getComponent(nextState, component) {\n    import('./main').then((mad) => component(null, mad.default)).catch(() => noop);\n  },\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\n\nimport thunk from 'redux-thunk';\n\nimport middleware from '../app/middleware';\nimport reducer from '../app/reducer';\n\n// import {createLogger} from 'redux-logger';\n\nconst module = {\n  name: 'system',\n  models: [\n    {\n      name: 'user',\n      points: ['header', 'items', 'current'],\n    },\n  ],\n};\n\nconst createStoreWithMiddleware = applyMiddleware(\n  middleware('system'),\n  thunk,\n  // createLogger({collapsed:true}),\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers({\n  system: reducer(module),\n}));\n","import Query from '../app/component/core/query';\nimport appConfig from '../../config';\n\nconst entryPoints = {\n  items: 'interface-users/items',\n  delete: 'interface-users/user-delete',\n  add: 'interface-users/user-add',\n  current: 'interface-users/user-current',\n};\n\nconst typeGet = 'GET';\nconst typePost = 'POST';\n\nfunction query(pointApi, data, type = typePost) {\n  return new Query({\n    pointApi,\n    type,\n    data,\n  });\n}\n\nexport default function api(action, data, callback) {\n  switch (action) {\n    case 'userHeader':\n      return {\n        code: (data.code !== 0) ? data.code : '',\n        name: (data.name !== 0) ? data.name : '',\n        login: (data.login !== 0) ? data.login : '',\n        status: (data.status === 0) ? '0' : '1',\n      };\n    case 'userItems':\n      return (new Query({\n        data,\n        pointApi: entryPoints.items,\n      })).result();\n    case 'userDelete':\n      return query(entryPoints.delete, data).result(callback);\n    case 'userAdd':\n      return query(entryPoints.add, data).result(callback);\n    case 'userCurrent':\n      return (new Query({\n        domain: appConfig.domain.auth,\n        type: typeGet,\n        pointApi: entryPoints.current,\n      })).result();\n    default:\n      return null;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Button, Popconfirm } from 'antd';\n\nimport { Link } from 'react-router';\n\nconst UserTableItem = (props) => {\n  const {\n    isAdmin,\n    isReprintAdmin,\n    userCode,\n    userName,\n    userLogin,\n    access,\n    userId,\n    onDeleteUser,\n  } = props;\n\n  const admin = (isAdmin) ? 'Да' : 'Нет';\n  const reprintAdmin = (isReprintAdmin) ? 'Да' : 'Нет';\n\n  const { update: isUpdate, delete: isDelete } = access.user;\n\n  const tmplButtonEdit = (isAction) => {\n    if (isAction) {\n      return (\n        <Link\n          className=\"ant-btn ant-btn-primary ant-btn-sm ant-btn-icon-only\"\n          title=\"Изменить\"\n          to={`/user/edit/${userId}/data`}\n        >\n          <Icon type=\"edit\" />\n        </Link>\n      );\n    }\n\n    return null;\n  };\n\n  const tmplButtonDelete = (isAction) => {\n    if (isAction) {\n      return (\n        <Popconfirm\n          title=\"Удалить пользователя?\"\n          onConfirm={() => onDeleteUser(userId)}\n          okText=\"Да\"\n          cancelText=\"Нет\"\n          placement=\"left\"\n          zIndex={1050}\n        >\n          <Button type=\"primary\" size=\"small\" icon=\"delete\" />\n        </Popconfirm>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <tr>\n      <td>{userCode}</td>\n      <td>{userName}</td>\n      <td>{userLogin}</td>\n      <td>{admin}</td>\n      <td>{reprintAdmin}</td>\n\n      <td className=\"box-button\">\n        <Button.Group>\n          { tmplButtonEdit(isUpdate) }\n          { tmplButtonDelete(isDelete) }\n        </Button.Group>\n      </td>\n    </tr>\n  );\n};\n\nUserTableItem.propTypes = {\n  access: PropTypes.shape({\n    user: PropTypes.shape({\n      delete: PropTypes.bool.isRequired,\n      update: PropTypes.bool.isRequired,\n    }).isRequired,\n  }).isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  isReprintAdmin: PropTypes.bool.isRequired,\n  userCode: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  userLogin: PropTypes.string.isRequired,\n  userName: PropTypes.string.isRequired,\n  onDeleteUser: PropTypes.func.isRequired,\n};\n\nexport default UserTableItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  Button,\n  Row,\n  Input,\n  InputNumber,\n  Switch,\n  Drawer,\n} from 'antd';\n\nconst style = {\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  width: '100%',\n  borderTop: '1px solid #e9e9e9',\n  padding: '10px 16px',\n  background: '#fff',\n  textAlign: 'right',\n  zIndex: 2000,\n};\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 7 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 12 },\n  },\n};\n\nclass UserAddFormModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      DrawerWidth: 550,\n      DrawerZIndex: 1050,\n    };\n  }\n\n  handleSubmit = (e) => {\n    const { form, submitForm } = this.props;\n\n    e.preventDefault();\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        delete values.confirm;\n        submitForm(values);\n      }\n    });\n  };\n\n  handleConfirmBlur = (e) => {\n    const { value } = e.target;\n    const { confirmDirty } = this.state;\n\n    this.setState({\n      confirmDirty: confirmDirty || !!value,\n    });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Пароли не совпадают!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    const { confirmDirty } = this.state;\n    if (value && confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const {\n      title,\n      onClose,\n      visible,\n      form: {\n        getFieldDecorator,\n      },\n    } = this.props;\n\n    const { DrawerWidth, DrawerZIndex } = this.state;\n\n    return (\n      <Drawer\n        title={title}\n        width={DrawerWidth}\n        onClose={onClose}\n        visible={visible}\n        zIndex={DrawerZIndex}\n      >\n        <Form\n          labelCol={formItemLayout.labelCol}\n          wrapperCol={formItemLayout.wrapperCol}\n          onSubmit={this.handleSubmit}\n        >\n          <Row gutter={16} style={{ marginBottom: '20px' }}>\n            <Form.Item label=\"Код\" hasFeedback>\n              {\n                getFieldDecorator('operator_code', {\n                  rules: [\n                    { required: true, message: 'Пожалуйста, ввидите код пользователя' },\n                  ],\n                })(<InputNumber style={{ width: '65%' }} min={1} placeholder=\"Код пользователя\" />)\n              }\n            </Form.Item>\n\n            <Form.Item label=\"Имя\" hasFeedback>\n              {\n                getFieldDecorator('operator_name', {\n                  rules: [\n                    { required: true, message: 'Пожалуйста, ввидите имя пользователя' },\n                  ],\n                })(<Input placeholder=\"Имя пользователя\" />)\n              }\n            </Form.Item>\n            <Form.Item label=\"Логин\" hasFeedback>\n              {\n                getFieldDecorator('operator_login', {\n                  rules: [\n                    { required: true, message: 'Пожалуйста, ввидите логин пользователя' },\n                  ],\n                })(<Input placeholder=\"Логин пользователя\" />)\n              }\n            </Form.Item>\n            <Form.Item label=\"Пароль\" hasFeedback>\n              {getFieldDecorator('password', {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Пожалуйста, введите пароль!',\n                  },\n                  {\n                    validator: this.validateToNextPassword,\n                  },\n                ],\n              })(<Input.Password />)}\n            </Form.Item>\n            <Form.Item label=\"Повторить пароль\" hasFeedback>\n              {\n                getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Пожалуйста, повторите пароль!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(\n                  <Input.Password\n                    onBlur={\n                      this.handleConfirmBlur\n                    }\n                  />,\n                )\n              }\n            </Form.Item>\n            <Form.Item label=\"Администратор\">\n              {getFieldDecorator('is_admin', { valuePropName: 'checked' })(<Switch />)}\n            </Form.Item>\n            <Form.Item label=\"Перепечать\">\n              {\n                getFieldDecorator('is_reprint_admin', {\n                  valuePropName: 'checked',\n                })(<Switch />)\n              }\n            </Form.Item>\n          </Row>\n          <Row style={style}>\n            <Button onClick={onClose} style={{ marginRight: 8 }}>\n              Закрыить\n            </Button>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Отправить\n            </Button>\n          </Row>\n        </Form>\n      </Drawer>\n    );\n  }\n}\n\nUserAddFormModel.propTypes = {\n  form: PropTypes.objectOf(PropTypes.func).isRequired,\n  title: PropTypes.string.isRequired,\n  visible: PropTypes.bool.isRequired,\n  submitForm: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default UserAddFormModel;\n","import Form from 'antd/lib/form';\n\nimport FormAdd from './form';\n\nexport default Form.create({\n  name: 'user_add_form',\n})(FormAdd);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport map from 'lodash/map';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { Link } from 'react-router';\n\nimport {\n  Menu,\n  PageHeader,\n  Layout,\n  Row,\n  Col,\n  Spin,\n  Icon,\n  Button,\n} from 'antd';\n\nimport UserTableItem from './user_table_item';\nimport UserAddForm from './forms/add';\n\nimport {\n  Pagination,\n  Filter,\n  Sorting,\n  Search,\n  Table,\n  Logout,\n  Text,\n  Filters,\n} from '../../app/core';\n\nimport {\n  accessTypes,\n  locationTypes,\n  paginateTypes,\n} from '../../global/types';\n\nconst { Header, Content, Sider } = Layout;\n\nconst helmetContext = {};\n\nclass Users extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      siderWidth: 200,\n      menuSelectedKeys: ['left-menu-1'],\n\n      collapsedSiderMenu: props.collapsedSiderMenu,\n      visibleUserAddForm: props.visibleUserAddForm,\n    };\n\n    props.modelCurrentUser();\n    props.modelServer();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {\n      items,\n      header,\n      modelItems,\n      loading,\n      location: {\n        query,\n      },\n    } = this.props;\n    const {\n      page,\n      collapsedSiderMenu,\n      visibleUserAddForm,\n    } = this.state;\n\n    const params = ['name', 'code', 'login'];\n\n    (new Filters({\n      params,\n      header,\n      page,\n      query,\n      nextHeader: nextProps.header,\n      action: () => {\n        modelItems(query);\n      },\n    })).isUpdate();\n\n    return items !== nextProps.items\n      || JSON.stringify(header) !== JSON.stringify(nextProps.header)\n      || loading !== nextProps.loading\n      || collapsedSiderMenu !== nextState.collapsedSiderMenu\n      || visibleUserAddForm !== nextState.visibleUserAddForm;\n  }\n\n  /**\n   * Open the add user form\n   */\n  onCloseUserAddForm = () => {\n    this.setState({\n      visibleUserAddForm: false,\n    });\n  };\n\n  /**\n   * Close the add user form\n   */\n  onOpenUserAddForm = () => {\n    const { visibleUserAddForm } = this.state;\n\n    this.setState({\n      visibleUserAddForm: !visibleUserAddForm,\n    });\n  };\n\n  /**\n   * Open or close the menu\n   * @private\n   */\n  switchSiderMenu = () => {\n    const { collapsedSiderMenu } = this.state;\n\n    this.setState({\n      collapsedSiderMenu: !collapsedSiderMenu,\n    });\n  };\n\n  render() {\n    const {\n      loading,\n      setHeader,\n      sort,\n      items,\n      access,\n      modelDelete,\n      paginate,\n      modelItems,\n      modelAdd,\n      header: {\n        code,\n        name,\n        login,\n      },\n      location: {\n        query,\n      },\n    } = this.props;\n\n    const {\n      siderWidth,\n      collapsedSiderMenu,\n      menuSelectedKeys,\n      visibleUserAddForm,\n    } = this.state;\n\n    return (\n      <HelmetProvider context={helmetContext}>\n        <Layout>\n          <Sider width={siderWidth} trigger={null} collapsible collapsed={collapsedSiderMenu}>\n            <div className=\"logo\">USER</div>\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={menuSelectedKeys}>\n              <Menu.Item key=\"left-menu-1\">\n                <Link to=\"/\">\n                  <Icon type=\"team\" />\n                  <span>\n                    Пользователи\n                  </span>\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"left-menu-2\">\n                <Link to=\"/role\">\n                  <Icon type=\"cluster\" />\n                  <span>Роли</span>\n                </Link>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Spin tip=\"Загрузка...\" size=\"large\" spinning={loading}>\n              <Helmet title=\"Users\" />\n              <Header>\n                <PageHeader\n                  subTitle=\"Пользователи\"\n                  title={(\n                    <span>\n                      <Icon\n                        className=\"trigger\"\n                        type={collapsedSiderMenu ? 'menu-unfold' : 'menu-fold'}\n                        onClick={this.switchSiderMenu}\n                      />\n                      Users\n                    </span>\n                  )}\n                  extra={[\n                    <Button\n                      key=\"add-user\"\n                      className=\"btn-user-add\"\n                      type=\"primary\"\n                      icon=\"user-add\"\n                      size=\"small\"\n                      onClick={() => this.onOpenUserAddForm()}\n                    >\n                      Добавить пользователя\n                    </Button>,\n                    <Logout key=\"logout-1\" />,\n                  ]}\n                />\n              </Header>\n              <Content className=\"user-list\">\n                <Row>\n                  <Col span={24}>\n                    <Table\n                      overlayClassName=\"table-users\"\n                      striped={false}\n                      thead={[\n                        <th key=\"ht-1\">\n                          <Filter>\n                            <Search\n                              callback={setHeader}\n                              model=\"code\"\n                              value={code}\n                              placeholder=\"Код\"\n                            />\n                            <Sorting id=\"code\" fsort={sort} />\n                          </Filter>\n                        </th>,\n                        <th key=\"ht-2\">\n                          <Filter>\n                            <Search\n                              callback={setHeader}\n                              model=\"name\"\n                              value={name}\n                              placeholder=\"Имя\"\n                            />\n                            <Sorting id=\"name\" fsort={sort} />\n                          </Filter>\n                        </th>,\n                        <th key=\"ht-3\">\n                          <Filter>\n                            <Search\n                              callback={setHeader}\n                              model=\"login\"\n                              value={login}\n                              placeholder=\"Логин\"\n                            />\n                            <Sorting id=\"login\" fsort={sort} />\n                          </Filter>\n                        </th>,\n                        <th key=\"ht-4\">\n                          <Text>Админ</Text>\n                        </th>,\n                        <th key=\"ht-5\">\n                          <Text>Перепечать</Text>\n                        </th>,\n                        <th key=\"ht-6\" />,\n                      ]}\n                    >\n                      {\n                        (items)\n                          ? map(items, (item) => (\n                            <UserTableItem\n                              key={item.operator_id}\n                              userId={item.operator_id}\n                              userCode={item.operator_code}\n                              userName={item.operator_name}\n                              userLogin={item.operator_login}\n                              isAdmin={item.is_admin}\n                              isReprintAdmin={item.is_reprint_admin}\n                              access={access}\n                              onDeleteUser={modelDelete}\n                            />\n                          ))\n                          : null\n                      }\n                    </Table>\n                  </Col>\n                  <Col span={24}>\n                    {\n                      (paginate)\n                        ? (\n                          <Pagination\n                            url=\"/\"\n                            data={paginate}\n                            onQuery={modelItems}\n                          />\n                        )\n                        : null\n                    }\n                  </Col>\n                  <UserAddForm\n                    title=\"Добавить пользователя\"\n                    visible={visibleUserAddForm}\n                    urlQuery={query}\n                    submitForm={modelAdd}\n                    onClose={this.onCloseUserAddForm}\n                    wrappedComponentRef={(form) => {\n                      this.form = form;\n                    }}\n                  />\n                </Row>\n              </Content>\n            </Spin>\n          </Layout>\n        </Layout>\n      </HelmetProvider>\n    );\n  }\n}\n\nUsers.defaultProps = {\n  items: null,\n  paginate: null,\n};\n\nUsers.propTypes = {\n  collapsedSiderMenu: PropTypes.bool.isRequired,\n  items: PropTypes.arrayOf(PropTypes.object),\n  loading: PropTypes.bool.isRequired,\n  modelAdd: PropTypes.func.isRequired,\n  modelCurrentUser: PropTypes.func.isRequired,\n  modelDelete: PropTypes.func.isRequired,\n  modelItems: PropTypes.func.isRequired,\n  modelServer: PropTypes.func.isRequired,\n  setHeader: PropTypes.func.isRequired,\n  sort: PropTypes.func.isRequired,\n  visibleUserAddForm: PropTypes.bool.isRequired,\n  access: accessTypes.isRequired,\n  location: locationTypes.isRequired,\n  header: PropTypes.shape({\n    code: PropTypes.string,\n    login: PropTypes.string,\n    name: PropTypes.string,\n    status: PropTypes.string,\n  }).isRequired,\n  paginate: paginateTypes,\n};\n\nexport default Users;\n","import isNull from 'lodash/isNull';\nimport { shallowEqual, connectAdvanced } from 'react-redux';\n\nimport creator from '../../app/creator';\nimport api from '../api';\n\nimport Users from './main';\n\nexport default connectAdvanced((dispatch) => {\n  const module = 'system';\n  let ownProps = {};\n  let result = {};\n\n  const sendTo = creator(api, module, dispatch);\n\n  const modelCurrentUser = () => sendTo('userCurrent');\n\n  const modelItems = (data) => sendTo('userItems', data);\n  const modelHeader = (data) => sendTo('userHeader', data);\n\n  const modelAdd = (data) => sendTo('userAdd', data, (json) => {\n    modelItems(ownProps.location.query);\n    return json;\n  });\n\n  /**\n   * User delete\n   * @param id\n   */\n  const modelDelete = (id) => sendTo('userDelete', { id }, (json) => {\n    modelItems(ownProps.location.query);\n    return json;\n  });\n\n  /**\n   * Downloading data from a remote server\n   * @private\n   */\n  const modelServer = () => {\n    modelHeader(ownProps.location.query);\n    modelItems(ownProps.location.query);\n  };\n\n  const setHeader = (name, value) => {\n    ownProps.location.query[name] = value;\n    modelHeader(ownProps.location.query);\n  };\n\n  const sort = (setSort) => {\n    ownProps.location.query.sort = setSort;\n    modelItems(ownProps.location.query);\n  };\n\n  return (nextState, nextOwnProps) => {\n    const loading = isNull(nextState[module].userItems);\n\n    const header = isNull(nextState[module].userItems)\n      ? {}\n      : nextState[module].userHeader;\n\n    const items = isNull(nextState[module].userItems)\n      ? null\n      : nextState[module].userItems.data;\n\n    const paginate = isNull(nextState[module].userItems)\n      ? null\n      : nextState[module].userItems.paginate;\n\n    const access = isNull(nextState[module].userItems)\n      ? {}\n      : nextState[module].userItems.access;\n\n    const current = isNull(nextState[module].userCurrent)\n      ? {}\n      : nextState[module].userCurrent.data;\n\n    const nextResult = {\n      ...nextOwnProps,\n      loading,\n      header,\n      items,\n      paginate,\n      access,\n      current,\n      setHeader,\n      modelCurrentUser,\n      modelItems,\n      modelHeader,\n      modelServer,\n      modelAdd,\n      modelDelete,\n      sort,\n    };\n    ownProps = nextOwnProps;\n    if (!shallowEqual(result, nextResult)) {\n      result = nextResult;\n    }\n\n    return result;\n  };\n})(Users);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\n\nimport UserStore from './state';\n\nimport Index from './component';\n\nimport './css/index.less';\n\nconst Module = (props) => {\n  const { location, visibleUserAddForm, collapsedSiderMenu } = props;\n\n  return (\n    <Provider store={UserStore}>\n      <Index\n        location={location}\n        visibleUserAddForm={visibleUserAddForm}\n        collapsedSiderMenu={collapsedSiderMenu}\n      />\n    </Provider>\n  );\n};\n\nModule.defaultProps = {\n  visibleUserAddForm: false,\n  collapsedSiderMenu: true,\n};\n\nModule.propTypes = {\n  location: PropTypes.oneOfType([\n    PropTypes.any,\n  ]).isRequired,\n  visibleUserAddForm: PropTypes.bool,\n  collapsedSiderMenu: PropTypes.bool,\n};\n\nexport default Module;\n"],"sourceRoot":""}
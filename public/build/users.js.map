{"version":3,"sources":["webpack:///./modules/users/state.js","webpack:///./modules/users/api.js","webpack:///./modules/users/component/user_table_item.jsx","webpack:///./modules/users/component/forms/add/form.jsx","webpack:///./modules/users/component/forms/add/index.js","webpack:///./modules/users/component/main.jsx","webpack:///./modules/users/component/index.js","webpack:///./modules/users/main.jsx"],"names":["createStoreWithMiddleware","applyMiddleware","middleware","thunk","createStore","combineReducers","system","reducer","name","models","points","entryPoints","query","pointApi","data","type","Query","api","action","callback","code","login","status","result","domain","appConfig","auth","UserTableItem","props","isAdmin","isReprintAdmin","userCode","userName","userLogin","access","userId","onDeleteUser","admin","reprintAdmin","user","isUpdate","update","isDelete","className","Group","title","to","isAction","onConfirm","okText","cancelText","placement","zIndex","size","icon","tmplButtonDelete","propTypes","PropTypes","shape","delete","bool","isRequired","number","string","func","React","memo","UserAddFormModel","e","value","target","confirmDirty","state","setState","rule","form","getFieldValue","DrawerWidth","DrawerZIndex","formItemLayout","labelCol","xs","span","sm","wrapperCol","handleSubmit","bind","handleSubmitThrottled","throttle","this","cancel","validateFields","force","preventDefault","submitForm","validateFieldsAndScroll","err","values","confirm","onClose","visible","getFieldDecorator","width","onSubmit","gutter","style","marginBottom","Item","label","hasFeedback","rules","required","message","min","placeholder","validator","validateToNextPassword","Password","compareToFirstPassword","onBlur","handleConfirmBlur","valuePropName","onClick","marginRight","htmlType","Component","objectOf","Form","create","FormAdd","Header","Layout","Content","Sider","helmetContext","Users","visibleUserAddForm","collapsedSiderMenu","siderWidth","menuSelectedKeys","modelItemsDebounced","debounce","modelItems","modelCurrentUser","modelServer","nextProps","nextState","items","header","loading","location","page","Filters","params","nextHeader","model","JSON","stringify","setHeader","sort","modelDelete","paginate","modelAdd","context","trigger","collapsible","collapsed","theme","mode","defaultSelectedKeys","key","tip","spinning","subTitle","switchSiderMenu","extra","onOpenUserAddForm","overlayClassName","striped","thead","id","fsort","map","item","operator_id","operator_code","operator_name","operator_login","is_admin","is_reprint_admin","url","onQuery","urlQuery","onCloseUserAddForm","wrappedComponentRef","defaultProps","arrayOf","object","accessTypes","locationTypes","paginateTypes","connectAdvanced","dispatch","module","ownProps","sendTo","creator","modelHeader","json","setSort","nextOwnProps","nextResult","isNull","userItems","userHeader","current","userCurrent","shallowEqual","Module","store","UserStore","oneOfType","any"],"mappings":"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","file":"users.js?hash=cc28c4743a88231361e4","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\n\nimport thunk from 'redux-thunk';\n\nimport middleware from '../app/middleware';\nimport reducer from '../app/reducer';\n\n// import {createLogger} from 'redux-logger';\n\nconst module = {\n  name: 'system',\n  models: [\n    {\n      name: 'user',\n      points: ['header', 'items', 'current'],\n    },\n  ],\n};\n\nconst createStoreWithMiddleware = applyMiddleware(\n  middleware('system'),\n  thunk,\n  // createLogger({collapsed:true}),\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers({\n  system: reducer(module),\n}));\n","import Query from '../app/component/core/query';\nimport appConfig from '../../config';\n\nconst entryPoints = {\n  items: 'interface-users/items',\n  delete: 'interface-users/user-delete',\n  add: 'interface-users/user-add',\n  current: 'interface-users/user-current',\n};\n\nconst typeGet = 'GET';\nconst typePost = 'POST';\n\nfunction query(pointApi, data, type = typePost) {\n  return new Query({\n    pointApi,\n    type,\n    data,\n  });\n}\n\nexport default function api(action, data, callback) {\n  switch (action) {\n    case 'userHeader':\n      return {\n        code: (data.code !== 0) ? data.code : '',\n        name: (data.name !== 0) ? data.name : '',\n        login: (data.login !== 0) ? data.login : '',\n        status: (data.status === 0) ? '0' : '1',\n      };\n    case 'userItems':\n      return (new Query({\n        data,\n        pointApi: entryPoints.items,\n      })).result();\n    case 'userDelete':\n      return query(entryPoints.delete, data).result(callback);\n    case 'userAdd':\n      return query(entryPoints.add, data).result(callback);\n    case 'userCurrent':\n      return (new Query({\n        domain: appConfig.domain.auth,\n        type: typeGet,\n        pointApi: entryPoints.current,\n      })).result();\n    default:\n      return null;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Button, Popconfirm } from 'antd';\n\nimport { Link } from 'react-router-dom';\n\nconst UserTableItem = (props) => {\n  const {\n    isAdmin,\n    isReprintAdmin,\n    userCode,\n    userName,\n    userLogin,\n    access,\n    userId,\n    onDeleteUser,\n  } = props;\n\n  const admin = (isAdmin) ? 'Да' : 'Нет';\n  const reprintAdmin = (isReprintAdmin) ? 'Да' : 'Нет';\n\n  const { update: isUpdate, delete: isDelete } = access.user;\n\n  const tmplButtonEdit = (isAction) => {\n    if (isAction) {\n      return (\n        <Link\n          className=\"ant-btn ant-btn-primary ant-btn-sm ant-btn-icon-only\"\n          title=\"Изменить\"\n          to={`/user/edit/${userId}/data`}\n        >\n          <Icon type=\"edit\" />\n        </Link>\n      );\n    }\n\n    return null;\n  };\n\n  const tmplButtonDelete = (isAction) => {\n    if (isAction) {\n      return (\n        <Popconfirm\n          title=\"Удалить пользователя?\"\n          onConfirm={() => onDeleteUser(userId)}\n          okText=\"Да\"\n          cancelText=\"Нет\"\n          placement=\"left\"\n          zIndex={1050}\n        >\n          <Button type=\"primary\" size=\"small\" icon=\"delete\" />\n        </Popconfirm>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <tr>\n      <td>{userCode}</td>\n      <td>{userName}</td>\n      <td>{userLogin}</td>\n      <td>{admin}</td>\n      <td>{reprintAdmin}</td>\n\n      <td className=\"box-button\">\n        <Button.Group>\n          { tmplButtonEdit(isUpdate) }\n          { tmplButtonDelete(isDelete) }\n        </Button.Group>\n      </td>\n    </tr>\n  );\n};\n\nUserTableItem.propTypes = {\n  access: PropTypes.shape({\n    user: PropTypes.shape({\n      delete: PropTypes.bool.isRequired,\n      update: PropTypes.bool.isRequired,\n    }).isRequired,\n  }).isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  isReprintAdmin: PropTypes.bool.isRequired,\n  userCode: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  userLogin: PropTypes.string.isRequired,\n  userName: PropTypes.string.isRequired,\n  onDeleteUser: PropTypes.func.isRequired,\n};\n\nexport default React.memo(UserTableItem);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport throttle from 'lodash/throttle';\n\nimport {\n  Form,\n  Button,\n  Row,\n  Input,\n  InputNumber,\n  Switch,\n  Drawer,\n} from 'antd';\n\nclass UserAddFormModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      DrawerWidth: 550,\n      DrawerZIndex: 1050,\n      formItemLayout: {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 7 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 12 },\n        },\n      },\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSubmitThrottled = throttle(this.handleSubmit, 1000);\n  }\n\n  componentWillUnmount() {\n    this.handleSubmitThrottled.cancel();\n  }\n\n  handleConfirmBlur = (e) => {\n    const { value } = e.target;\n    const { confirmDirty } = this.state;\n\n    this.setState({\n      confirmDirty: confirmDirty || !!value,\n    });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Пароли не совпадают!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword(rule, value, callback) {\n    const { form } = this.props;\n    const { confirmDirty } = this.state;\n    if (value && confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { form, submitForm } = this.props;\n\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        delete values.confirm;\n        submitForm(values);\n      }\n    });\n  }\n\n  render() {\n    const {\n      title,\n      onClose,\n      visible,\n      form: {\n        getFieldDecorator,\n      },\n    } = this.props;\n\n    const {\n      DrawerWidth,\n      DrawerZIndex,\n      formItemLayout,\n    } = this.state;\n\n    return (\n      <Drawer\n        title={title}\n        width={DrawerWidth}\n        onClose={onClose}\n        visible={visible}\n        zIndex={DrawerZIndex}\n      >\n        <Form\n          className=\"users-form\"\n          labelCol={formItemLayout.labelCol}\n          wrapperCol={formItemLayout.wrapperCol}\n          onSubmit={this.handleSubmitThrottled}\n        >\n          <Row gutter={16} style={{ marginBottom: '20px' }}>\n            <Form.Item label=\"Код\" hasFeedback>\n              {\n                getFieldDecorator('operator_code', {\n                  rules: [\n                    { required: true, message: 'Пожалуйста, ввидите код пользователя' },\n                  ],\n                })(<InputNumber style={{ width: '65%' }} min={1} placeholder=\"Код пользователя\" />)\n              }\n            </Form.Item>\n\n            <Form.Item label=\"Имя\" hasFeedback>\n              {\n                getFieldDecorator('operator_name', {\n                  rules: [\n                    { required: true, message: 'Пожалуйста, ввидите имя пользователя' },\n                  ],\n                })(<Input placeholder=\"Имя пользователя\" />)\n              }\n            </Form.Item>\n            <Form.Item label=\"Логин\" hasFeedback>\n              {\n                getFieldDecorator('operator_login', {\n                  rules: [\n                    { required: true, message: 'Пожалуйста, ввидите логин пользователя' },\n                  ],\n                })(<Input placeholder=\"Логин пользователя\" />)\n              }\n            </Form.Item>\n            <Form.Item label=\"Пароль\" hasFeedback>\n              {getFieldDecorator('password', {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Пожалуйста, введите пароль!',\n                  },\n                  {\n                    validator: this.validateToNextPassword,\n                  },\n                ],\n              })(<Input.Password />)}\n            </Form.Item>\n            <Form.Item label=\"Повторить пароль\" hasFeedback>\n              {\n                getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Пожалуйста, повторите пароль!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(\n                  <Input.Password\n                    onBlur={\n                      this.handleConfirmBlur\n                    }\n                  />,\n                )\n              }\n            </Form.Item>\n            <Form.Item label=\"Администратор\">\n              {getFieldDecorator('is_admin', { valuePropName: 'checked' })(<Switch />)}\n            </Form.Item>\n            <Form.Item label=\"Перепечать\">\n              {\n                getFieldDecorator('is_reprint_admin', {\n                  valuePropName: 'checked',\n                })(<Switch />)\n              }\n            </Form.Item>\n          </Row>\n          <Row className=\"users-form-footer-button\">\n            <Button onClick={onClose} style={{ marginRight: 8 }}>\n              Закрыить\n            </Button>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Отправить\n            </Button>\n          </Row>\n        </Form>\n      </Drawer>\n    );\n  }\n}\n\nUserAddFormModel.propTypes = {\n  form: PropTypes.objectOf(PropTypes.func).isRequired,\n  title: PropTypes.string.isRequired,\n  visible: PropTypes.bool.isRequired,\n  submitForm: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default React.memo(UserAddFormModel);\n","import Form from 'antd/lib/form';\n\nimport FormAdd from './form';\n\nexport default Form.create({\n  name: 'user_add_form',\n})(FormAdd);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport map from 'lodash/map';\nimport debounce from 'lodash/debounce';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Menu,\n  PageHeader,\n  Layout,\n  Row,\n  Col,\n  Spin,\n  Icon,\n  Button,\n} from 'antd';\n\nimport UserTableItem from './user_table_item';\nimport UserAddForm from './forms/add';\n\nimport {\n  Pagination,\n  Filter,\n  Sorting,\n  Search,\n  Table,\n  Logout,\n  Text,\n  Filters,\n} from '../../app/core';\n\nimport {\n  accessTypes,\n  locationTypes,\n  paginateTypes,\n} from '../../global/types';\n\nconst { Header, Content, Sider } = Layout;\n\nconst helmetContext = {};\n\nclass Users extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      siderWidth: 200,\n      menuSelectedKeys: ['left-menu-1'],\n\n      collapsedSiderMenu: props.collapsedSiderMenu,\n      visibleUserAddForm: props.visibleUserAddForm,\n    };\n\n    this.modelItemsDebounced = debounce(props.modelItems, 250);\n\n    props.modelCurrentUser();\n    props.modelServer();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {\n      items,\n      header,\n      loading,\n      location: {\n        query,\n      },\n    } = this.props;\n    const {\n      page,\n      collapsedSiderMenu,\n      visibleUserAddForm,\n    } = this.state;\n\n    const params = ['name', 'code', 'login'];\n\n    (new Filters({\n      params,\n      header,\n      page,\n      query,\n      nextHeader: nextProps.header,\n      model: this.modelItemsDebounced,\n    })).isUpdate();\n\n    return items !== nextProps.items\n      || JSON.stringify(header) !== JSON.stringify(nextProps.header)\n      || loading !== nextProps.loading\n      || collapsedSiderMenu !== nextState.collapsedSiderMenu\n      || visibleUserAddForm !== nextState.visibleUserAddForm;\n  }\n\n  componentWillUnmount() {\n    this.modelItemsDebounced.cancel();\n  }\n\n  /**\n   * Open the add user form\n   */\n  onCloseUserAddForm = () => {\n    this.setState({\n      visibleUserAddForm: false,\n    });\n  };\n\n  /**\n   * Close the add user form\n   */\n  onOpenUserAddForm = () => {\n    const { visibleUserAddForm } = this.state;\n\n    this.setState({\n      visibleUserAddForm: !visibleUserAddForm,\n    });\n  };\n\n  /**\n   * Open or close the menu\n   * @private\n   */\n  switchSiderMenu = () => {\n    const { collapsedSiderMenu } = this.state;\n\n    this.setState({\n      collapsedSiderMenu: !collapsedSiderMenu,\n    });\n  };\n\n  render() {\n    const {\n      loading,\n      setHeader,\n      sort,\n      items,\n      access,\n      modelDelete,\n      paginate,\n      modelItems,\n      modelAdd,\n      header: {\n        code,\n        name,\n        login,\n      },\n      location: {\n        query,\n      },\n    } = this.props;\n\n    const {\n      siderWidth,\n      collapsedSiderMenu,\n      menuSelectedKeys,\n      visibleUserAddForm,\n    } = this.state;\n\n    return (\n      <HelmetProvider context={helmetContext}>\n        <Layout>\n          <Sider width={siderWidth} trigger={null} collapsible collapsed={collapsedSiderMenu}>\n            <div className=\"logo\">USER</div>\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={menuSelectedKeys}>\n              <Menu.Item key=\"left-menu-1\">\n                <Link to=\"/\">\n                  <Icon type=\"team\" />\n                  <span>\n                    Пользователи\n                  </span>\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"left-menu-2\">\n                <Link to=\"/role\">\n                  <Icon type=\"cluster\" />\n                  <span>Роли</span>\n                </Link>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Spin tip=\"Загрузка...\" size=\"large\" spinning={loading}>\n              <Helmet title=\"Users\" />\n              <Header>\n                <PageHeader\n                  subTitle=\"Пользователи\"\n                  title={(\n                    <span>\n                      <Icon\n                        className=\"trigger\"\n                        type={collapsedSiderMenu ? 'menu-unfold' : 'menu-fold'}\n                        onClick={this.switchSiderMenu}\n                      />\n                      Users\n                    </span>\n                  )}\n                  extra={[\n                    <Button\n                      key=\"add-user\"\n                      className=\"btn-user-add\"\n                      type=\"primary\"\n                      icon=\"user-add\"\n                      size=\"small\"\n                      onClick={() => this.onOpenUserAddForm()}\n                    >\n                      Добавить пользователя\n                    </Button>,\n                    <Logout key=\"logout-1\" />,\n                  ]}\n                />\n              </Header>\n              <Content className=\"user-list\">\n                <Row>\n                  <Col span={24}>\n                    <Table\n                      overlayClassName=\"table-users\"\n                      striped={false}\n                      thead={[\n                        <th key=\"ht-1\">\n                          <Filter>\n                            <Search\n                              callback={setHeader}\n                              model=\"code\"\n                              value={code}\n                              placeholder=\"Код\"\n                            />\n                            <Sorting id=\"code\" fsort={sort} />\n                          </Filter>\n                        </th>,\n                        <th key=\"ht-2\">\n                          <Filter>\n                            <Search\n                              callback={setHeader}\n                              model=\"name\"\n                              value={name}\n                              placeholder=\"Имя\"\n                            />\n                            <Sorting id=\"name\" fsort={sort} />\n                          </Filter>\n                        </th>,\n                        <th key=\"ht-3\">\n                          <Filter>\n                            <Search\n                              callback={setHeader}\n                              model=\"login\"\n                              value={login}\n                              placeholder=\"Логин\"\n                            />\n                            <Sorting id=\"login\" fsort={sort} />\n                          </Filter>\n                        </th>,\n                        <th key=\"ht-4\">\n                          <Text>Админ</Text>\n                        </th>,\n                        <th key=\"ht-5\">\n                          <Text>Перепечать</Text>\n                        </th>,\n                        <th key=\"ht-6\" />,\n                      ]}\n                    >\n                      {\n                        (items)\n                          ? map(items, (item) => (\n                            <UserTableItem\n                              key={item.operator_id}\n                              userId={item.operator_id}\n                              userCode={item.operator_code}\n                              userName={item.operator_name}\n                              userLogin={item.operator_login}\n                              isAdmin={item.is_admin}\n                              isReprintAdmin={item.is_reprint_admin}\n                              access={access}\n                              onDeleteUser={modelDelete}\n                            />\n                          ))\n                          : null\n                      }\n                    </Table>\n                  </Col>\n                  <Col span={24}>\n                    {\n                      (paginate)\n                        ? (\n                          <Pagination\n                            url=\"/\"\n                            data={paginate}\n                            onQuery={modelItems}\n                          />\n                        )\n                        : null\n                    }\n                  </Col>\n                  <UserAddForm\n                    title=\"Добавить пользователя\"\n                    visible={visibleUserAddForm}\n                    urlQuery={query}\n                    submitForm={modelAdd}\n                    onClose={this.onCloseUserAddForm}\n                    wrappedComponentRef={(form) => {\n                      this.form = form;\n                    }}\n                  />\n                </Row>\n              </Content>\n            </Spin>\n          </Layout>\n        </Layout>\n      </HelmetProvider>\n    );\n  }\n}\n\nUsers.defaultProps = {\n  items: null,\n  paginate: null,\n};\n\nUsers.propTypes = {\n  collapsedSiderMenu: PropTypes.bool.isRequired,\n  items: PropTypes.arrayOf(PropTypes.object),\n  loading: PropTypes.bool.isRequired,\n  modelAdd: PropTypes.func.isRequired,\n  modelCurrentUser: PropTypes.func.isRequired,\n  modelDelete: PropTypes.func.isRequired,\n  modelItems: PropTypes.func.isRequired,\n  modelServer: PropTypes.func.isRequired,\n  setHeader: PropTypes.func.isRequired,\n  sort: PropTypes.func.isRequired,\n  visibleUserAddForm: PropTypes.bool.isRequired,\n  access: accessTypes.isRequired,\n  location: locationTypes.isRequired,\n  header: PropTypes.shape({\n    code: PropTypes.string,\n    login: PropTypes.string,\n    name: PropTypes.string,\n    status: PropTypes.string,\n  }).isRequired,\n  paginate: paginateTypes,\n};\n\nexport default Users;\n","import isNull from 'lodash/isNull';\nimport { shallowEqual, connectAdvanced } from 'react-redux';\n\nimport creator from '../../app/creator';\nimport api from '../api';\n\nimport Users from './main';\n\nexport default connectAdvanced((dispatch) => {\n  const module = 'system';\n  let ownProps = {};\n  let result = {};\n\n  const sendTo = creator(api, module, dispatch);\n\n  const modelCurrentUser = () => sendTo('userCurrent');\n\n  const modelItems = (data) => sendTo('userItems', data);\n  const modelHeader = (data) => sendTo('userHeader', data);\n\n  const modelAdd = (data) => sendTo('userAdd', data, (json) => {\n    modelItems(ownProps.location.query);\n    return json;\n  });\n\n  /**\n   * User delete\n   * @param id\n   */\n  const modelDelete = (id) => sendTo('userDelete', { id }, (json) => {\n    modelItems(ownProps.location.query);\n    return json;\n  });\n\n  /**\n   * Downloading data from a remote server\n   * @private\n   */\n  const modelServer = () => {\n    modelHeader(ownProps.location.query);\n    modelItems(ownProps.location.query);\n  };\n\n  const setHeader = (name, value) => {\n    ownProps.location.query[name] = value;\n    modelHeader(ownProps.location.query);\n  };\n\n  const sort = (setSort) => {\n    ownProps.location.query.sort = setSort;\n    modelItems(ownProps.location.query);\n  };\n\n  return (nextState, nextOwnProps) => {\n    const loading = isNull(nextState[module].userItems);\n\n    const header = isNull(nextState[module].userItems)\n      ? {}\n      : nextState[module].userHeader;\n\n    const items = isNull(nextState[module].userItems)\n      ? null\n      : nextState[module].userItems.data;\n\n    const paginate = isNull(nextState[module].userItems)\n      ? null\n      : nextState[module].userItems.paginate;\n\n    const access = isNull(nextState[module].userItems)\n      ? {}\n      : nextState[module].userItems.access;\n\n    const current = isNull(nextState[module].userCurrent)\n      ? {}\n      : nextState[module].userCurrent.data;\n\n    const nextResult = {\n      ...nextOwnProps,\n      loading,\n      header,\n      items,\n      paginate,\n      access,\n      current,\n      setHeader,\n      modelCurrentUser,\n      modelItems,\n      modelHeader,\n      modelServer,\n      modelAdd,\n      modelDelete,\n      sort,\n    };\n    ownProps = nextOwnProps;\n    if (!shallowEqual(result, nextResult)) {\n      result = nextResult;\n    }\n\n    return result;\n  };\n})(Users);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\n\nimport UserStore from './state';\n\nimport Index from './component';\n\nimport './css/index.less';\n\nconst Module = (props) => {\n  const { location, visibleUserAddForm, collapsedSiderMenu } = props;\n\n  return (\n    <Provider store={UserStore}>\n      <Index\n        location={location}\n        visibleUserAddForm={visibleUserAddForm}\n        collapsedSiderMenu={collapsedSiderMenu}\n      />\n    </Provider>\n  );\n};\n\nModule.defaultProps = {\n  visibleUserAddForm: false,\n  collapsedSiderMenu: true,\n};\n\nModule.propTypes = {\n  location: PropTypes.oneOfType([\n    PropTypes.any,\n  ]).isRequired,\n  visibleUserAddForm: PropTypes.bool,\n  collapsedSiderMenu: PropTypes.bool,\n};\n\nexport default Module;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./modules/users/index.js","webpack:///./modules/users/state.js","webpack:///./modules/users/api.js","webpack:///./modules/users/component/user_table_item.jsx","webpack:///./modules/users/component/forms/add/form.jsx","webpack:///./modules/users/component/forms/add/index.js","webpack:///./modules/users/component/main.jsx","webpack:///./modules/users/component/index.js","webpack:///./modules/users/main.jsx"],"names":["getComponent","nextState","component","then","mad","noop","createStoreWithMiddleware","applyMiddleware","middleware","thunk","createStore","combineReducers","system","reducer","name","models","points","entryPoints","query","pointApi","data","type","Query","api","action","callback","code","login","status","result","domain","appConfig","auth","UserTableItem","props","isAdmin","isReprintAdmin","userCode","userName","userLogin","access","userId","onDeleteUser","admin","reprintAdmin","user","isUpdate","update","isDelete","className","Group","title","to","isAction","onConfirm","okText","cancelText","placement","zIndex","size","icon","tmplButtonDelete","propTypes","PropTypes","objectOf","shape","delete","bool","isRequired","number","string","func","style","position","left","bottom","width","borderTop","padding","background","textAlign","formItemLayout","labelCol","xs","span","sm","wrapperCol","UserAddFormModel","e","form","submitForm","preventDefault","validateFieldsAndScroll","err","values","confirm","value","target","confirmDirty","state","setState","rule","getFieldValue","validateFields","force","DrawerWidth","DrawerZIndex","this","onClose","visible","getFieldDecorator","onSubmit","handleSubmit","gutter","marginBottom","Item","label","hasFeedback","rules","required","message","min","placeholder","validator","validateToNextPassword","Password","compareToFirstPassword","onBlur","handleConfirmBlur","valuePropName","onClick","marginRight","htmlType","Component","Form","create","FormAdd","Header","Layout","Content","Sider","helmetContext","Users","nextProps","items","location","header","modelItems","loading","page","collapsedSiderMenu","visibleUserAddForm","Filters","params","nextHeader","siderWidth","menuSelectedKeys","modelCurrentUser","modelServer","context","trigger","collapsible","collapsed","theme","mode","defaultSelectedKeys","key","tip","spinning","subTitle","switchSiderMenu","extra","onOpenUserAddForm","overlayClassName","striped","thead","setHeader","model","isFocus","id","fsort","sort","map","item","operator_id","operator_code","operator_name","operator_login","is_admin","is_reprint_admin","modelDelete","paginate","url","onQuery","urlQuery","modelAdd","onCloseUserAddForm","wrappedComponentRef","React","connectAdvanced","dispatch","module","ownProps","sendTo","creator","modelHeader","json","setSort","nextOwnProps","nextResult","isNull","userItems","userHeader","current","userCurrent","shallowEqual","Module","store","UserStore","defaultProps","oneOfType","any"],"mappings":"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","file":"users.js?hash=e5a0c12d371d24c1a66e","sourcesContent":["import noop from 'lodash/noop';\n\nexport default {\n  getComponent(nextState, component) {\n    import('./main')\n    .then((mad) => {return component(null, mad.default)})\n    .catch(() => noop);\n  },\n};","import { createStore, combineReducers, applyMiddleware } from 'redux';\n\nimport thunk from 'redux-thunk';\n\nimport middleware from '../app/middleware';\nimport reducer from '../app/reducer';\n\n// import {createLogger} from 'redux-logger';\n\nconst module = {\n  name: 'system',\n  models: [\n    {\n      name: 'user',\n      points: ['header', 'items', 'current'],\n    },\n  ],\n};\n\nconst createStoreWithMiddleware = applyMiddleware(\n  middleware('system'),\n  thunk,\n  // createLogger({collapsed:true}),\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers({\n  system: reducer(module),\n}));\n","import Query from '../app/component/core/query';\nimport appConfig from '../../config';\n\nconst entryPoints = {\n  items: 'interface-users/items',\n  delete: 'interface-users/user-delete',\n  add: 'interface-users/user-add',\n  current: 'interface-users/user-current',\n};\n\nconst typeGet = 'GET';\nconst typePost = 'POST';\n\nfunction query(pointApi, data, type = typePost) {\n  return new Query({\n    pointApi,\n    type,\n    data,\n  });\n}\n\nexport default function api(action, data, callback) {\n  switch (action) {\n    case 'userHeader':\n      return {\n        code: (data.code !== 0) ? data.code : '',\n        name: (data.name !== 0) ? data.name : '',\n        login: (data.login !== 0) ? data.login : '',\n        status: (data.status === 0) ? '0' : '1',\n      };\n    case 'userItems':\n      return (new Query({\n        data,\n        pointApi: entryPoints.items,\n      })).result();\n    case 'userDelete':\n      return query(entryPoints.delete, data).result(callback);\n    case 'userAdd':\n      return query(entryPoints.add, data).result(callback);\n    case 'userCurrent':\n      return (new Query({\n        domain: appConfig.domain.auth,\n        type: typeGet,\n        pointApi: entryPoints.current,\n      })).result();\n    default:\n      return null;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Button, Popconfirm } from 'antd';\n\nimport { Link } from 'react-router';\n\nconst UserTableItem = (props) => {\n  const {\n    isAdmin,\n    isReprintAdmin,\n    userCode,\n    userName,\n    userLogin,\n    access,\n    userId,\n    onDeleteUser,\n  } = props;\n\n  const admin = (isAdmin) ? 'Да' : 'Нет';\n  const reprintAdmin = (isReprintAdmin) ? 'Да' : 'Нет';\n\n  const { update: isUpdate, delete: isDelete } = access.user;\n\n  const tmplButtonEdit = (isAction) => {\n    if (isAction) {\n      return (\n        <Link\n          className=\"ant-btn ant-btn-primary ant-btn-sm ant-btn-icon-only\"\n          title=\"Изменить\"\n          to={`/user/edit/${userId}/data`}\n        >\n          <Icon type=\"edit\" />\n        </Link>\n      );\n    }\n\n    return null;\n  };\n\n  const tmplButtonDelete = (isAction) => {\n    if (isAction) {\n      return (\n        <Popconfirm\n          title=\"Удалить пользователя?\"\n          onConfirm={() => onDeleteUser(userId)}\n          okText=\"Да\"\n          cancelText=\"Нет\"\n          placement=\"left\"\n          zIndex={1050}\n        >\n          <Button type=\"primary\" size=\"small\" icon=\"delete\" />\n        </Popconfirm>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <tr>\n      <td>{userCode}</td>\n      <td>{userName}</td>\n      <td>{userLogin}</td>\n      <td>{admin}</td>\n      <td>{reprintAdmin}</td>\n\n      <td className=\"box-button\">\n        <Button.Group>\n          { tmplButtonEdit(isUpdate) }\n          { tmplButtonDelete(isDelete) }\n        </Button.Group>\n      </td>\n    </tr>\n  );\n};\n\nUserTableItem.propTypes = {\n  access: PropTypes.objectOf(PropTypes.shape({\n    user: PropTypes.objectOf(PropTypes.shape({\n      delete: PropTypes.bool.isRequired,\n      update: PropTypes.bool.isRequired,\n    })),\n  })).isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  isReprintAdmin: PropTypes.bool.isRequired,\n  userCode: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  userLogin: PropTypes.string.isRequired,\n  userName: PropTypes.string.isRequired,\n  onDeleteUser: PropTypes.func.isRequired,\n};\n\nexport default UserTableItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  Button,\n  Row,\n  Input,\n  InputNumber,\n  Switch,\n  Drawer,\n} from 'antd';\n\nconst style = {\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  width: '100%',\n  borderTop: '1px solid #e9e9e9',\n  padding: '10px 16px',\n  background: '#fff',\n  textAlign: 'right',\n  zIndex: 2000,\n};\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 7 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 12 },\n  },\n};\n\nclass UserAddFormModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      DrawerWidth: 550,\n      DrawerZIndex: 1050,\n    };\n  }\n\n  handleSubmit = (e) => {\n    const { form, submitForm } = this.props;\n\n    e.preventDefault();\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        delete values.confirm;\n        submitForm(values);\n      }\n    });\n  };\n\n  handleConfirmBlur = (e) => {\n    const { value } = e.target;\n    const { confirmDirty } = this.state;\n\n    this.setState({\n      confirmDirty: confirmDirty || !!value,\n    });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Пароли не совпадают!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    const { confirmDirty } = this.state;\n    if (value && confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const {\n      title,\n      onClose,\n      visible,\n      form: {\n        getFieldDecorator,\n      },\n    } = this.props;\n\n    const { DrawerWidth, DrawerZIndex } = this.state;\n\n    return (\n      <Drawer\n        title={title}\n        width={DrawerWidth}\n        onClose={onClose}\n        visible={visible}\n        zIndex={DrawerZIndex}\n      >\n        <Form\n          labelCol={formItemLayout.labelCol}\n          wrapperCol={formItemLayout.wrapperCol}\n          onSubmit={this.handleSubmit}\n        >\n          <Row gutter={16} style={{ marginBottom: '20px' }}>\n            <Form.Item label=\"Код\" hasFeedback>\n              {\n                getFieldDecorator('operator_code', {\n                  rules: [\n                    { required: true, message: 'Пожалуйста, ввидите код пользователя' },\n                  ],\n                })(<InputNumber style={{ width: '65%' }} min={1} placeholder=\"Код пользователя\" />)\n              }\n            </Form.Item>\n\n            <Form.Item label=\"Имя\" hasFeedback>\n              {\n                getFieldDecorator('operator_name', {\n                  rules: [\n                    { required: true, message: 'Пожалуйста, ввидите имя пользователя' },\n                  ],\n                })(<Input placeholder=\"Имя пользователя\" />)\n              }\n            </Form.Item>\n            <Form.Item label=\"Логин\" hasFeedback>\n              {\n                getFieldDecorator('operator_login', {\n                  rules: [\n                    { required: true, message: 'Пожалуйста, ввидите логин пользователя' },\n                  ],\n                })(<Input placeholder=\"Логин пользователя\" />)\n              }\n            </Form.Item>\n            <Form.Item label=\"Пароль\" hasFeedback>\n              {getFieldDecorator('password', {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Пожалуйста, введите пароль!',\n                  },\n                  {\n                    validator: this.validateToNextPassword,\n                  },\n                ],\n              })(<Input.Password />)}\n            </Form.Item>\n            <Form.Item label=\"Повторить пароль\" hasFeedback>\n              {\n                getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Пожалуйста, повторите пароль!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(\n                  <Input.Password\n                    onBlur={\n                      this.handleConfirmBlur\n                    }\n                  />,\n                )\n              }\n            </Form.Item>\n            <Form.Item label=\"Администратор\">\n              {getFieldDecorator('is_admin', { valuePropName: 'checked' })(<Switch />)}\n            </Form.Item>\n            <Form.Item label=\"Перепечать\">\n              {\n                getFieldDecorator('is_reprint_admin', {\n                  valuePropName: 'checked',\n                })(<Switch />)\n              }\n            </Form.Item>\n          </Row>\n          <Row style={style}>\n            <Button onClick={onClose} style={{ marginRight: 8 }}>\n              Закрыить\n            </Button>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Отправить\n            </Button>\n          </Row>\n        </Form>\n      </Drawer>\n    );\n  }\n}\n\nUserAddFormModel.propTypes = {\n  form: PropTypes.objectOf(PropTypes.func).isRequired,\n  title: PropTypes.string.isRequired,\n  visible: PropTypes.bool.isRequired,\n  submitForm: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default UserAddFormModel;\n","import Form from 'antd/lib/form';\n\nimport FormAdd from './form';\n\nexport default Form.create({\n  name: 'user_add_form',\n})(FormAdd);\n","import React from 'react';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { Link } from 'react-router';\n\nimport { Menu, PageHeader, Layout, Row, Col, Spin, Icon, Button } from 'antd';\n\nimport {\n  Pagination,\n  Filter,\n  Sorting,\n  Search,\n  Table,\n  Logout,\n  Text,\n  Filters,\n} from '../../app/core';\n\nconst { Header, Content, Sider } = Layout;\n\nimport UserTableItem from './user_table_item';\nimport UserAddForm from './forms/add';\n\nconst helmetContext = {};\n\nclass Users extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      siderWidth: 200,\n      menuSelectedKeys: ['left-menu-1'],\n\n      collapsedSiderMenu: props.collapsedSiderMenu,\n      visibleUserAddForm: props.visibleUserAddForm,\n    };\n\n    props.modelCurrentUser();\n    props.modelServer();\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    const { items, location, header, modelItems, loading, location: {query} } = this.props;\n    const { page, collapsedSiderMenu, visibleUserAddForm } = this.state;\n\n    const params = ['name', 'code', 'login'];\n\n    (new Filters({\n      params: params,\n      query: location.query,\n      nextHeader: nextProps.header,\n      header: header,\n      page: page,\n      action: () => {\n        modelItems(query);\n      },\n    })).isUpdate();\n\n    return loading !== nextProps.loading ||\n      collapsedSiderMenu !== nextState.collapsedSiderMenu ||\n      visibleUserAddForm !== nextState.visibleUserAddForm ||\n      header !== nextProps.header ||\n      items !== nextProps.items;\n  };\n\n  /**\n   * Open the add user form\n   */\n  onCloseUserAddForm = () => {\n    this.setState({\n      visibleUserAddForm: false,\n    });\n  };\n\n  /**\n   * Close the add user form\n   */\n  onOpenUserAddForm = () => {\n    this.setState({\n      visibleUserAddForm: !this.state.visibleUserAddForm,\n    });\n  };\n\n  /**\n   * Open or close the menu\n   * @private\n   */\n  switchSiderMenu = () => {\n    this.setState({\n      collapsedSiderMenu: !this.state.collapsedSiderMenu,\n    });\n  };\n\n  render() {\n    return (\n      <HelmetProvider context={helmetContext}>\n        <Layout>\n          <Sider width={this.state.siderWidth} trigger={null} collapsible\n                 collapsed={this.state.collapsedSiderMenu}>\n            <div className=\"logo\">USER</div>\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={this.state.menuSelectedKeys}>\n              <Menu.Item key=\"left-menu-1\">\n                <Link to=\"/\"><Icon type=\"team\"/><span>Пользователи</span></Link>\n              </Menu.Item>\n              <Menu.Item key=\"left-menu-2\">\n                <Link to=\"/role\"><Icon type=\"cluster\"/><span>Роли</span></Link>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Spin tip=\"Загрузка...\" size=\"large\" spinning={this.props.loading}>\n              <Helmet title=\"Users\"/>\n              <Header>\n                <PageHeader\n                  subTitle=\"Пользователи\"\n                  title={<span>\n                    <Icon\n                      className=\"trigger\"\n                      type={this.state.collapsedSiderMenu ? 'menu-unfold' : 'menu-fold'}\n                      onClick={this.switchSiderMenu}\n                    />Users\n                  </span>}\n                  extra={[\n                    <Button\n                      key=\"add-user\"\n                      className=\"btn-user-add\"\n                      type=\"primary\"\n                      icon=\"user-add\"\n                      size=\"small\"\n                      onClick={() => this.onOpenUserAddForm()}\n                    >\n                      Добавить пользователя\n                    </Button>,\n                    <Logout key=\"logout-1\"/>,\n                  ]}\n                />\n              </Header>\n              <Content className='user-list'>\n                <Row>\n                  <Col span={24}>\n                    <Table overlayClassName=\"table-users\" striped={false} thead={[\n                      <th key=\"ht-1\">\n                        <Filter>\n                          <Search\n                            callback={this.props.setHeader}\n                            model=\"code\"\n                            value={this.props.header.code}\n                            placeholder=\"Код\"\n                            isFocus={true}\n                          />\n                          <Sorting id='code' fsort={this.props.sort} />\n                        </Filter>\n                      </th>,\n                      <th key=\"ht-2\">\n                        <Filter>\n                          <Search\n                            callback={this.props.setHeader}\n                            model=\"name\"\n                            value={this.props.header.name}\n                            placeholder=\"Имя\"\n                          />\n                          <Sorting id='name' fsort={this.props.sort} />\n                        </Filter>\n                      </th>,\n                      <th key=\"ht-3\">\n                        <Filter>\n                          <Search\n                            callback={this.props.setHeader}\n                            model=\"login\"\n                            value={this.props.header.login}\n                            placeholder=\"Логин\"\n                          />\n                          <Sorting id='login' fsort={this.props.sort} />\n                        </Filter>\n                      </th>,\n                      <th key=\"ht-4\">\n                        <Text>Админ</Text>\n                      </th>,\n                      <th key=\"ht-5\">\n                        <Text>Перепечать</Text>\n                      </th>,\n                      <th key=\"ht-6\"></th>,\n                    ]}>\n                      {\n                        (this.props.items)\n                          ?\n                          this.props.items.map((item) => <UserTableItem\n                            key={item.operator_id}\n                            userId={item.operator_id}\n                            userCode={item.operator_code}\n                            userName={item.operator_name}\n                            userLogin={item.operator_login}\n                            isAdmin={item.is_admin}\n                            isReprintAdmin={item.is_reprint_admin}\n\n                            access={this.props.access}\n\n                            onDeleteUser={this.props.modelDelete}\n                          />)\n                          : null\n                      }\n                    </Table>\n                  </Col>\n                  <Col span={24}>\n                    {\n                      (this.props.paginate)\n                        ?\n                        <Pagination\n                          url=\"/\"\n                          data={this.props.paginate}\n                          onQuery={this.props.modelItems}\n                        />\n                        : null\n                    }\n                  </Col>\n                  <UserAddForm\n                    title=\"Добавить пользователя\"\n                    visible={this.state.visibleUserAddForm}\n                    urlQuery={this.props.location.query}\n                    submitForm={this.props.modelAdd}\n                    onClose={this.onCloseUserAddForm}\n                    wrappedComponentRef={(form) => this.form = form}\n                  />\n                </Row>\n              </Content>\n            </Spin>\n          </Layout>\n        </Layout>\n      </HelmetProvider>\n    );\n  }\n}\n\nexport default Users;\n","import isNull from 'lodash/isNull';\nimport { shallowEqual, connectAdvanced } from 'react-redux';\n\nimport creator from '../../app/creator';\nimport api from '../api';\n\nimport Users from './main';\n\nexport default connectAdvanced((dispatch) => {\n  const module = 'system';\n  let ownProps = {};\n  let result = {};\n\n  const sendTo = creator(api, module, dispatch);\n\n  const modelCurrentUser = () => sendTo('userCurrent');\n\n  const modelItems = (data) => sendTo('userItems', data);\n  const modelHeader = (data) => sendTo('userHeader', data);\n\n  const modelAdd = (data) => sendTo('userAdd', data, (json) => {\n    modelItems(ownProps.location.query);\n    return json;\n  });\n\n  /**\n   * User delete\n   * @param id\n   */\n  const modelDelete = (id) => sendTo('userDelete', { id }, (json) => {\n    modelItems(ownProps.location.query);\n    return json;\n  });\n\n  /**\n   * Downloading data from a remote server\n   * @private\n   */\n  const modelServer = () => {\n    modelHeader(ownProps.location.query);\n    modelItems(ownProps.location.query);\n  };\n\n  const setHeader = (name, value) => {\n    ownProps.location.query[name] = value;\n    modelHeader(ownProps.location.query);\n  };\n\n  const sort = (setSort) => {\n    ownProps.location.query.sort = setSort;\n    modelItems(ownProps.location.query);\n  };\n\n  return (nextState, nextOwnProps) => {\n    const loading = isNull(nextState[module].userItems);\n\n    const header = isNull(nextState[module].userItems)\n      ? []\n      : nextState[module].userHeader;\n    const items = isNull(nextState[module].userItems)\n      ? null\n      : nextState[module].userItems.data;\n    const paginate = isNull(nextState[module].userItems)\n      ? null\n      : nextState[module].userItems.paginate;\n    const access = isNull(nextState[module].userItems)\n      ? null\n      : nextState[module].userItems.access;\n    const current = isNull(nextState[module].userCurrent)\n      ? null\n      : nextState[module].userCurrent.data;\n\n    const nextResult = {\n      ...nextOwnProps,\n      loading,\n      header,\n      items,\n      paginate,\n      access,\n      current,\n      setHeader,\n      modelCurrentUser,\n      modelItems,\n      modelHeader,\n      modelServer,\n      modelAdd,\n      modelDelete,\n      sort,\n    };\n    ownProps = nextOwnProps;\n    if (!shallowEqual(result, nextResult)) {\n      result = nextResult;\n    }\n\n    return result;\n  };\n})(Users);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\n\nimport UserStore from './state';\n\nimport Index from './component';\n\nimport './css/index.less';\n\nconst Module = (props) => {\n  const { location, visibleUserAddForm, collapsedSiderMenu } = props;\n\n  return (\n    <Provider store={UserStore}>\n      <Index\n        location={location}\n        visibleUserAddForm={visibleUserAddForm}\n        collapsedSiderMenu={collapsedSiderMenu}\n      />\n    </Provider>\n  );\n};\n\nModule.defaultProps = {\n  visibleUserAddForm: false,\n  collapsedSiderMenu: true,\n};\n\nModule.propTypes = {\n  location: PropTypes.oneOfType([\n    PropTypes.any,\n  ]),\n  visibleUserAddForm: PropTypes.bool,\n  collapsedSiderMenu: PropTypes.bool,\n};\n\nexport default Module;\n"],"sourceRoot":""}
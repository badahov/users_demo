{"version":3,"sources":["webpack:///./modules/role/index.js","webpack:///./modules/role/config.js","webpack:///./modules/role/store/middlewares/user.js","webpack:///./modules/role/store/middlewares/role.js","webpack:///./modules/role/store/reducers/user.js","webpack:///./modules/role/store/reducers/role.js","webpack:///./modules/role/store/state.js","webpack:///./modules/role/store/api/user.js","webpack:///./modules/role/store/actions/user.js","webpack:///./modules/role/store/api/role.js","webpack:///./modules/role/store/actions/role.js","webpack:///./modules/role/component/forms/add/index.jsx","webpack:///./modules/role/component/main.jsx","webpack:///./modules/role/component/index.jsx","webpack:///./modules/role/main.jsx"],"names":["path","getComponent","nextState","component","then","mad","noop","model","api","permission","rolePermission","roles","roleAdd","roleEdit","roleDelete","userCurrent","userEdit","middleware","store","next","action","config","includes","type","middlewareAction","actionReducers","status","state","data","combineReducers","current","item","role","createStoreWithMiddleware","applyMiddleware","user","thunk","createStore","reducers","modelEdit","filter","Query","pointApi","result","json","Function","actions","promise","domain","appConfig","auth","get","query","post","modelPermission","callback","id","role_id","modelRole","ButtonGroup","Button","Group","Search","Input","UserAddFormModel","props","e","preventDefault","form","validateFieldsAndScroll","err","values","confirm","actionRole","onClose","ev","parent","target","parentElement","listRoleItemId","querySelector","inputRoleName","btnRoleEdit","btnRoleDelete","btnRoleSave","style","display","msg","message","success","onRoleSelect","error","_errorMsg","name","nextProps","visible","setState","getFieldDecorator","this","title","width","zIndex","marginBottom","span","layout","onSubmit","handleSubmit","Item","hasFeedback","placeholder","htmlType","size","marginTop","bordered","dataSource","roleList","renderItem","className","editable","onClick","onRoleEditAction","icon","onConfirm","onRoleDelete","okText","cancelText","placement","enterButton","defaultValue","onSearch","value","event","onRoleEdit","Component","visibleId","successionId","operationId","inputSourceId","stageId","Form","create","mapPropsToFields","createFormField","sourceTitle","Header","Layout","Content","Sider","Panel","Collapse","Meta","Card","Roles","collapsed","visibleSourceAddForm","i","length","selectRoleName","selectRoleId","actionPermission","document","querySelectorAll","forEach","setAttribute","group","enabled","permission_id","items","loading","actionCurrent","isLoad","trigger","collapsible","theme","mode","defaultSelectedKeys","key","to","ItemGroup","map","toggle","subTitle","extra","onOpen","tip","spinning","defaultActiveKey","modules","header","desc","grid","gutter","xs","sm","md","lg","xl","xxl","permissions","permissionsSwitch","content","classNames","avatar","wrappedComponentRef","React","connect","access","dispatch","bindActionCreators","actionEdit","EditMain","UserStore","location","params"],"mappings":"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","file":"role.js?hash=83012482b00c58bdbc5d","sourcesContent":["import noop from 'lodash/noop';\n\nexport default {\n  path: 'role',\n  getComponent(nextState, component) {\n    import('./main').then((mad) => component(null, mad.default)).catch(() => noop);\n  },\n};","'use strict';\n\nexport default {\n    model: 'role',\n    api: {\n        permission:   'interface-users/permission',\n        rolePermission:  'interface-users/role-permission',\n\n        roles:   'interface-users/roles',\n        roleAdd: 'interface-users/role-add',\n        roleEdit: 'interface-users/role-edit',\n        roleDelete: 'interface-users/role-delete',\n\n        userCurrent: 'interface-users/user-current',\n        userEdit: 'interface-users/user-edit',\n    },\n    middleware: [\n        'PERMISSION',\n        'ROLE',\n        'USER_CURRENT',\n        'USER_ITEM',\n    ]\n}","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport {combineReducers} from 'redux';\n\nconst MODEL = 'USER';\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n    action: actionReducers([\n        `${MODEL}_ITEM_LOADING`\n    ]),\n    current: actionReducers([\n        `${MODEL}_CURRENT_LOADED`\n    ]),\n    item: actionReducers([\n        `${MODEL}_ITEM_LOADED`\n    ])\n});\n","'use strict';\n\nimport {combineReducers} from 'redux';\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n    permission: actionReducers([\n        'PERMISSION_LOADED'\n    ]),\n    role: actionReducers([\n        'ROLE_LOADED'\n    ]),\n});\n","'use strict';\n\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n//import {createLogger} from 'redux-logger';\n\nimport user from './middlewares/user';\nimport role from './middlewares/role';\n\n//Найдет и загрузит все reducers из папки\nimport * as reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(\n    user,\n    role,\n    thunk//, createLogger({collapsed:true})\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers(reducers));\n","'use strict';\n\nimport {Query} from 'modules/app/core';\nimport appConfig from \"config\";\nimport config from \"../../config\";\n\nconst api = config.api;\n\nexport function modelCurrentUser()\n{\n    let ReactQueryObject = new Query({\n        domain: appConfig.domain.auth,\n        type: Query.get,\n        pointApi: api.userCurrent\n    });\n\n    return ReactQueryObject.result();\n}\n\nexport function modelEdit(data, filter, action)\n{\n    let ReactQueryObject = new Query({\n        pointApi: api.userEdit,\n        data: data\n    });\n\n    return ReactQueryObject.result().then((json) => {\n        if (json) {\n            if (action instanceof Function) {\n                action(filter);\n            }\n        }\n    });\n}\n","'use strict';\n\nimport {modelEdit, modelCurrentUser} from '../api/user';\n\nexport function userCurrent() {\n    return {\n        type: 'USER_CURRENT',\n        actions: ['USER_CURRENT_LOADING', 'USER_CURRENT_LOADED', 'USER_CURRENT_LOAD_FAILURE'],\n        promise: modelCurrentUser(),\n    };\n}\n\nexport function userEdit(data, filter = null, action = null) {\n    return {\n        type: 'USER_EDIT',\n        actions: ['USER_EDIT_LOADED'],\n        model: modelEdit(data, filter, action),\n    };\n}\n","'use strict';\n\nimport {Query} from 'modules/app/core';\nimport config from \"../../config\";\n\nconst api = config.api;\n\nfunction query (pointApi, data, type = Query.post) {\n    return new Query({\n        pointApi: pointApi,\n        type: type,\n        data: data\n    });\n}\n\n/**\n * Управление разрешениями\n *\n * @param action\n * @param data\n * @param callback\n * @returns {*}\n */\nexport function modelPermission(action, data, callback)\n{\n    switch (action) {\n        case 'item':\n            return query(api.permission, data, Query.get).result();\n        case 'switch':\n            return query(api.rolePermission, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.permission, {id: data.role_id}, Query.get).result();\n                }\n            });\n    }\n}\n\n/**\n * Управление ролями\n *\n * @param action\n * @param data\n * @param callback\n * @returns {*}\n */\nexport function modelRole(action, data = {}, callback)\n{\n    switch (action) {\n        case 'items':\n            return query(api.roles, data, Query.get).result();\n        case 'add':\n            return query(api.roleAdd, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.roles).result();\n                }\n            });\n        case 'edit':\n            return query(api.roleEdit, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.roles).result(callback);\n                }\n            });\n        case 'delete':\n            return query(api.roleDelete, data, Query.post).result(callback).then((json) => {\n                if (json) {\n                    return query(api.roles).result();\n                }\n            });\n    }\n}\n","import { modelPermission, modelRole } from '../api/role';\n\nexport function permission(action, data, callback) {\n    return {\n        type: 'PERMISSION',\n        actions: ['PERMISSION_LOADING', 'PERMISSION_LOADED', 'PERMISSION_LOAD_FAILURE'],\n        promise: modelPermission(action, data, callback),\n    };\n}\n\nexport function role(action, data, callback) {\n    return {\n       type: 'ROLE',\n       actions: ['ROLE_LOADING', 'ROLE_LOADED', 'ROLE_LOAD_FAILURE'],\n       promise: modelRole(action, data, callback),\n    };\n}\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router\";\nimport { Form, Button, Row, Input, List, Drawer, Col, Icon, message, Popconfirm } from 'antd';\nconst ButtonGroup = Button.Group;\n\nconst { Search } = Input;\n\nclass UserAddFormModel extends Component\n{\n    static defaultProps = {\n        visible: true,\n        visibleId: null,\n        successionId: null,\n        operationId: null,\n        inputSourceId: null,\n        stageId: null,\n        title: null,\n    };\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            visible: props.visible\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                delete values.confirm;\n\n                this.props.actionRole('add', values);\n            }\n        });\n    };\n\n    onClose = () => {\n        this.props.onClose();\n    };\n\n    onRoleEditAction = (ev, id) => {\n        let parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n        let listRoleItemId = parent.querySelector(`.link-role-name-${id}`);\n        let inputRoleName  = parent.querySelector(`.input-role-name-${id}`);\n        let btnRoleEdit    = parent.querySelector(`.btn-role-edit-${id}`);\n        let btnRoleDelete  = parent.querySelector(`.btn-role-delete-${id}`);\n        let btnRoleSave    = parent.querySelector(`.btn-role-save-${id}`);\n\n        listRoleItemId.style.display = \"none\";\n        inputRoleName.style.display = \"inline\";\n\n        btnRoleEdit.style.display = \"none\";\n        btnRoleDelete.style.display = \"none\";\n        btnRoleSave ? btnRoleSave.style.display = \"inline\" : null;\n    };\n\n    onRoleDelete = (id) => {\n        this.props.actionRole('delete', {\n            id: id\n        }, (json) => {\n            if (json.status === \"ok\") {\n                if (json.msg) {\n                    message.success(json.msg);\n\n                    this.props.onRoleSelect(0);\n                }\n\n                if (json.result) {\n                    return json.result;\n                } else {\n                    return true;\n                }\n            } else if (json.msg) {\n                message.error(this._errorMsg(json.msg));\n                return false;\n            }\n        });\n\n\n    };\n\n    onRoleEdit = (ev, id, name) => {\n        let parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n\n        this.props.actionRole('edit', {\n            id: id,\n            name: name\n        }, (json) => {\n            if (json.status === \"ok\") {\n                if (json.msg) {\n                    message.success(json.msg);\n                }\n\n                if (json.result) {\n                    let listRoleItemId = parent.querySelector(`.link-role-name-${id}`);\n                    let inputRoleName  = parent.querySelector(`.input-role-name-${id}`);\n                    let btnRoleEdit    = parent.querySelector(`.btn-role-edit-${id}`);\n                    let btnRoleDelete  = parent.querySelector(`.btn-role-delete-${id}`);\n                    let btnRoleSave    = parent.querySelector(`.btn-role-save-${id}`);\n\n                    listRoleItemId.style.display = \"inline\";\n                    inputRoleName.style.display = \"none\";\n\n                    btnRoleEdit.style.display = \"inline\";\n                    btnRoleDelete.style.display = \"inline\";\n                    btnRoleSave ? btnRoleSave.style.display = \"none\" : null;\n\n                    return json.result;\n                } else {\n                    return true;\n                }\n            } else if(json.msg) {\n                message.error(this._errorMsg(json.msg));\n                return false;\n            }\n        });\n    };\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        if (this.props.visible !== nextProps.visible) {\n            this.setState({\n                visible: nextProps.visible\n            });\n        }\n\n        return true;\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Drawer\n                title={this.props.title}\n                width={550}\n                onClose={this.onClose}\n                visible={this.state.visible}\n                zIndex={1050}\n            >\n                <Row style={{marginBottom:'20px'}}>\n                    <Col span={24}>\n                        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n                            <Form.Item hasFeedback>\n                                {getFieldDecorator('name', {\n                                    // rules: [\n                                    //     { required: true, message: 'Пожалуйста, ввидите код пользователя' }\n                                    // ],\n                                })(<Input placeholder=\"Название новой роли\" />)}\n                            </Form.Item>\n\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Добавить\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24}>\n                        <List\n                            size=\"small\"\n                            style={{marginTop:'10px'}}\n                            bordered\n                            dataSource={this.props.roleList}\n                            renderItem={item =>\n                            <List.Item\n                                className={`list-role-item list-role-item-${item.id}`}\n                                actions={(item.editable) ? [\n                                <ButtonGroup>\n                                    <Button className={`btn-role-edit btn-role-edit-${item.id}`} onClick={(ev) => this.onRoleEditAction(ev, item.id)} size=\"small\" icon=\"edit\" />\n                                    <Popconfirm\n                                        title=\"Удалить роль?\"\n                                        onConfirm={() => this.onRoleDelete(item.id)}\n                                        okText=\"Да\"\n                                        cancelText=\"Нет\"\n                                        placement=\"left\"\n                                        zIndex={1050}\n                                    >\n                                        <Button className={`btn-role-delete btn-role-delete-${item.id}`} size=\"small\" icon=\"delete\" />\n                                    </Popconfirm>\n                                </ButtonGroup>\n                                ] : null}>\n                                <Link onClick={(ev) => {\n                                    this.props.onRoleSelect(ev, item.id)\n                                }} className={`link-role-name link-role-name-${item.id}`} style={{width:'100%'}}>{item.name}</Link>\n\n                                <Search\n                                    className={`input-role-name input-role-name-${item.id}`}\n                                    placeholder=\"Название новой роли\"\n                                    enterButton={<Icon type=\"save\" />}\n                                    size=\"small\"\n                                    defaultValue={item.name}\n                                    onSearch={(value, event) => this.onRoleEdit(event, item.id, value)}\n                                />\n                            </List.Item>}\n                        />\n                    </Col>\n                </Row>\n            </Drawer>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_add_form',\n    mapPropsToFields(props) {\n        return {\n            title: Form.createFormField({\n                ...props.sourceTitle,\n                value: props.sourceTitle,\n            }),\n        };\n    },\n})(UserAddFormModel);\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport classNames from 'classnames';\nimport { Link } from 'react-router';\n\nimport { Logout } from 'modules/app/core';\n\nimport {\n  Collapse,\n  Card,\n  List,\n  Menu,\n  PageHeader,\n  Layout,\n  Spin,\n  Icon,\n  Row,\n  Col,\n  Popover,\n  Button,\n} from 'antd';\n\nconst { Header, Content, Sider } = Layout;\nconst Panel = Collapse.Panel;\nconst { Meta } = Card;\n\nimport UserAddForm from './forms/add';\n\nclass Roles extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectRoleName: 'Гость',\n      selectRoleId: 0,\n\n      collapsed: true,\n      visibleSourceAddForm: false,\n      visibleId: null,\n      items: props.items,\n      loading: true,\n      operationId: '',\n    };\n\n    this.props.actionCurrent();\n    this.props.actionRole('items');\n\n    this.props.actionPermission('item', { id: 0 });\n  }\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visibleSourceAddForm: false,\n    });\n  };\n\n  onOpen = () => {\n    this.setState({\n      visibleSourceAddForm: !this.state.visibleSourceAddForm,\n      visibleId: 1,\n    });\n  };\n\n  onRoleSelect = (ev, id) => {\n    for (let i = 0; i < this.props.role.length; i++) {\n      let item = this.props.role[i];\n\n      if (item.id === id) {\n        this.setState({\n          selectRoleName: item.name,\n          selectRoleId: item.id,\n        });\n\n        this.props.actionPermission('item', { id: item.id });\n\n        break;\n      }\n    }\n\n    let listRoleItems = document.querySelectorAll('.list-role-item');\n    listRoleItems.forEach((item) => {\n      item.setAttribute('style', 'background: #fff');\n    });\n\n    let listRoleItemId = document.querySelector(`.list-role-item-${id}`);\n    listRoleItemId.setAttribute('style', 'background: #fafafa');\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    return nextProps.permission !== this.props.permission ||\n      nextState.visibleSourceAddForm !== this.state.visibleSourceAddForm ||\n      nextState.collapsed !== this.state.collapsed ||\n      nextProps.role !== this.props.role;\n  };\n\n  permissionsSwitch = (group, permission, enabled) => {\n    this.props.actionPermission('switch', {\n      enabled: enabled,\n      permission_id: permission,\n      role_id: this.state.selectRoleId,\n    });\n  };\n\n  render() {\n    if (this.props.current) {\n      let isLoad = (this.props.current) ? false : true;\n\n      return (\n        <Layout>\n          <Sider width={300} trigger={null} collapsible collapsed={this.state.collapsed}>\n            <div className=\"logo\">\n              USER\n            </div>\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['2']}>\n              <Menu.Item key=\"1\">\n                <Link to=\"/\"><Icon type=\"team\"/><span>Пользователи</span></Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <Link to=\"/role\"><Icon type=\"cluster\"/><span>Роли</span></Link>\n              </Menu.Item>\n              <Menu.ItemGroup key=\"roles\" title=\"\">\n                {\n                  (this.props.role)\n                    ?\n                    this.props.role.map((item) =>\n                      <Menu.Item onClick={(ev) => {\n                        this.onRoleSelect(ev, item.id);\n                      }} key={`role-${item.id}`}>\n                        <Icon type=\"property-safety\"/>\n                        <span>{item.name}</span>\n                      </Menu.Item>,\n                    )\n                    : null\n                }\n              </Menu.ItemGroup>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Helmet title={this.state.selectRoleName}/>\n            <Header>\n              <PageHeader\n                title={<span><Icon\n                  className=\"trigger\"\n                  type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                  onClick={this.toggle}\n                />Управление ролями</span>}\n                subTitle={`текущая: ${this.state.selectRoleName}`}\n                extra={[\n                  <Button key=\"add-role\" className=\"btn-user-add\" onClick={() => this.onOpen()}\n                          type=\"primary\" size=\"small\">\n                    Управление ролями\n                  </Button>,\n                  <Logout key=\"logout-1\"/>,\n                ]}\n              />\n            </Header>\n            <Content className='user-list'>\n              <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n                <Row>\n                  <Col span={24}>\n                    <Collapse defaultActiveKey={['1']}>\n                      {\n                        (this.props.permission.modules) ?\n                          this.props.permission.modules.map((item) =>\n                            <Panel header={`${item.name}: ${item.desc}`} key={item.group}>\n                              <List\n                                grid={{\n                                  gutter: 16,\n                                  xs: 1,\n                                  sm: 1,\n                                  md: 2,\n                                  lg: 3,\n                                  xl: 4,\n                                  xxl: 4,\n                                }}\n                                dataSource={item.permissions}\n                                renderItem={(item, i) => (\n                                  <List.Item>\n                                    <Link onClick={() => {\n                                      this.permissionsSwitch(item.group, item.id, item.enabled);\n                                    }}>\n                                      <Popover content={item.desc} title={item.name}>\n                                        <Card\n                                          className={\n                                            classNames('permissions-default', {\n                                              'permissions-enabled': item.enabled,\n                                            })\n                                          }\n                                          size=\"small\"\n                                        >\n                                          <Meta\n                                            avatar={\n                                              (item.enabled) ? <Icon type=\"check\"/> : <Icon\n                                                type=\"stop\"/>\n                                            }\n                                            title={item.name}\n                                          />\n                                        </Card>\n                                      </Popover>\n                                    </Link>\n                                  </List.Item>\n                                )}\n                              />\n                            </Panel>,\n                          )\n                          : null\n                      }\n                    </Collapse>\n                  </Col>\n                  <UserAddForm\n                    visible={this.state.visibleSourceAddForm}\n                    visibleId={this.state.visibleId}\n                    title='Роли'\n                    onRoleSelect={this.onRoleSelect}\n                    roleList={this.props.role}\n                    actionRole={this.props.actionRole}\n                    onClose={this.onClose}\n                    wrappedComponentRef={(form) => this.form = form}\n                  />\n                </Row>\n              </Spin>\n            </Content>\n          </Layout>\n        </Layout>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Roles;\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport {\n  userEdit as actionEdit,\n  userCurrent as actionCurrent,\n} from '../store/actions/user';\n\nimport { permission as actionPermission, role as actionRole } from '../store/actions/role';\n\nimport Roles from './main';\n\nexport default connect(\n  (state) => {\n    return {\n      access: state.user.access,\n      current: state.user.current,\n      role: state.role.role,\n      permission: state.role.permission,\n    };\n  },\n  (dispatch) => bindActionCreators(\n    { actionCurrent, actionEdit, actionPermission, actionRole, dispatch }, dispatch),\n)(Roles);\n","import React, {Component} from 'react';\nimport {Provider} from 'react-redux';\n\nimport UserStore from './store/state';\n\nimport Index from './component';\n\nimport './css/index.less';\n\nclass EditMain extends Component {\n    render() {\n        return (\n            <Provider store={UserStore}>\n                <Index\n                    header={this.props.header}\n                    location={this.props.location}\n                    params={this.props.params}\n                />\n            </Provider>\n        );\n    }\n}\n\nexport default EditMain;"],"sourceRoot":""}
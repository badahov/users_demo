{"version":3,"sources":["webpack:///./modules/role/index.js","webpack:///./modules/role/state.js","webpack:///./modules/role/api.js","webpack:///./modules/role/component/forms/add/main.jsx","webpack:///./modules/role/component/forms/add/index.jsx","webpack:///./modules/role/component/main.jsx","webpack:///./modules/role/component/index.js","webpack:///./modules/role/main.jsx"],"names":["path","getComponent","nextState","component","then","mad","noop","createStoreWithMiddleware","applyMiddleware","middleware","thunk","createStore","combineReducers","system","reducer","name","models","points","query","pointApi","data","type","Query","entryPoints","user","item","current","role","items","add","edit","delete","permission","switch","api","action","callback","result","domain","appConfig","auth","ButtonGroup","Button","Group","Search","Input","UserAddFormModel","props","e","preventDefault","form","actionAdd","validateFieldsAndScroll","err","values","confirm","ev","id","parent","target","parentElement","listRoleItemId","querySelector","inputRoleName","btnRoleEdit","btnRoleDelete","btnRoleSave","setAttribute","actionDelete","onRoleSelect","json","actionEdit","status","nextProps","visible","setState","state","this","title","getFieldDecorator","onClose","roleList","width","zIndex","style","marginBottom","span","layout","onSubmit","handleSubmit","Item","hasFeedback","placeholder","htmlType","size","marginTop","bordered","dataSource","renderItem","className","actions","editable","key","onClick","onRoleEditAction","icon","onConfirm","onRoleDelete","okText","cancelText","placement","enterButton","defaultValue","onSearch","value","event","onRoleEdit","Component","propTypes","PropTypes","string","isRequired","bool","func","objectOf","oneOfType","arrayOf","shape","number","Form","create","mapPropsToFields","createFormField","sourceTitle","Header","Layout","Content","Sider","Panel","Collapse","Meta","Card","helmetContext","Roles","collapsed","visibleSourceAddForm","visibleId","setId","modelPermissionItem","i","length","selectRoleName","selectRoleId","listRoleItems","document","querySelectorAll","forEach","modules","obj","group","findGroupIndex","findPermissionIndex","module","groupIndex","permissionIndex","findIndex","permissions","element","Number","enabled","modelPermissionSwitch","newModules","clone","permission_id","role_id","findGroupPermission","modelServer","modelRoleDelete","modelRoleEdit","modelRoleAdd","isLoad","context","trigger","collapsible","theme","mode","defaultSelectedKeys","to","ItemGroup","map","toggle","subTitle","extra","onOpen","tip","spinning","defaultActiveKey","header","desc","grid","gutter","xs","sm","md","lg","xl","xxl","permissionsSwitch","content","classNames","avatar","wrappedComponentRef","React","defaultProps","currentTypes","connectAdvanced","dispatch","sendTo","creator","modelRoleItems","afterAction","nextOwnProps","isNull","loading","userCurrent","roleItems","nextResult","permissionItem","access","shallowEqual","Users","Module","location","params","store","UserStore","locationTypes","paramsTypes"],"mappings":"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","file":"role.js?hash=e4635c780bcd5781a205","sourcesContent":["import noop from 'lodash/noop';\n\nexport default {\n  path: 'role',\n  getComponent(nextState, component) {\n    import('./main').then((mad) => component(null, mad.default)).catch(() => noop);\n  },\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\n\nimport thunk from 'redux-thunk';\n\nimport middleware from '../app/middleware';\nimport reducer from '../app/reducer';\n\n// import {createLogger} from 'redux-logger';\n\nconst module = {\n  name: 'system',\n  models: [\n    {\n      name: 'user',\n      points: ['current'],\n    },\n    {\n      name: 'role',\n      points: ['items'],\n    },\n    {\n      name: 'permission',\n      points: ['item'],\n    },\n  ],\n};\n\nconst createStoreWithMiddleware = applyMiddleware(\n  middleware('system'),\n  thunk,\n  // createLogger({collapsed:true}),\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers({\n  system: reducer(module),\n}));\n","import Query from '../app/component/core/query';\nimport appConfig from '../../config';\n\nfunction query(pointApi, data, type = 'POST') {\n  return new Query({\n    pointApi,\n    type,\n    data,\n  });\n}\n\nconst entryPoints = {\n  user: {\n    item: 'interface-users/user',\n    current: 'interface-users/user-current',\n  },\n  role: {\n    items: 'interface-users/roles',\n    add: 'interface-users/role-add',\n    edit: 'interface-users/role-edit',\n    delete: 'interface-users/role-delete',\n  },\n  permission: {\n    item: 'interface-users/permission',\n    switch: 'interface-users/role-permission',\n  },\n};\n\nexport default function api(action, data, callback) {\n  switch (action) {\n    case 'roleItems':\n      return query(entryPoints.role.items, data, 'GET').result();\n    case 'roleAdd':\n      return query(entryPoints.role.add, data).result(callback);\n    case 'roleEdit':\n      return query(entryPoints.role.edit, data).result(callback);\n    case 'roleDelete':\n      return query(entryPoints.role.delete, data).result(callback);\n    case 'permissionItem':\n      return query(entryPoints.permission.item, data, 'GET').result(callback);\n    case 'permissionSwitch':\n      return query(entryPoints.permission.switch, data).result(callback);\n    case 'userItem':\n      return (new Query({ data, pointApi: entryPoints.item, type: 'GET' })).result();\n    case 'userCurrent':\n      return (new Query({\n        domain: appConfig.domain.auth,\n        type: 'GET',\n        pointApi: entryPoints.user.current,\n      })).result();\n    case 'userEdit':\n      return (new Query({ data, pointApi: entryPoints.edit })).result(callback);\n    default:\n      return null;\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  Button,\n  Row,\n  Input,\n  List,\n  Drawer,\n  Col,\n  Icon,\n  Popconfirm,\n} from 'antd';\n\nconst ButtonGroup = Button.Group;\n\nconst { Search } = Input;\n\nconst displayNone = 'display: none;';\nconst displayInline = 'display: inline;';\n\nclass UserAddFormModel extends Component {\n  constructor(props) {\n    super(props);\n\n    const { visible } = props;\n\n    this.state = {\n      visible,\n    };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { form, actionAdd } = this.props;\n\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        delete values.confirm;\n\n        actionAdd(values);\n      }\n    });\n  };\n\n  onRoleEditAction = (ev, id) => {\n    const parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n    const listRoleItemId = parent.querySelector(`.link-role-name-${id}`);\n    const inputRoleName = parent.querySelector(`.input-role-name-${id}`);\n    const btnRoleEdit = parent.querySelector(`.btn-role-edit-${id}`);\n    const btnRoleDelete = parent.querySelector(`.btn-role-delete-${id}`);\n    const btnRoleSave = parent.querySelector(`.btn-role-save-${id}`);\n\n    listRoleItemId.setAttribute('style', displayNone);\n    inputRoleName.setAttribute('style', displayInline);\n\n    btnRoleEdit.setAttribute('style', displayNone);\n    btnRoleDelete.setAttribute('style', displayNone);\n\n    if (btnRoleSave) {\n      btnRoleSave.setAttribute('style', displayInline);\n    }\n  };\n\n  onRoleDelete = (id) => {\n    const { actionDelete, onRoleSelect } = this.props;\n    actionDelete({ id }, (json) => {\n      onRoleSelect(0);\n\n      return json;\n    });\n  };\n\n  onRoleEdit = (ev, id, name) => {\n    const { actionEdit } = this.props;\n\n    const parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n\n    actionEdit({\n      id,\n      name,\n    }, (json) => {\n      if (json.status === 'ok') {\n        const listRoleItemId = parent.querySelector(`.link-role-name-${id}`);\n        const inputRoleName = parent.querySelector(`.input-role-name-${id}`);\n        const btnRoleEdit = parent.querySelector(`.btn-role-edit-${id}`);\n        const btnRoleDelete = parent.querySelector(`.btn-role-delete-${id}`);\n        const btnRoleSave = parent.querySelector(`.btn-role-save-${id}`);\n\n        listRoleItemId.setAttribute('style', displayInline);\n        inputRoleName.setAttribute('style', displayNone);\n\n        btnRoleEdit.setAttribute('style', displayInline);\n        btnRoleDelete.setAttribute('style', displayInline);\n\n        btnRoleSave.setAttribute('style', displayNone);\n      }\n\n      return json;\n    });\n  };\n\n  shouldComponentUpdate = (nextProps) => {\n    const { visible } = this.props;\n    if (visible !== nextProps.visible) {\n      this.setState({\n        visible: nextProps.visible,\n      });\n    }\n\n    return true;\n  };\n\n  render() {\n    const {\n      title,\n      form: {\n        getFieldDecorator,\n      },\n      onClose,\n      roleList,\n      onRoleSelect,\n    } = this.props;\n\n    const { visible } = this.state;\n\n    return (\n      <Drawer\n        title={title}\n        width={550}\n        onClose={onClose}\n        visible={visible}\n        zIndex={1050}\n      >\n        <Row style={{ marginBottom: '20px' }}>\n          <Col span={24}>\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n              <Form.Item hasFeedback>\n                {getFieldDecorator('name', {\n                  // rules: [\n                  //     { required: true, message: 'Пожалуйста, ввидите код пользователя' }\n                  // ],\n                })(<Input placeholder=\"Название новой роли\" />)}\n              </Form.Item>\n\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Добавить\n                </Button>\n              </Form.Item>\n            </Form>\n          </Col>\n          <Col span={24}>\n            <List\n              size=\"small\"\n              style={{ marginTop: '10px' }}\n              bordered\n              dataSource={roleList}\n              renderItem={(item) => (\n                <List.Item\n                  className={`list-role-item list-role-item-${item.id}`}\n                  actions={(item.editable) ? [\n                    <ButtonGroup key=\"btn-g-1\">\n                      <Button\n                        className={`btn-role-edit btn-role-edit-${item.id}`}\n                        onClick={(ev) => this.onRoleEditAction(ev, item.id)}\n                        size=\"small\"\n                        icon=\"edit\"\n                      />\n                      <Popconfirm\n                        title=\"Удалить роль?\"\n                        onConfirm={() => this.onRoleDelete(item.id)}\n                        okText=\"Да\"\n                        cancelText=\"Нет\"\n                        placement=\"left\"\n                        zIndex={1050}\n                      >\n                        <Button\n                          className={`btn-role-delete btn-role-delete-${item.id}`}\n                          size=\"small\"\n                          icon=\"delete\"\n                        />\n                      </Popconfirm>\n                    </ButtonGroup>,\n                  ] : null}\n                >\n                  <Button\n                    type=\"link\"\n                    onClick={() => onRoleSelect(item.id)}\n                    className={`link-role-name link-role-name-${item.id}`}\n                    style={{ width: '100%' }}\n                  >\n                    {item.name}\n                  </Button>\n                  <Search\n                    className={`input-role-name input-role-name-${item.id}`}\n                    placeholder=\"Название новой роли\"\n                    enterButton={<Icon type=\"save\" />}\n                    size=\"small\"\n                    defaultValue={item.name}\n                    onSearch={(value, event) => this.onRoleEdit(event, item.id, value)}\n                  />\n                </List.Item>\n              )}\n            />\n          </Col>\n        </Row>\n      </Drawer>\n    );\n  }\n}\n\nUserAddFormModel.propTypes = {\n  title: PropTypes.string.isRequired,\n  visible: PropTypes.bool.isRequired,\n  actionAdd: PropTypes.func.isRequired,\n  actionDelete: PropTypes.func.isRequired,\n  actionEdit: PropTypes.func.isRequired,\n  onRoleSelect: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  form: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.func,\n  ])).isRequired,\n  roleList: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    editable: PropTypes.number.isRequired,\n  })).isRequired,\n};\n\nexport default UserAddFormModel;\n","import { Form } from 'antd';\nimport UserAddFormModel from './main';\n\nexport default Form.create({\n  name: 'user_add_form',\n  mapPropsToFields(props) {\n    return {\n      title: Form.createFormField({\n        ...props.sourceTitle,\n        value: props.sourceTitle,\n      }),\n    };\n  },\n})(UserAddFormModel);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport classNames from 'classnames';\nimport map from 'lodash/map';\nimport forEach from 'lodash/forEach';\nimport findIndex from 'lodash/findIndex';\nimport clone from 'lodash/clone';\nimport { Link } from 'react-router';\n\nimport {\n  Collapse,\n  Card,\n  List,\n  Menu,\n  PageHeader,\n  Layout,\n  Spin,\n  Icon,\n  Row,\n  Col,\n  Popover,\n  Button,\n} from 'antd';\n\nimport Logout from '../../app/logout';\n\nimport UserAddForm from './forms/add';\n\nimport {\n  currentTypes,\n} from '../../global/types';\n\n\nconst { Header, Content, Sider } = Layout;\nconst { Panel } = Collapse;\nconst { Meta } = Card;\n\nconst helmetContext = {};\n\nclass Roles extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectRoleName: 'Гость',\n      selectRoleId: 0,\n\n      collapsed: true,\n      visibleSourceAddForm: false,\n      visibleId: null,\n\n      modules: null,\n    };\n\n    props.modelServer();\n  }\n\n  toggle = () => {\n    const { collapsed } = this.state;\n    this.setState({\n      collapsed: !collapsed,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visibleSourceAddForm: false,\n    });\n  };\n\n  onOpen = () => {\n    const { visibleSourceAddForm } = this.state;\n    this.setState({\n      visibleSourceAddForm: !visibleSourceAddForm,\n      visibleId: 1,\n    });\n  };\n\n  onRoleSelect = (ev, setId) => {\n    const {\n      role,\n      modelPermissionItem,\n    } = this.props;\n\n    for (let i = 0; i < role.length; i += 1) {\n      const {\n        id,\n        name,\n      } = role[i];\n\n      if (id === setId) {\n        this.setState({\n          selectRoleName: name,\n          selectRoleId: id,\n        });\n\n        modelPermissionItem({ id });\n        break;\n      }\n    }\n\n    const listRoleItems = document.querySelectorAll('.list-role-item');\n    forEach(listRoleItems, (item) => {\n      item.setAttribute('style', 'background: #fff');\n    });\n\n    const listRoleItemId = document.querySelector(`.list-role-item-${setId}`);\n    if (listRoleItemId) {\n      listRoleItemId.setAttribute('style', 'background: #fafafa');\n    }\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    const {\n      permission,\n      role,\n    } = this.props;\n\n    const {\n      visibleSourceAddForm,\n      collapsed,\n      modules,\n    } = this.state;\n\n    if (nextProps.permission !== permission) {\n      this.setState({\n        modules: nextProps.permission.modules,\n      });\n    }\n\n    return nextState.modules !== modules\n      || nextState.visibleSourceAddForm !== visibleSourceAddForm\n      || nextState.collapsed !== collapsed\n      || nextProps.role !== role;\n  };\n\n  findGroupPermission = (obj, group, permission) => {\n    let findGroupIndex = null;\n    let findPermissionIndex = null;\n\n    forEach(obj, (module, groupIndex) => {\n      if (module.group === group) {\n        findGroupIndex = groupIndex;\n\n        const permissionIndex = findIndex(module.permissions, (element) => {\n          if (element.id === permission) {\n            return true;\n          }\n\n          return false;\n        });\n\n        findPermissionIndex = permissionIndex;\n      }\n    });\n\n    return {\n      group: Number(findGroupIndex),\n      permission: Number(findPermissionIndex),\n    };\n  };\n\n  permissionsSwitch = (group, permission, enabled) => {\n    const { modelPermissionSwitch } = this.props;\n    const { selectRoleId, modules } = this.state;\n\n    const newModules = clone(modules);\n\n    modelPermissionSwitch({\n      enabled,\n      permission_id: permission,\n      role_id: selectRoleId,\n    }, (data) => {\n      if (data.status === 'ok') {\n        const result = this.findGroupPermission(newModules, group, permission);\n\n        newModules[result.group].permissions[result.permission].enabled = !enabled;\n\n        this.setState({\n          modules: newModules,\n        });\n      }\n    });\n  };\n\n  render() {\n    const {\n      current,\n      role,\n      modelRoleDelete,\n      modelRoleEdit,\n      modelRoleAdd,\n    } = this.props;\n\n    const {\n      collapsed,\n      selectRoleName,\n      visibleSourceAddForm,\n      visibleId,\n      modules,\n    } = this.state;\n\n    if (current && modules) {\n      const isLoad = (!current);\n\n      return (\n        <HelmetProvider context={helmetContext}>\n          <Layout>\n            <Sider width={300} trigger={null} collapsible collapsed={collapsed}>\n              <div className=\"logo\">\n                USER\n              </div>\n              <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['2']}>\n                <Menu.Item key=\"1\">\n                  <Link to=\"/\">\n                    <Icon type=\"team\" />\n                    <span>Пользователи</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"2\">\n                  <Link to=\"/role\">\n                    <Icon type=\"cluster\" />\n                    <span>Роли</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.ItemGroup key=\"roles\" title=\"\">\n                  {\n                    (role)\n                      ? map(role, (item) => (\n                        <Menu.Item\n                          onClick={(ev) => this.onRoleSelect(ev, item.id)}\n                          key={`role-${item.id}`}\n                        >\n                          <Icon type=\"property-safety\" />\n                          <span>{item.name}</span>\n                        </Menu.Item>\n                      ))\n                      : null\n                  }\n                </Menu.ItemGroup>\n              </Menu>\n            </Sider>\n            <Layout>\n              <Helmet title={selectRoleName} />\n              <Header>\n                <PageHeader\n                  title={(\n                    <span>\n                      <Icon\n                        className=\"trigger\"\n                        type={collapsed ? 'menu-unfold' : 'menu-fold'}\n                        onClick={this.toggle}\n                      />\n                      Управление ролями\n                    </span>\n                  )}\n                  subTitle={`текущая: ${selectRoleName}`}\n                  extra={[\n                    <Button\n                      key=\"add-role\"\n                      className=\"btn-user-add\"\n                      onClick={() => this.onOpen()}\n                      type=\"primary\"\n                      size=\"small\"\n                    >\n                      Управление ролями\n                    </Button>,\n                    <Logout key=\"logout-1\" />,\n                  ]}\n                />\n              </Header>\n              <Content className=\"user-list\">\n                <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n                  <Row>\n                    <Col span={24}>\n                      <Collapse defaultActiveKey={['1']}>\n                        {\n                          (modules)\n                            ? map(modules, (module) => (\n                              <Panel header={`${module.name}: ${module.desc}`} key={module.group}>\n                                <List\n                                  grid={{\n                                    gutter: 16,\n                                    xs: 1,\n                                    sm: 1,\n                                    md: 2,\n                                    lg: 3,\n                                    xl: 4,\n                                    xxl: 4,\n                                  }}\n                                  dataSource={module.permissions}\n                                  renderItem={(item) => (\n                                    <List.Item>\n                                      <Button\n                                        className=\"btn-permission\"\n                                        onClick={() => {\n                                          this.permissionsSwitch(item.group, item.id, item.enabled);\n                                        }}\n                                      >\n                                        <Popover content={item.desc} title={item.name}>\n                                          <Card\n                                            className={\n                                              classNames('permissions-default', {\n                                                'permissions-enabled': item.enabled,\n                                              })\n                                            }\n                                            size=\"small\"\n                                          >\n                                            <Meta\n                                              avatar={\n                                                (item.enabled)\n                                                  ? <Icon type=\"check\" />\n                                                  : <Icon type=\"stop\" />\n                                              }\n                                              title={item.name}\n                                            />\n                                          </Card>\n                                        </Popover>\n                                      </Button>\n                                    </List.Item>\n                                  )}\n                                />\n                              </Panel>\n                            ))\n                            : null\n                        }\n                      </Collapse>\n                    </Col>\n                    <UserAddForm\n                      visible={visibleSourceAddForm}\n                      visibleId={visibleId}\n                      title=\"Роли\"\n                      roleList={role}\n                      onRoleSelect={this.onRoleSelect}\n                      actionDelete={modelRoleDelete}\n                      actionEdit={modelRoleEdit}\n                      actionAdd={modelRoleAdd}\n                      onClose={this.onClose}\n                      wrappedComponentRef={(form) => {\n                        this.form = form;\n                      }}\n                    />\n                  </Row>\n                </Spin>\n              </Content>\n            </Layout>\n          </Layout>\n        </HelmetProvider>\n      );\n    }\n\n    return null;\n  }\n}\n\nRoles.defaultProps = {\n  permission: null,\n  role: null,\n};\n\nRoles.propTypes = {\n  current: currentTypes.isRequired,\n  modelPermissionItem: PropTypes.func.isRequired,\n  modelPermissionSwitch: PropTypes.func.isRequired,\n  modelRoleAdd: PropTypes.func.isRequired,\n  modelRoleDelete: PropTypes.func.isRequired,\n  modelRoleEdit: PropTypes.func.isRequired,\n  modelServer: PropTypes.func.isRequired,\n  permission: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    editable: PropTypes.number.isRequired,\n    modules: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      desc: PropTypes.string.isRequired,\n      group: PropTypes.number.isRequired,\n    })),\n  }),\n  role: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    editable: PropTypes.number.isRequired,\n  })),\n};\n\nexport default Roles;\n","import { shallowEqual, connectAdvanced } from 'react-redux';\n\nimport creator from '../../app/creator';\nimport api from '../api';\n\nimport Users from './main';\n\nexport default connectAdvanced((dispatch) => {\n  const module = 'system';\n  // let ownProps = {};\n  let result = {};\n\n  const sendTo = creator(api, module, dispatch);\n\n  const modelCurrentUser = () => sendTo('userCurrent');\n\n  const modelRoleItems = () => sendTo('roleItems');\n\n  const modelPermissionItem = (data) => sendTo('permissionItem', data);\n  const modelPermissionSwitch = (data, afterAction) => sendTo('permissionSwitch', data, afterAction);\n\n  const modelRoleAdd = (data) => sendTo('roleAdd', data, (json) => json);\n\n  const modelRoleEdit = (data, afterAction) => sendTo('roleEdit', data, afterAction);\n\n  const modelRoleDelete = (data) => sendTo('roleDelete', data, (json) => json);\n\n  /**\n   * Downloading data from a remote server\n   * @private\n   */\n  const modelServer = () => {\n    modelCurrentUser();\n    modelRoleItems();\n    modelPermissionItem({ id: 0 });\n  };\n\n  return (nextState, nextOwnProps) => {\n    const isNull = (value) => value === null;\n\n    const loading = isNull(nextState[module].userCurrent);\n\n    const role = isNull(nextState[module].roleItems)\n      ? null\n      : nextState[module].roleItems;\n\n    const permission = isNull(nextState[module].permissionItem)\n      ? null\n      : nextState[module].permissionItem;\n\n    const access = isNull(nextState[module].userCurrent)\n      ? {}\n      : nextState[module].userCurrent.access;\n\n    const current = isNull(nextState[module].userCurrent)\n      ? {}\n      : nextState[module].userCurrent.data;\n\n    const nextResult = {\n      ...nextOwnProps,\n      loading,\n      permission,\n      role,\n      access,\n      current,\n      modelServer,\n      modelRoleItems,\n      modelPermissionItem,\n      modelPermissionSwitch,\n      modelRoleDelete,\n      modelRoleEdit,\n      modelRoleAdd,\n    };\n    // ownProps = nextOwnProps;\n    if (!shallowEqual(result, nextResult)) {\n      result = nextResult;\n    }\n\n    return result;\n  };\n})(Users);\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport UserStore from './state';\n\nimport Index from './component';\n\nimport './css/index.less';\n\nimport { locationTypes, paramsTypes } from '../global/types';\n\nconst Module = (props) => {\n  const { location, params } = props;\n\n  return (\n    <Provider store={UserStore}>\n      <Index\n        location={location}\n        params={params}\n      />\n    </Provider>\n  );\n};\n\nModule.propTypes = {\n  location: locationTypes.isRequired,\n  params: paramsTypes.isRequired,\n};\n\nexport default Module;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./modules/role/route.js","webpack:///./modules/role/config.js","webpack:///./modules/role/store/middlewares/user.js","webpack:///./modules/role/store/middlewares/role.js","webpack:///./modules/role/store/reducers/user.js","webpack:///./modules/role/store/reducers/role.js","webpack:///./modules/role/store/state.js","webpack:///./modules/role/store/api/user.js","webpack:///./modules/role/store/actions/user.js","webpack:///./modules/role/store/api/role.js","webpack:///./modules/role/store/actions/role.js","webpack:///./modules/role/component/main/source_add_form.jsx","webpack:///./modules/role/component/main/index.jsx","webpack:///./modules/role/main.jsx"],"names":["__webpack_exports__","path","getComponent","location","cb","require","bind","__webpack_require__","catch","oe","config","model","api","permission","rolePermission","roles","roleAdd","roleEdit","roleDelete","userCurrent","userEdit","middleware","store","next","action","includes","type","middlewareAction","actionReducers","status","state","arguments","length","undefined","data","combineReducers","concat","current","item","role","createStoreWithMiddleware","applyMiddleware","user","thunk","createStore","reducers","modelEdit","filter","Query","pointApi","result","then","json","Function","actions","promise","domain","appConfig","auth","get","query","post","modelPermission","callback","id","role_id","modelRole","ButtonGroup","Button","Group","Search","Input","UserAddFormModel","props","_this","_classCallCheck","this","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","e","preventDefault","form","validateFieldsAndScroll","err","values","confirm","actionRole","onClose","ev","parent","target","parentElement","listRoleItemId","querySelector","inputRoleName","btnRoleEdit","btnRoleDelete","btnRoleSave","style","display","msg","message","success","onRoleSelect","error","_errorMsg","name","nextProps","nextState","visible","setState","Component","_this2","getFieldDecorator","react_default","a","createElement","drawer","title","width","zIndex","row","marginBottom","col","span","es_form","layout","onSubmit","handleSubmit","Item","hasFeedback","input","placeholder","es_button","htmlType","list","size","marginTop","bordered","dataSource","roleList","renderItem","className","editable","onClick","onRoleEditAction","icon","popconfirm","onConfirm","onRoleDelete","okText","cancelText","placement","react_router_es","enterButton","defaultValue","onSearch","value","event","onRoleEdit","visibleId","successionId","operationId","inputSourceId","stageId","Form","create","mapPropsToFields","createFormField","_objectSpread","sourceTitle","console","log","Header","Layout","Content","Sider","Panel","Collapse","Meta","Card","Roles","main_classCallCheck","main_getPrototypeOf","main_defineProperty","main_assertThisInitialized","collapsed","visibleSourceAddForm","i","selectRoleName","selectRoleId","actionPermission","document","querySelectorAll","forEach","setAttribute","group","enabled","permission_id","items","loading","actionCurrent","React","isLoad","trigger","collapsible","menu","theme","mode","defaultSelectedKeys","key","to","ItemGroup","map","Helmet_default","page_header","toggle","subTitle","extra","onOpen","core","spin","tip","spinning","collapse","defaultActiveKey","modules","header","desc","grid","gutter","xs","sm","md","lg","xl","xxl","permissions","permissionsSwitch","popover","content","card","classNames","permissions-enabled","avatar","source_add_form","wrappedComponentRef","connect","access","dispatch","bindActionCreators","actionEdit","EditMain","es","UserStore","main","params"],"mappings":"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","file":"role.js?hash=3764fc944dafc0548f32","sourcesContent":["'use strict';\n\nexport default {\n    path: 'role',\n    getComponent(location, cb) {\n        require.ensure([], (require) => {\n            cb(null, require('./main').default);\n        });\n    }\n};","'use strict';\n\nexport default {\n    model: 'role',\n    api: {\n        permission:   'interface-users/permission',\n        rolePermission:  'interface-users/role-permission',\n\n        roles:   'interface-users/roles',\n        roleAdd: 'interface-users/role-add',\n        roleEdit: 'interface-users/role-edit',\n        roleDelete: 'interface-users/role-delete',\n\n        userCurrent: 'interface-users/user-current',\n        userEdit: 'interface-users/user-edit',\n    },\n    middleware: [\n        'PERMISSION',\n        'ROLE',\n        'USER_CURRENT',\n        'USER_ITEM',\n    ]\n}","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport {combineReducers} from 'redux';\n\nconst MODEL = 'USER';\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n    action: actionReducers([\n        `${MODEL}_ITEM_LOADING`\n    ]),\n    current: actionReducers([\n        `${MODEL}_CURRENT_LOADED`\n    ]),\n    item: actionReducers([\n        `${MODEL}_ITEM_LOADED`\n    ])\n});\n","'use strict';\n\nimport {combineReducers} from 'redux';\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n    permission: actionReducers([\n        'PERMISSION_LOADED'\n    ]),\n    role: actionReducers([\n        'ROLE_LOADED'\n    ]),\n});\n","'use strict';\n\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n//import {createLogger} from 'redux-logger';\n\nimport user from './middlewares/user';\nimport role from './middlewares/role';\n\n//Найдет и загрузит все reducers из папки\nimport * as reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(\n    user,\n    role,\n    thunk//, createLogger({collapsed:true})\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers(reducers));\n","'use strict';\n\nimport {Query} from 'modules/app/core';\nimport appConfig from \"config\";\nimport config from \"../../config\";\n\nconst api = config.api;\n\nexport function modelCurrentUser()\n{\n    let ReactQueryObject = new Query({\n        domain: appConfig.domain.auth,\n        type: Query.get,\n        pointApi: api.userCurrent\n    });\n\n    return ReactQueryObject.result();\n}\n\nexport function modelEdit(data, filter, action)\n{\n    let ReactQueryObject = new Query({\n        pointApi: api.userEdit,\n        data: data\n    });\n\n    return ReactQueryObject.result().then((json) => {\n        if (json) {\n            if (action instanceof Function) {\n                action(filter);\n            }\n        }\n    });\n}\n","'use strict';\n\nimport {modelEdit, modelCurrentUser} from '../api/user';\n\nexport function userCurrent() {\n    return {\n        type: 'USER_CURRENT',\n        actions: ['USER_CURRENT_LOADING', 'USER_CURRENT_LOADED', 'USER_CURRENT_LOAD_FAILURE'],\n        promise: modelCurrentUser(),\n    };\n}\n\nexport function userEdit(data, filter = null, action = null) {\n    return {\n        type: 'USER_EDIT',\n        actions: ['USER_EDIT_LOADED'],\n        model: modelEdit(data, filter, action),\n    };\n}\n","'use strict';\n\nimport {Query} from 'modules/app/core';\nimport config from \"../../config\";\n\nconst api = config.api;\n\nfunction query (pointApi, data, type = Query.post) {\n    return new Query({\n        pointApi: pointApi,\n        type: type,\n        data: data\n    });\n}\n\n/**\n * Управление разрешениями\n *\n * @param action\n * @param data\n * @param callback\n * @returns {*}\n */\nexport function modelPermission(action, data, callback)\n{\n    switch (action) {\n        case 'item':\n            return query(api.permission, data, Query.get).result();\n        case 'switch':\n            return query(api.rolePermission, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.permission, {id: data.role_id}, Query.get).result();\n                }\n            });\n    }\n}\n\n/**\n * Управление ролями\n *\n * @param action\n * @param data\n * @param callback\n * @returns {*}\n */\nexport function modelRole(action, data = {}, callback)\n{\n    switch (action) {\n        case 'items':\n            return query(api.roles, data, Query.get).result();\n        case 'add':\n            return query(api.roleAdd, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.roles).result();\n                }\n            });\n        case 'edit':\n            return query(api.roleEdit, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.roles).result(callback);\n                }\n            });\n        case 'delete':\n            return query(api.roleDelete, data, Query.post).result(callback).then((json) => {\n                if (json) {\n                    return query(api.roles).result();\n                }\n            });\n    }\n}\n","import { modelPermission, modelRole } from '../api/role';\n\nexport function permission(action, data, callback) {\n    return {\n        type: 'PERMISSION',\n        actions: ['PERMISSION_LOADING', 'PERMISSION_LOADED', 'PERMISSION_LOAD_FAILURE'],\n        promise: modelPermission(action, data, callback),\n    };\n}\n\nexport function role(action, data, callback) {\n    return {\n       type: 'ROLE',\n       actions: ['ROLE_LOADING', 'ROLE_LOADED', 'ROLE_LOAD_FAILURE'],\n       promise: modelRole(action, data, callback),\n    };\n}\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router\";\nimport { Form, Button, Row, Input, List, Drawer, Col, Icon, message, Popconfirm } from 'antd';\nconst ButtonGroup = Button.Group;\n\nconst { Search } = Input;\n\nclass UserAddFormModel extends Component\n{\n    static defaultProps = {\n        visible: true,\n        visibleId: null,\n        successionId: null,\n        operationId: null,\n        inputSourceId: null,\n        stageId: null,\n        title: null,\n    };\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            visible: props.visible\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                delete values.confirm;\n\n                this.props.actionRole('add', values);\n            }\n        });\n    };\n\n    onClose = () => {\n        this.props.onClose();\n    };\n\n    onRoleEditAction = (ev, id) => {\n        let parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n        let listRoleItemId = parent.querySelector(`.link-role-name-${id}`);\n        let inputRoleName  = parent.querySelector(`.input-role-name-${id}`);\n        let btnRoleEdit    = parent.querySelector(`.btn-role-edit-${id}`);\n        let btnRoleDelete  = parent.querySelector(`.btn-role-delete-${id}`);\n        let btnRoleSave    = parent.querySelector(`.btn-role-save-${id}`);\n\n        listRoleItemId.style.display = \"none\";\n        inputRoleName.style.display = \"inline\";\n\n        btnRoleEdit.style.display = \"none\";\n        btnRoleDelete.style.display = \"none\";\n        btnRoleSave ? btnRoleSave.style.display = \"inline\" : null;\n    };\n\n    onRoleDelete = (id) => {\n        this.props.actionRole('delete', {\n            id: id\n        }, (json) => {\n            if (json.status === \"ok\") {\n                if (json.msg) {\n                    message.success(json.msg);\n\n                    this.props.onRoleSelect(0);\n                }\n\n                if (json.result) {\n                    return json.result;\n                } else {\n                    return true;\n                }\n            } else if (json.msg) {\n                message.error(this._errorMsg(json.msg));\n                return false;\n            }\n        });\n\n\n    };\n\n    onRoleEdit = (ev, id, name) => {\n        let parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n\n        this.props.actionRole('edit', {\n            id: id,\n            name: name\n        }, (json) => {\n            if (json.status === \"ok\") {\n                if (json.msg) {\n                    message.success(json.msg);\n                }\n\n                if (json.result) {\n                    let listRoleItemId = parent.querySelector(`.link-role-name-${id}`);\n                    let inputRoleName  = parent.querySelector(`.input-role-name-${id}`);\n                    let btnRoleEdit    = parent.querySelector(`.btn-role-edit-${id}`);\n                    let btnRoleDelete  = parent.querySelector(`.btn-role-delete-${id}`);\n                    let btnRoleSave    = parent.querySelector(`.btn-role-save-${id}`);\n\n                    listRoleItemId.style.display = \"inline\";\n                    inputRoleName.style.display = \"none\";\n\n                    btnRoleEdit.style.display = \"inline\";\n                    btnRoleDelete.style.display = \"inline\";\n                    btnRoleSave ? btnRoleSave.style.display = \"none\" : null;\n\n                    return json.result;\n                } else {\n                    return true;\n                }\n            } else if(json.msg) {\n                message.error(this._errorMsg(json.msg));\n                return false;\n            }\n        });\n    };\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        if (this.props.visible !== nextProps.visible) {\n            this.setState({\n                visible: nextProps.visible\n            });\n        }\n\n        return true;\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Drawer\n                title={this.props.title}\n                width={550}\n                onClose={this.onClose}\n                visible={this.state.visible}\n                zIndex={1050}\n            >\n                <Row style={{marginBottom:'20px'}}>\n                    <Col span={24}>\n                        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n                            <Form.Item hasFeedback>\n                                {getFieldDecorator('name', {\n                                    // rules: [\n                                    //     { required: true, message: 'Пожалуйста, ввидите код пользователя' }\n                                    // ],\n                                })(<Input placeholder=\"Название новой роли\" />)}\n                            </Form.Item>\n\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Добавить\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24}>\n                        <List\n                            size=\"small\"\n                            style={{marginTop:'10px'}}\n                            bordered\n                            dataSource={this.props.roleList}\n                            renderItem={item =>\n                            <List.Item\n                                className={`list-role-item list-role-item-${item.id}`}\n                                actions={(item.editable) ? [\n                                <ButtonGroup>\n                                    <Button className={`btn-role-edit btn-role-edit-${item.id}`} onClick={(ev) => this.onRoleEditAction(ev, item.id)} size=\"small\" icon=\"edit\" />\n                                    <Popconfirm\n                                        title=\"Удалить роль?\"\n                                        onConfirm={() => this.onRoleDelete(item.id)}\n                                        okText=\"Да\"\n                                        cancelText=\"Нет\"\n                                        placement=\"left\"\n                                        zIndex={1050}\n                                    >\n                                        <Button className={`btn-role-delete btn-role-delete-${item.id}`} size=\"small\" icon=\"delete\" />\n                                    </Popconfirm>\n                                </ButtonGroup>\n                                ] : null}>\n                                <Link onClick={(ev) => {\n                                    this.props.onRoleSelect(ev, item.id)\n                                }} className={`link-role-name link-role-name-${item.id}`} style={{width:'100%'}}>{item.name}</Link>\n\n                                <Search\n                                    className={`input-role-name input-role-name-${item.id}`}\n                                    placeholder=\"Название новой роли\"\n                                    enterButton={<Icon type=\"save\" />}\n                                    size=\"small\"\n                                    defaultValue={item.name}\n                                    onSearch={(value, event) => this.onRoleEdit(event, item.id, value)}\n                                />\n                            </List.Item>}\n                        />\n                    </Col>\n                </Row>\n            </Drawer>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_add_form',\n    mapPropsToFields(props) {\n        return {\n            title: Form.createFormField({\n                ...props.sourceTitle,\n                value: props.sourceTitle,\n            }),\n        };\n    },\n})(UserAddFormModel);\n","'use strict';\n\nconsole.log('role index');\n\nimport React from 'react';\nimport Helmet from \"react-helmet\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport {Logout} from 'modules/app/core';\n\nimport {\n    userEdit as actionEdit,\n    userCurrent as actionCurrent,\n} from '../../store/actions/user';\n\nimport {permission as actionPermission, role as actionRole } from '../../store/actions/role';\n\nimport {Collapse, Card, List, Menu, PageHeader, Layout, Spin, Icon, Row, Col, Popover, Button} from 'antd';\nconst { Header, Content, Sider } = Layout;\nconst Panel = Collapse.Panel;\nconst { Meta } = Card;\n\nimport UserAddForm from \"./source_add_form\";\n\nclass Roles extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            selectRoleName: 'Гость',\n            selectRoleId: 0,\n\n            collapsed: true,\n            visibleSourceAddForm: false,\n            visibleId: null,\n            items: props.items,\n            loading: true,\n            operationId: '',\n        };\n\n        this.props.actionCurrent();\n        this.props.actionRole('items');\n\n        this.props.actionPermission('item', {id:0});\n    }\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visibleSourceAddForm: false,\n        });\n    };\n\n    onOpen = () => {\n        this.setState({\n            visibleSourceAddForm: !this.state.visibleSourceAddForm,\n            visibleId: 1\n        });\n    };\n\n    onRoleSelect = (ev, id) => {\n        for (let i=0; i < this.props.role.length; i++) {\n            let item = this.props.role[i];\n\n            if (item.id === id) {\n                this.setState({\n                    selectRoleName: item.name,\n                    selectRoleId: item.id,\n                });\n\n                this.props.actionPermission('item', {id:item.id});\n\n                break;\n            }\n        }\n\n        let listRoleItems = document.querySelectorAll(\".list-role-item\");\n        listRoleItems.forEach((item) => {\n            item.setAttribute(\"style\", \"background: #fff\");\n        });\n\n        let listRoleItemId = document.querySelector(`.list-role-item-${id}`);\n        listRoleItemId.setAttribute(\"style\", \"background: #fafafa\");\n    };\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        return nextProps.permission !== this.props.permission ||\n            nextState.visibleSourceAddForm !== this.state.visibleSourceAddForm ||\n            nextState.collapsed !== this.state.collapsed ||\n            nextProps.role !== this.props.role;\n    };\n\n    permissionsSwitch = (group, permission, enabled) => {\n        this.props.actionPermission('switch', {\n            enabled: enabled,\n            permission_id: permission,\n            role_id: this.state.selectRoleId\n        });\n    };\n\n    render()\n    {\n        if (this.props.current) {\n            let isLoad = (this.props.current) ? false : true;\n\n            return (\n                <Layout>\n                    <Sider width={300} trigger={null} collapsible collapsed={this.state.collapsed}>\n                        <div className=\"logo\">\n                            USER\n                        </div>\n                        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['2']}>\n                            <Menu.Item key=\"1\">\n                                <Link  to=\"/\"><Icon type=\"team\" /><span>Пользователи</span></Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"2\">\n                                <Link  to=\"/role\"><Icon type=\"cluster\" /><span>Роли</span></Link>\n                            </Menu.Item>\n                            <Menu.ItemGroup key=\"roles\" title=\"\">\n                                {\n                                    (this.props.role)\n                                    ?\n                                        this.props.role.map((item) =>\n                                            <Menu.Item onClick={(ev) => {\n                                                this.onRoleSelect(ev, item.id)\n                                            }} key={`role-${item.id}`}>\n                                                <Icon type=\"property-safety\" />\n                                                <span>{item.name}</span>\n                                            </Menu.Item>\n                                        )\n                                    :null\n                                }\n                            </Menu.ItemGroup>\n                        </Menu>\n                    </Sider>\n                    <Layout>\n                        <Helmet title={this.state.selectRoleName} />\n                        <Header>\n                            <PageHeader\n                                title={<span><Icon\n                                    className=\"trigger\"\n                                    type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                                    onClick={this.toggle}\n                                />Управление ролями</span>}\n                                subTitle={`текущая: ${this.state.selectRoleName}`}\n                                extra={[\n                                    <Button key=\"add-role\" className=\"btn-user-add\" onClick={() => this.onOpen()} type=\"primary\" size=\"small\">\n                                        Управление ролями\n                                    </Button>,\n                                    <Logout key=\"logout-1\" />\n                                ]}\n                            />\n                        </Header>\n                        <Content className='user-list'>\n                            <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n                                <Row>\n                                    <Col span={24}>\n                                        <Collapse defaultActiveKey={['1']}>\n                                        {\n                                            (this.props.permission.modules) ?\n                                                this.props.permission.modules.map((item) =>\n                                                    <Panel header={`${item.name}: ${item.desc}`} key={item.group}>\n                                                        <List\n                                                            grid={{\n                                                                gutter: 16,\n                                                                xs: 1,\n                                                                sm: 1,\n                                                                md: 2,\n                                                                lg: 3,\n                                                                xl: 4,\n                                                                xxl: 4,\n                                                            }}\n                                                            dataSource={item.permissions}\n                                                            renderItem={(item, i) => (\n                                                                <List.Item>\n                                                                    <Link  onClick={() => { this.permissionsSwitch(item.group, item.id, item.enabled) }}>\n                                                                        <Popover content={item.desc} title={item.name}>\n                                                                        <Card\n                                                                            className={\n                                                                                classNames('permissions-default', {\n                                                                                    'permissions-enabled': item.enabled,\n                                                                                })\n                                                                            }\n                                                                            size=\"small\"\n                                                                        >\n                                                                            <Meta\n                                                                                avatar={\n                                                                                    (item.enabled) ? <Icon type=\"check\" /> : <Icon type=\"stop\" />\n                                                                                }\n                                                                                title={item.name}\n                                                                                //description=\"Описание\"\n                                                                            />\n\n                                                                        </Card>\n                                                                        </Popover>\n                                                                    </Link>\n                                                                </List.Item>\n                                                            )}\n                                                        />\n                                                    </Panel>\n                                                )\n                                            : null\n                                        }\n                                        </Collapse>\n                                    </Col>\n\n                                    <UserAddForm\n                                        visible={this.state.visibleSourceAddForm}\n                                        visibleId={this.state.visibleId}\n                                        title='Роли'\n                                        onRoleSelect={this.onRoleSelect}\n                                        roleList={this.props.role}\n                                        actionRole={this.props.actionRole}\n\n                                        onClose={this.onClose} wrappedComponentRef={(form) => this.form = form}\n                                    />\n                                </Row>\n                            </Spin>\n                        </Content>\n                    </Layout>\n                </Layout>\n            );\n        } else {\n            return null\n        }\n    }\n}\n\nexport default connect(\n    (state) => {\n        return {\n            access: state.user.access,\n            current: state.user.current,\n            role: state.role.role,\n            permission: state.role.permission\n        };\n    },\n    (dispatch) => bindActionCreators({actionCurrent, actionEdit, actionPermission, actionRole, dispatch}, dispatch)\n)(Roles);\n","import React, {Component} from 'react';\nimport {Provider} from 'react-redux';\n\nimport UserStore from './store/state';\n\nimport Index from './component/main/index';\n\nimport './less/index.less';\n\nclass EditMain extends Component {\n    render() {\n        return (\n            <Provider store={UserStore}>\n                <Index\n                    header={this.props.header}\n                    location={this.props.location}\n                    params={this.props.params}\n                />\n            </Provider>\n        );\n    }\n}\n\nexport default EditMain;"],"sourceRoot":""}
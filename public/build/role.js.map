{"version":3,"sources":["webpack:///./modules/role/index.js","webpack:///./modules/role/state.js","webpack:///./modules/role/api.js","webpack:///./modules/role/component/forms/add/main.jsx","webpack:///./modules/role/component/forms/add/index.jsx","webpack:///./modules/role/component/main.jsx","webpack:///./modules/role/component/index.js","webpack:///./modules/role/main.jsx"],"names":["path","getComponent","nextState","component","then","mad","noop","createStoreWithMiddleware","applyMiddleware","middleware","thunk","createLogger","collapsed","createStore","combineReducers","system","reducer","name","models","points","query","pointApi","data","type","Query","post","entryPoints","user","item","current","role","items","add","edit","delete","permission","switch","api","action","callback","get","result","json","roles","domain","appConfig","auth","ButtonGroup","Button","Group","Search","Input","UserAddFormModel","props","e","preventDefault","form","validateFieldsAndScroll","err","values","confirm","actionRole","onClose","ev","id","parent","target","parentElement","listRoleItemId","querySelector","inputRoleName","btnRoleEdit","btnRoleDelete","btnRoleSave","style","display","status","msg","message","success","onRoleSelect","error","_errorMsg","nextProps","visible","setState","state","getFieldDecorator","this","title","width","zIndex","marginBottom","span","layout","onSubmit","handleSubmit","Item","hasFeedback","placeholder","htmlType","size","marginTop","bordered","dataSource","roleList","renderItem","className","actions","editable","onClick","onRoleEditAction","icon","onConfirm","onRoleDelete","okText","cancelText","placement","enterButton","defaultValue","onSearch","value","event","onRoleEdit","Component","visibleId","successionId","operationId","inputSourceId","stageId","Form","create","mapPropsToFields","createFormField","sourceTitle","Header","Layout","Content","Sider","Panel","Collapse","Meta","Card","Roles","visibleSourceAddForm","i","length","selectRoleName","selectRoleId","modelPermissionItem","document","querySelectorAll","forEach","setAttribute","group","enabled","modelPermissionSwitch","permission_id","role_id","loading","modelServer","isLoad","trigger","collapsible","theme","mode","defaultSelectedKeys","key","to","ItemGroup","map","toggle","subTitle","extra","onOpen","tip","spinning","defaultActiveKey","modules","header","desc","grid","gutter","xs","sm","md","lg","xl","xxl","permissions","permissionsSwitch","content","classNames","avatar","wrappedComponentRef","React","connectAdvanced","dispatch","module","sendTo","creator","modelRoleItems","modelRoleEdit","modelRoleDelete","nextOwnProps","isNull","console","log","userCurrent","roleItems","nextResult","permissionItem","access","shallowEqual","Users","Module","location","params","store","UserStore"],"mappings":"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","file":"role.js?hash=1759b8abc0d47b611598","sourcesContent":["import noop from 'lodash/noop';\n\nexport default {\n  path: 'role',\n  getComponent(nextState, component) {\n    import('./main').then((mad) => component(null, mad.default)).catch(() => noop);\n  },\n};","'use strict';\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\n\nimport middleware from '../app/middleware';\nimport reducer from '../app/reducer';\n\nimport thunk from 'redux-thunk';\nimport {createLogger} from 'redux-logger';\n\nconst module = {\n  name: 'system',\n  models: [\n    {\n      name: 'user',\n      points: ['current']\n    },\n    {\n      name: 'role',\n      points: ['items']\n    },\n    {\n      name: 'permission',\n      points: ['item']\n    }\n  ]\n};\n\nconst createStoreWithMiddleware = applyMiddleware(\n  middleware('system'),\n  thunk,\n  createLogger({collapsed:true}),\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers({\n  system: reducer(module)\n}));\n","'use strict';\n\nimport { Query } from 'modules/app/core';\nimport appConfig from 'config';\n\nfunction query (pointApi, data, type = Query.post) {\n  return new Query({\n    pointApi: pointApi,\n    type: type,\n    data: data\n  });\n}\n\nconst entryPoints = {\n  user: {\n    item: 'interface-users/user',\n    current: 'interface-users/user-current',\n  },\n  role: {\n    items: 'interface-users/roles',\n    add: 'interface-users/role-add',\n    edit: 'interface-users/role-edit',\n    delete: 'interface-users/role-delete'\n  },\n  permission: {\n    item: 'interface-users/permission',\n    switch: 'interface-users/role-permission',\n  }\n};\n\nexport default function api(action, data, callback) {\n  switch (action) {\n    case 'roleItems':\n      return query(entryPoints.role.items, data, Query.get).result();\n    case 'roleAdd':\n      return query(entryPoints.role.add, data, Query.post).result().then((json) => {\n        if (json) {\n          //return query(api.roles).result();\n        }\n      });\n    case 'roleEdit':\n      return query(entryPoints.role.edit, data, Query.post).result().then((json) => {\n        if (json) {\n          //return query(api.roles).result(callback);\n        }\n      });\n    case 'roleDelete':\n      return query(entryPoints.role.delete, data, Query.post).result(callback).then((json) => {\n        if (json) {\n          return query(api.roles).result();\n        }\n      });\n\n    case 'permissionItem':\n      return query(entryPoints.permission.item, data, Query.get).result();\n    case 'permissionSwitch':\n      return query(entryPoints.permission.switch, data, Query.post).result().then((json) => {\n        // if (json) {\n        //   return query(api.permission, {id: data.role_id}, Query.get).result();\n        // }\n      });\n\n    case 'userItem':\n      return (new Query({ data, pointApi: entryPoints.item, type: Query.get, })).result();\n    case 'userCurrent':\n      return (new Query({\n        domain: appConfig.domain.auth,\n        type: Query.get,\n        pointApi: entryPoints.user.current\n      })).result();\n    case 'userEdit':\n      return (new Query({ data, pointApi: entryPoints.edit })).result();\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Link } from 'react-router';\nimport { Form, Button, Row, Input, List, Drawer, Col, Icon, message, Popconfirm } from 'antd';\n\nconst ButtonGroup = Button.Group;\n\nconst { Search } = Input;\n\nclass UserAddFormModel extends Component {\n  static defaultProps = {\n    visible: true,\n    visibleId: null,\n    successionId: null,\n    operationId: null,\n    inputSourceId: null,\n    stageId: null,\n    title: null,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.visible,\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        delete values.confirm;\n\n        this.props.actionRole('add', values);\n      }\n    });\n  };\n\n  onClose = () => {\n    this.props.onClose();\n  };\n\n  onRoleEditAction = (ev, id) => {\n    let parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n    let listRoleItemId = parent.querySelector(`.link-role-name-${id}`);\n    let inputRoleName = parent.querySelector(`.input-role-name-${id}`);\n    let btnRoleEdit = parent.querySelector(`.btn-role-edit-${id}`);\n    let btnRoleDelete = parent.querySelector(`.btn-role-delete-${id}`);\n    let btnRoleSave = parent.querySelector(`.btn-role-save-${id}`);\n\n    listRoleItemId.style.display = 'none';\n    inputRoleName.style.display = 'inline';\n\n    btnRoleEdit.style.display = 'none';\n    btnRoleDelete.style.display = 'none';\n    btnRoleSave ? btnRoleSave.style.display = 'inline' : null;\n  };\n\n  onRoleDelete = (id) => {\n    this.props.actionRole('delete', {\n      id: id,\n    }, (json) => {\n      if (json.status === 'ok') {\n        if (json.msg) {\n          message.success(json.msg);\n\n          this.props.onRoleSelect(0);\n        }\n\n        if (json.result) {\n          return json.result;\n        } else {\n          return true;\n        }\n      } else if (json.msg) {\n        message.error(this._errorMsg(json.msg));\n        return false;\n      }\n    });\n  };\n\n  onRoleEdit = (ev, id, name) => {\n    let parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n\n    this.props.actionRole('edit', {\n      id: id,\n      name: name,\n    }, (json) => {\n      if (json.status === 'ok') {\n        if (json.msg) {\n          message.success(json.msg);\n        }\n\n        if (json.result) {\n          let listRoleItemId = parent.querySelector(`.link-role-name-${id}`);\n          let inputRoleName = parent.querySelector(`.input-role-name-${id}`);\n          let btnRoleEdit = parent.querySelector(`.btn-role-edit-${id}`);\n          let btnRoleDelete = parent.querySelector(`.btn-role-delete-${id}`);\n          let btnRoleSave = parent.querySelector(`.btn-role-save-${id}`);\n\n          listRoleItemId.style.display = 'inline';\n          inputRoleName.style.display = 'none';\n\n          btnRoleEdit.style.display = 'inline';\n          btnRoleDelete.style.display = 'inline';\n          btnRoleSave ? btnRoleSave.style.display = 'none' : null;\n\n          return json.result;\n        } else {\n          return true;\n        }\n      } else if (json.msg) {\n        message.error(this._errorMsg(json.msg));\n        return false;\n      }\n    });\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.props.visible !== nextProps.visible) {\n      this.setState({\n        visible: nextProps.visible,\n      });\n    }\n\n    return true;\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Drawer\n        title={this.props.title}\n        width={550}\n        onClose={this.onClose}\n        visible={this.state.visible}\n        zIndex={1050}\n      >\n        <Row style={{ marginBottom: '20px' }}>\n          <Col span={24}>\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n              <Form.Item hasFeedback>\n                {getFieldDecorator('name', {\n                  // rules: [\n                  //     { required: true, message: 'Пожалуйста, ввидите код пользователя' }\n                  // ],\n                })(<Input placeholder=\"Название новой роли\"/>)}\n              </Form.Item>\n\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Добавить\n                </Button>\n              </Form.Item>\n            </Form>\n          </Col>\n          <Col span={24}>\n            <List\n              size=\"small\"\n              style={{ marginTop: '10px' }}\n              bordered\n              dataSource={this.props.roleList}\n              renderItem={item =>\n                <List.Item\n                  className={`list-role-item list-role-item-${item.id}`}\n                  actions={(item.editable) ? [\n                    <ButtonGroup>\n                      <Button\n                        className={`btn-role-edit btn-role-edit-${item.id}`}\n                        onClick={(ev) => this.onRoleEditAction(ev, item.id)} size=\"small\"\n                        icon=\"edit\"\n                      />\n                      <Popconfirm\n                        title=\"Удалить роль?\"\n                        onConfirm={() => this.onRoleDelete(item.id)}\n                        okText=\"Да\"\n                        cancelText=\"Нет\"\n                        placement=\"left\"\n                        zIndex={1050}\n                      >\n                        <Button\n                          className={`btn-role-delete btn-role-delete-${item.id}`}\n                          size=\"small\"\n                          icon=\"delete\"\n                        />\n                      </Popconfirm>\n                    </ButtonGroup>,\n                  ] : null}>\n                  <Link onClick={(ev) => {\n                    this.props.onRoleSelect(ev, item.id);\n                  }} className={`link-role-name link-role-name-${item.id}`}\n                        style={{ width: '100%' }}>{item.name}</Link>\n\n                  <Search\n                    className={`input-role-name input-role-name-${item.id}`}\n                    placeholder=\"Название новой роли\"\n                    enterButton={<Icon type=\"save\"/>}\n                    size=\"small\"\n                    defaultValue={item.name}\n                    onSearch={(value, event) => this.onRoleEdit(event, item.id, value)}\n                  />\n                </List.Item>}\n            />\n          </Col>\n        </Row>\n      </Drawer>\n    );\n  }\n}\n\nexport default UserAddFormModel;\n","import { Form } from 'antd';\nimport UserAddFormModel from './main';\n\nexport default Form.create({\n  name: 'user_add_form',\n  mapPropsToFields(props) {\n    return {\n      title: Form.createFormField({\n        ...props.sourceTitle,\n        value: props.sourceTitle,\n      }),\n    };\n  },\n})(UserAddFormModel);\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport classNames from 'classnames';\nimport { Link } from 'react-router';\n\nimport { Logout } from 'modules/app/core';\n\nimport {\n  Collapse,\n  Card,\n  List,\n  Menu,\n  PageHeader,\n  Layout,\n  Spin,\n  Icon,\n  Row,\n  Col,\n  Popover,\n  Button,\n} from 'antd';\n\nconst { Header, Content, Sider } = Layout;\nconst Panel = Collapse.Panel;\nconst { Meta } = Card;\n\nimport UserAddForm from './forms/add';\n\nclass Roles extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectRoleName: 'Гость',\n      selectRoleId: 0,\n\n      collapsed: true,\n      visibleSourceAddForm: false,\n      visibleId: null,\n      items: props.items,\n      loading: true,\n      operationId: '',\n    };\n\n    props.modelServer();\n  }\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visibleSourceAddForm: false,\n    });\n  };\n\n  onOpen = () => {\n    this.setState({\n      visibleSourceAddForm: !this.state.visibleSourceAddForm,\n      visibleId: 1,\n    });\n  };\n\n  onRoleSelect = (ev, id) => {\n    for (let i = 0; i < this.props.role.length; i++) {\n      let item = this.props.role[i];\n\n      if (item.id === id) {\n        this.setState({\n          selectRoleName: item.name,\n          selectRoleId: item.id,\n        });\n\n        this.props.modelPermissionItem({ id: item.id });\n        break;\n      }\n    }\n\n    let listRoleItems = document.querySelectorAll('.list-role-item');\n    listRoleItems.forEach((item) => {\n      item.setAttribute('style', 'background: #fff');\n    });\n\n    let listRoleItemId = document.querySelector(`.list-role-item-${id}`);\n    listRoleItemId.setAttribute('style', 'background: #fafafa');\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    return nextProps.permission !== this.props.permission ||\n      nextState.visibleSourceAddForm !== this.state.visibleSourceAddForm ||\n      nextState.collapsed !== this.state.collapsed ||\n      nextProps.role !== this.props.role;\n  };\n\n  permissionsSwitch = (group, permission, enabled) => {\n    this.props.modelPermissionSwitch({\n      enabled: enabled,\n      permission_id: permission,\n      role_id: this.state.selectRoleId,\n    });\n  };\n\n  render() {\n    if (this.props.current) {\n      let isLoad = (this.props.current) ? false : true;\n\n      return (\n        <Layout>\n          <Sider width={300} trigger={null} collapsible collapsed={this.state.collapsed}>\n            <div className=\"logo\">\n              USER\n            </div>\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['2']}>\n              <Menu.Item key=\"1\">\n                <Link to=\"/\"><Icon type=\"team\"/><span>Пользователи</span></Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <Link to=\"/role\"><Icon type=\"cluster\"/><span>Роли</span></Link>\n              </Menu.Item>\n              <Menu.ItemGroup key=\"roles\" title=\"\">\n                {\n                  (this.props.role)\n                    ?\n                    this.props.role.map((item) =>\n                      <Menu.Item onClick={(ev) => {\n                        this.onRoleSelect(ev, item.id);\n                      }} key={`role-${item.id}`}>\n                        <Icon type=\"property-safety\"/>\n                        <span>{item.name}</span>\n                      </Menu.Item>,\n                    )\n                    : null\n                }\n              </Menu.ItemGroup>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Helmet title={this.state.selectRoleName}/>\n            <Header>\n              <PageHeader\n                title={<span><Icon\n                  className=\"trigger\"\n                  type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                  onClick={this.toggle}\n                />Управление ролями</span>}\n                subTitle={`текущая: ${this.state.selectRoleName}`}\n                extra={[\n                  <Button key=\"add-role\" className=\"btn-user-add\" onClick={() => this.onOpen()}\n                          type=\"primary\" size=\"small\">\n                    Управление ролями\n                  </Button>,\n                  <Logout key=\"logout-1\"/>,\n                ]}\n              />\n            </Header>\n            <Content className='user-list'>\n              <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n                <Row>\n                  <Col span={24}>\n                    <Collapse defaultActiveKey={['1']}>\n                      {\n                        (this.props.permission.modules) ?\n                          this.props.permission.modules.map((item) =>\n                            <Panel header={`${item.name}: ${item.desc}`} key={item.group}>\n                              <List\n                                grid={{\n                                  gutter: 16,\n                                  xs: 1,\n                                  sm: 1,\n                                  md: 2,\n                                  lg: 3,\n                                  xl: 4,\n                                  xxl: 4,\n                                }}\n                                dataSource={item.permissions}\n                                renderItem={(item, i) => (\n                                  <List.Item>\n                                    <Link onClick={() => {\n                                      this.permissionsSwitch(item.group, item.id, item.enabled);\n                                    }}>\n                                      <Popover content={item.desc} title={item.name}>\n                                        <Card\n                                          className={\n                                            classNames('permissions-default', {\n                                              'permissions-enabled': item.enabled,\n                                            })\n                                          }\n                                          size=\"small\"\n                                        >\n                                          <Meta\n                                            avatar={\n                                              (item.enabled) ? <Icon type=\"check\"/> : <Icon\n                                                type=\"stop\"/>\n                                            }\n                                            title={item.name}\n                                          />\n                                        </Card>\n                                      </Popover>\n                                    </Link>\n                                  </List.Item>\n                                )}\n                              />\n                            </Panel>,\n                          )\n                          : null\n                      }\n                    </Collapse>\n                  </Col>\n                  <UserAddForm\n                    visible={this.state.visibleSourceAddForm}\n                    visibleId={this.state.visibleId}\n                    title='Роли'\n                    onRoleSelect={this.onRoleSelect}\n                    roleList={this.props.role}\n                    actionRole={this.props.actionRole}\n                    onClose={this.onClose}\n                    wrappedComponentRef={(form) => this.form = form}\n                  />\n                </Row>\n              </Spin>\n            </Content>\n          </Layout>\n        </Layout>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Roles;\n","import { shallowEqual } from 'react-redux';\nimport { connectAdvanced } from 'react-redux';\n\nimport creator from '../../app/creator';\nimport api from '../api';\n\nimport Users from './main';\n\nexport default connectAdvanced((dispatch) => {\n  const module = 'system';\n  let ownProps = {};\n  let result = {};\n\n  const sendTo = creator(api, module, dispatch);\n\n  const modelCurrentUser = () => sendTo('userCurrent');\n\n  const modelRoleItems = () => sendTo('roleItems');\n\n  const modelPermissionItem = (data) => sendTo('permissionItem', data);\n  const modelPermissionSwitch = (data) => sendTo('permissionSwitch', data);\n\n  const modelRoleAdd = (data) => sendTo('roleAdd', data, (json) => {\n    //modelItem(ownProps.location.query);\n    return json;\n  });\n\n  const modelRoleEdit = (data) => sendTo('roleEdit', data, (json) => {\n    //modelItem(ownProps.location.query);\n    return json;\n  });\n\n  const modelRoleDelete = (data) => sendTo('roleDelete', data, (json) => {\n    //modelItem(ownProps.location.query);\n    return json;\n  });\n\n  /**\n   * Downloading data from a remote server\n   * @private\n   */\n  const modelServer = () => {\n    modelCurrentUser();\n    modelRoleItems();\n    modelPermissionItem({ id: 0 });\n  };\n\n  return (nextState, nextOwnProps) => {\n    const isNull = (value) => value === null;\n\n    console.log('nextState', nextState);\n\n    const loading    = isNull(nextState[module].userCurrent) ? true : false;\n    const role       = isNull(nextState[module].roleItems) ? null : nextState[module].roleItems;\n    const permission = isNull(nextState[module].permissionItem) ? null : nextState[module].permissionItem;\n    const access     = isNull(nextState[module].userCurrent) ? null : nextState[module].userCurrent.access;\n    const current    = isNull(nextState[module].userCurrent) ? null : nextState[module].userCurrent.data;\n\n    const nextResult = {\n      ...nextOwnProps,\n      loading,\n      permission,\n      role,\n      access,\n      current,\n      modelServer,\n      modelRoleItems,\n      modelPermissionItem,\n      modelPermissionSwitch,\n      modelRoleDelete,\n      modelRoleEdit,\n    };\n    ownProps = nextOwnProps;\n    if (!shallowEqual(result, nextResult)) {\n      result = nextResult\n    }\n\n    return result;\n  }\n})(Users);\n\n// import { connect } from 'react-redux';\n// import { bindActionCreators } from 'redux';\n//\n// import {\n//   userEdit as actionEdit,\n//   userCurrent as actionCurrent,\n// } from '../store/actions/user';\n//\n// import { permission as actionPermission, role as actionRole } from '../store/actions/role';\n//\n// import Roles from './main';\n//\n// export default connect(\n//   (state) => {\n//     return {\n//       access: state.user.access,\n//       current: state.user.current,\n//       role: state.role.role,\n//       permission: state.role.permission,\n//     };\n//   },\n//   (dispatch) => bindActionCreators(\n//     { actionCurrent, actionEdit, actionPermission, actionRole, dispatch }, dispatch),\n// )(Roles);\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport UserStore from './state';\n\nimport Index from './component';\n\nimport './css/index.less';\n\nconst Module = (props) => {\n  const {location, params} = props;\n\n  return (\n    <Provider store={UserStore}>\n      <Index\n        location={location}\n        params={params}\n      />\n    </Provider>\n  );\n};\n\nexport default Module;\n"],"sourceRoot":""}
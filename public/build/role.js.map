{"version":3,"sources":["webpack:///./modules/role/route.js","webpack:///./modules/role/config.js","webpack:///./modules/role/store/middlewares/user.js","webpack:///./modules/role/store/middlewares/role.js","webpack:///./modules/role/store/reducers/user.js","webpack:///./modules/role/store/reducers/role.js","webpack:///./modules/role/store/state.js","webpack:///./modules/role/store/api/user.js","webpack:///./modules/role/store/actions/user.js","webpack:///./modules/role/store/api/role.js","webpack:///./modules/role/store/actions/role.js","webpack:///./modules/role/component/main/source_add_form.jsx","webpack:///./modules/role/component/main/index.jsx","webpack:///./modules/role/main.jsx"],"names":["path","getComponent","location","cb","require","model","api","permission","rolePermission","roles","roleAdd","roleEdit","roleDelete","userCurrent","userEdit","middleware","store","next","action","config","includes","type","middlewareAction","actionReducers","status","state","data","combineReducers","current","item","role","createStoreWithMiddleware","applyMiddleware","user","thunk","createStore","reducers","modelEdit","filter","Query","pointApi","result","then","json","Function","actions","promise","domain","appConfig","auth","get","query","post","modelPermission","callback","id","role_id","modelRole","ButtonGroup","Button","Group","Search","Input","UserAddFormModel","props","e","preventDefault","form","validateFieldsAndScroll","err","values","confirm","actionRole","onClose","ev","parent","target","parentElement","listRoleItemId","querySelector","inputRoleName","btnRoleEdit","btnRoleDelete","btnRoleSave","style","display","msg","message","success","onRoleSelect","error","_errorMsg","name","nextProps","nextState","visible","setState","getFieldDecorator","this","title","width","zIndex","marginBottom","span","layout","onSubmit","handleSubmit","Item","hasFeedback","placeholder","htmlType","size","marginTop","bordered","dataSource","roleList","renderItem","className","editable","onClick","onRoleEditAction","icon","onConfirm","onRoleDelete","okText","cancelText","placement","enterButton","defaultValue","onSearch","value","event","onRoleEdit","Component","visibleId","successionId","operationId","inputSourceId","stageId","Form","create","mapPropsToFields","createFormField","sourceTitle","console","log","Header","Layout","Content","Sider","Panel","Collapse","Meta","Card","Roles","collapsed","visibleSourceAddForm","i","length","selectRoleName","selectRoleId","actionPermission","document","querySelectorAll","forEach","setAttribute","group","enabled","permission_id","items","loading","actionCurrent","isLoad","trigger","collapsible","theme","mode","defaultSelectedKeys","key","to","ItemGroup","map","toggle","subTitle","extra","onOpen","tip","spinning","defaultActiveKey","modules","header","desc","grid","gutter","xs","sm","md","lg","xl","xxl","permissions","permissionsSwitch","content","classNames","avatar","wrappedComponentRef","React","connect","access","dispatch","bindActionCreators","actionEdit","EditMain","UserStore","params"],"mappings":"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","file":"role.js?hash=bb5310122508b78dbea9","sourcesContent":["'use strict';\n\nexport default {\n    path: 'role',\n    getComponent(location, cb) {\n        require.ensure([], (require) => {\n            cb(null, require('./main').default);\n        });\n    }\n};","'use strict';\n\nexport default {\n    model: 'role',\n    api: {\n        permission:   'interface-users/permission',\n        rolePermission:  'interface-users/role-permission',\n\n        roles:   'interface-users/roles',\n        roleAdd: 'interface-users/role-add',\n        roleEdit: 'interface-users/role-edit',\n        roleDelete: 'interface-users/role-delete',\n\n        userCurrent: 'interface-users/user-current',\n        userEdit: 'interface-users/user-edit',\n    },\n    middleware: [\n        'PERMISSION',\n        'ROLE',\n        'USER_CURRENT',\n        'USER_ITEM',\n    ]\n}","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport {combineReducers} from 'redux';\n\nconst MODEL = 'USER';\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n    action: actionReducers([\n        `${MODEL}_ITEM_LOADING`\n    ]),\n    current: actionReducers([\n        `${MODEL}_CURRENT_LOADED`\n    ]),\n    item: actionReducers([\n        `${MODEL}_ITEM_LOADED`\n    ])\n});\n","'use strict';\n\nimport {combineReducers} from 'redux';\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n    permission: actionReducers([\n        'PERMISSION_LOADED'\n    ]),\n    role: actionReducers([\n        'ROLE_LOADED'\n    ]),\n});\n","'use strict';\n\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n//import {createLogger} from 'redux-logger';\n\nimport user from './middlewares/user';\nimport role from './middlewares/role';\n\n//Найдет и загрузит все reducers из папки\nimport * as reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(\n    user,\n    role,\n    thunk//, createLogger({collapsed:true})\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers(reducers));\n","'use strict';\n\nimport {Query} from 'modules/app/core';\nimport appConfig from \"config\";\nimport config from \"../../config\";\n\nconst api = config.api;\n\nexport function modelCurrentUser()\n{\n    let ReactQueryObject = new Query({\n        domain: appConfig.domain.auth,\n        type: Query.get,\n        pointApi: api.userCurrent\n    });\n\n    return ReactQueryObject.result();\n}\n\nexport function modelEdit(data, filter, action)\n{\n    let ReactQueryObject = new Query({\n        pointApi: api.userEdit,\n        data: data\n    });\n\n    return ReactQueryObject.result().then((json) => {\n        if (json) {\n            if (action instanceof Function) {\n                action(filter);\n            }\n        }\n    });\n}\n","'use strict';\n\nimport {modelEdit, modelCurrentUser} from '../api/user';\n\nexport function userCurrent() {\n    return {\n        type: 'USER_CURRENT',\n        actions: ['USER_CURRENT_LOADING', 'USER_CURRENT_LOADED', 'USER_CURRENT_LOAD_FAILURE'],\n        promise: modelCurrentUser(),\n    };\n}\n\nexport function userEdit(data, filter = null, action = null) {\n    return {\n        type: 'USER_EDIT',\n        actions: ['USER_EDIT_LOADED'],\n        model: modelEdit(data, filter, action),\n    };\n}\n","'use strict';\n\nimport {Query} from 'modules/app/core';\nimport config from \"../../config\";\n\nconst api = config.api;\n\nfunction query (pointApi, data, type = Query.post) {\n    return new Query({\n        pointApi: pointApi,\n        type: type,\n        data: data\n    });\n}\n\n/**\n * Управление разрешениями\n *\n * @param action\n * @param data\n * @param callback\n * @returns {*}\n */\nexport function modelPermission(action, data, callback)\n{\n    switch (action) {\n        case 'item':\n            return query(api.permission, data, Query.get).result();\n        case 'switch':\n            return query(api.rolePermission, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.permission, {id: data.role_id}, Query.get).result();\n                }\n            });\n    }\n}\n\n/**\n * Управление ролями\n *\n * @param action\n * @param data\n * @param callback\n * @returns {*}\n */\nexport function modelRole(action, data = {}, callback)\n{\n    switch (action) {\n        case 'items':\n            return query(api.roles, data, Query.get).result();\n        case 'add':\n            return query(api.roleAdd, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.roles).result();\n                }\n            });\n        case 'edit':\n            return query(api.roleEdit, data, Query.post).result().then((json) => {\n                if (json) {\n                    return query(api.roles).result(callback);\n                }\n            });\n        case 'delete':\n            return query(api.roleDelete, data, Query.post).result(callback).then((json) => {\n                if (json) {\n                    return query(api.roles).result();\n                }\n            });\n    }\n}\n","import { modelPermission, modelRole } from '../api/role';\n\nexport function permission(action, data, callback) {\n    return {\n        type: 'PERMISSION',\n        actions: ['PERMISSION_LOADING', 'PERMISSION_LOADED', 'PERMISSION_LOAD_FAILURE'],\n        promise: modelPermission(action, data, callback),\n    };\n}\n\nexport function role(action, data, callback) {\n    return {\n       type: 'ROLE',\n       actions: ['ROLE_LOADING', 'ROLE_LOADED', 'ROLE_LOAD_FAILURE'],\n       promise: modelRole(action, data, callback),\n    };\n}\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router\";\nimport { Form, Button, Row, Input, List, Drawer, Col, Icon, message, Popconfirm } from 'antd';\nconst ButtonGroup = Button.Group;\n\nconst { Search } = Input;\n\nclass UserAddFormModel extends Component\n{\n    static defaultProps = {\n        visible: true,\n        visibleId: null,\n        successionId: null,\n        operationId: null,\n        inputSourceId: null,\n        stageId: null,\n        title: null,\n    };\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            visible: props.visible\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                delete values.confirm;\n\n                this.props.actionRole('add', values);\n            }\n        });\n    };\n\n    onClose = () => {\n        this.props.onClose();\n    };\n\n    onRoleEditAction = (ev, id) => {\n        let parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n        let listRoleItemId = parent.querySelector(`.link-role-name-${id}`);\n        let inputRoleName  = parent.querySelector(`.input-role-name-${id}`);\n        let btnRoleEdit    = parent.querySelector(`.btn-role-edit-${id}`);\n        let btnRoleDelete  = parent.querySelector(`.btn-role-delete-${id}`);\n        let btnRoleSave    = parent.querySelector(`.btn-role-save-${id}`);\n\n        listRoleItemId.style.display = \"none\";\n        inputRoleName.style.display = \"inline\";\n\n        btnRoleEdit.style.display = \"none\";\n        btnRoleDelete.style.display = \"none\";\n        btnRoleSave ? btnRoleSave.style.display = \"inline\" : null;\n    };\n\n    onRoleDelete = (id) => {\n        this.props.actionRole('delete', {\n            id: id\n        }, (json) => {\n            if (json.status === \"ok\") {\n                if (json.msg) {\n                    message.success(json.msg);\n\n                    this.props.onRoleSelect(0);\n                }\n\n                if (json.result) {\n                    return json.result;\n                } else {\n                    return true;\n                }\n            } else if (json.msg) {\n                message.error(this._errorMsg(json.msg));\n                return false;\n            }\n        });\n\n\n    };\n\n    onRoleEdit = (ev, id, name) => {\n        let parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n\n        this.props.actionRole('edit', {\n            id: id,\n            name: name\n        }, (json) => {\n            if (json.status === \"ok\") {\n                if (json.msg) {\n                    message.success(json.msg);\n                }\n\n                if (json.result) {\n                    let listRoleItemId = parent.querySelector(`.link-role-name-${id}`);\n                    let inputRoleName  = parent.querySelector(`.input-role-name-${id}`);\n                    let btnRoleEdit    = parent.querySelector(`.btn-role-edit-${id}`);\n                    let btnRoleDelete  = parent.querySelector(`.btn-role-delete-${id}`);\n                    let btnRoleSave    = parent.querySelector(`.btn-role-save-${id}`);\n\n                    listRoleItemId.style.display = \"inline\";\n                    inputRoleName.style.display = \"none\";\n\n                    btnRoleEdit.style.display = \"inline\";\n                    btnRoleDelete.style.display = \"inline\";\n                    btnRoleSave ? btnRoleSave.style.display = \"none\" : null;\n\n                    return json.result;\n                } else {\n                    return true;\n                }\n            } else if(json.msg) {\n                message.error(this._errorMsg(json.msg));\n                return false;\n            }\n        });\n    };\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        if (this.props.visible !== nextProps.visible) {\n            this.setState({\n                visible: nextProps.visible\n            });\n        }\n\n        return true;\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Drawer\n                title={this.props.title}\n                width={550}\n                onClose={this.onClose}\n                visible={this.state.visible}\n                zIndex={1050}\n            >\n                <Row style={{marginBottom:'20px'}}>\n                    <Col span={24}>\n                        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n                            <Form.Item hasFeedback>\n                                {getFieldDecorator('name', {\n                                    // rules: [\n                                    //     { required: true, message: 'Пожалуйста, ввидите код пользователя' }\n                                    // ],\n                                })(<Input placeholder=\"Название новой роли\" />)}\n                            </Form.Item>\n\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Добавить\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={24}>\n                        <List\n                            size=\"small\"\n                            style={{marginTop:'10px'}}\n                            bordered\n                            dataSource={this.props.roleList}\n                            renderItem={item =>\n                            <List.Item\n                                className={`list-role-item list-role-item-${item.id}`}\n                                actions={(item.editable) ? [\n                                <ButtonGroup>\n                                    <Button className={`btn-role-edit btn-role-edit-${item.id}`} onClick={(ev) => this.onRoleEditAction(ev, item.id)} size=\"small\" icon=\"edit\" />\n                                    <Popconfirm\n                                        title=\"Удалить роль?\"\n                                        onConfirm={() => this.onRoleDelete(item.id)}\n                                        okText=\"Да\"\n                                        cancelText=\"Нет\"\n                                        placement=\"left\"\n                                        zIndex={1050}\n                                    >\n                                        <Button className={`btn-role-delete btn-role-delete-${item.id}`} size=\"small\" icon=\"delete\" />\n                                    </Popconfirm>\n                                </ButtonGroup>\n                                ] : null}>\n                                <Link onClick={(ev) => {\n                                    this.props.onRoleSelect(ev, item.id)\n                                }} className={`link-role-name link-role-name-${item.id}`} style={{width:'100%'}}>{item.name}</Link>\n\n                                <Search\n                                    className={`input-role-name input-role-name-${item.id}`}\n                                    placeholder=\"Название новой роли\"\n                                    enterButton={<Icon type=\"save\" />}\n                                    size=\"small\"\n                                    defaultValue={item.name}\n                                    onSearch={(value, event) => this.onRoleEdit(event, item.id, value)}\n                                />\n                            </List.Item>}\n                        />\n                    </Col>\n                </Row>\n            </Drawer>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_add_form',\n    mapPropsToFields(props) {\n        return {\n            title: Form.createFormField({\n                ...props.sourceTitle,\n                value: props.sourceTitle,\n            }),\n        };\n    },\n})(UserAddFormModel);\n","'use strict';\n\nconsole.log('role index');\n\nimport React from 'react';\nimport Helmet from \"react-helmet\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport {Logout} from 'modules/app/core';\n\nimport {\n    userEdit as actionEdit,\n    userCurrent as actionCurrent,\n} from '../../store/actions/user';\n\nimport {permission as actionPermission, role as actionRole } from '../../store/actions/role';\n\nimport {Collapse, Card, List, Menu, PageHeader, Layout, Spin, Icon, Row, Col, Popover, Button} from 'antd';\nconst { Header, Content, Sider } = Layout;\nconst Panel = Collapse.Panel;\nconst { Meta } = Card;\n\nimport UserAddForm from \"./source_add_form\";\n\nclass Roles extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            selectRoleName: 'Гость',\n            selectRoleId: 0,\n\n            collapsed: true,\n            visibleSourceAddForm: false,\n            visibleId: null,\n            items: props.items,\n            loading: true,\n            operationId: '',\n        };\n\n        this.props.actionCurrent();\n        this.props.actionRole('items');\n\n        this.props.actionPermission('item', {id:0});\n    }\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visibleSourceAddForm: false,\n        });\n    };\n\n    onOpen = () => {\n        this.setState({\n            visibleSourceAddForm: !this.state.visibleSourceAddForm,\n            visibleId: 1\n        });\n    };\n\n    onRoleSelect = (ev, id) => {\n        for (let i=0; i < this.props.role.length; i++) {\n            let item = this.props.role[i];\n\n            if (item.id === id) {\n                this.setState({\n                    selectRoleName: item.name,\n                    selectRoleId: item.id,\n                });\n\n                this.props.actionPermission('item', {id:item.id});\n\n                break;\n            }\n        }\n\n        let listRoleItems = document.querySelectorAll(\".list-role-item\");\n        listRoleItems.forEach((item) => {\n            item.setAttribute(\"style\", \"background: #fff\");\n        });\n\n        let listRoleItemId = document.querySelector(`.list-role-item-${id}`);\n        listRoleItemId.setAttribute(\"style\", \"background: #fafafa\");\n    };\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        return nextProps.permission !== this.props.permission ||\n            nextState.visibleSourceAddForm !== this.state.visibleSourceAddForm ||\n            nextState.collapsed !== this.state.collapsed ||\n            nextProps.role !== this.props.role;\n    };\n\n    permissionsSwitch = (group, permission, enabled) => {\n        this.props.actionPermission('switch', {\n            enabled: enabled,\n            permission_id: permission,\n            role_id: this.state.selectRoleId\n        });\n    };\n\n    render()\n    {\n        if (this.props.current) {\n            let isLoad = (this.props.current) ? false : true;\n\n            return (\n                <Layout>\n                    <Sider width={300} trigger={null} collapsible collapsed={this.state.collapsed}>\n                        <div className=\"logo\">\n                            USER\n                        </div>\n                        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['2']}>\n                            <Menu.Item key=\"1\">\n                                <Link  to=\"/\"><Icon type=\"team\" /><span>Пользователи</span></Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"2\">\n                                <Link  to=\"/role\"><Icon type=\"cluster\" /><span>Роли</span></Link>\n                            </Menu.Item>\n                            <Menu.ItemGroup key=\"roles\" title=\"\">\n                                {\n                                    (this.props.role)\n                                    ?\n                                        this.props.role.map((item) =>\n                                            <Menu.Item onClick={(ev) => {\n                                                this.onRoleSelect(ev, item.id)\n                                            }} key={`role-${item.id}`}>\n                                                <Icon type=\"property-safety\" />\n                                                <span>{item.name}</span>\n                                            </Menu.Item>\n                                        )\n                                    :null\n                                }\n                            </Menu.ItemGroup>\n                        </Menu>\n                    </Sider>\n                    <Layout>\n                        <Helmet title={this.state.selectRoleName} />\n                        <Header>\n                            <PageHeader\n                                title={<span><Icon\n                                    className=\"trigger\"\n                                    type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                                    onClick={this.toggle}\n                                />Управление ролями</span>}\n                                subTitle={`текущая: ${this.state.selectRoleName}`}\n                                extra={[\n                                    <Button key=\"add-role\" className=\"btn-user-add\" onClick={() => this.onOpen()} type=\"primary\" size=\"small\">\n                                        Управление ролями\n                                    </Button>,\n                                    <Logout key=\"logout-1\" />\n                                ]}\n                            />\n                        </Header>\n                        <Content className='user-list'>\n                            <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n                                <Row>\n                                    <Col span={24}>\n                                        <Collapse defaultActiveKey={['1']}>\n                                        {\n                                            (this.props.permission.modules) ?\n                                                this.props.permission.modules.map((item) =>\n                                                    <Panel header={`${item.name}: ${item.desc}`} key={item.group}>\n                                                        <List\n                                                            grid={{\n                                                                gutter: 16,\n                                                                xs: 1,\n                                                                sm: 1,\n                                                                md: 2,\n                                                                lg: 3,\n                                                                xl: 4,\n                                                                xxl: 4,\n                                                            }}\n                                                            dataSource={item.permissions}\n                                                            renderItem={(item, i) => (\n                                                                <List.Item>\n                                                                    <Link  onClick={() => { this.permissionsSwitch(item.group, item.id, item.enabled) }}>\n                                                                        <Popover content={item.desc} title={item.name}>\n                                                                        <Card\n                                                                            className={\n                                                                                classNames('permissions-default', {\n                                                                                    'permissions-enabled': item.enabled,\n                                                                                })\n                                                                            }\n                                                                            size=\"small\"\n                                                                        >\n                                                                            <Meta\n                                                                                avatar={\n                                                                                    (item.enabled) ? <Icon type=\"check\" /> : <Icon type=\"stop\" />\n                                                                                }\n                                                                                title={item.name}\n                                                                                //description=\"Описание\"\n                                                                            />\n\n                                                                        </Card>\n                                                                        </Popover>\n                                                                    </Link>\n                                                                </List.Item>\n                                                            )}\n                                                        />\n                                                    </Panel>\n                                                )\n                                            : null\n                                        }\n                                        </Collapse>\n                                    </Col>\n\n                                    <UserAddForm\n                                        visible={this.state.visibleSourceAddForm}\n                                        visibleId={this.state.visibleId}\n                                        title='Роли'\n                                        onRoleSelect={this.onRoleSelect}\n                                        roleList={this.props.role}\n                                        actionRole={this.props.actionRole}\n\n                                        onClose={this.onClose} wrappedComponentRef={(form) => this.form = form}\n                                    />\n                                </Row>\n                            </Spin>\n                        </Content>\n                    </Layout>\n                </Layout>\n            );\n        } else {\n            return null\n        }\n    }\n}\n\nexport default connect(\n    (state) => {\n        return {\n            access: state.user.access,\n            current: state.user.current,\n            role: state.role.role,\n            permission: state.role.permission\n        };\n    },\n    (dispatch) => bindActionCreators({actionCurrent, actionEdit, actionPermission, actionRole, dispatch}, dispatch)\n)(Roles);\n","import React, {Component} from 'react';\nimport {Provider} from 'react-redux';\n\nimport UserStore from './store/state';\n\nimport Index from './component/main/index';\n\nimport './less/index.less';\n\nclass EditMain extends Component {\n    render() {\n        return (\n            <Provider store={UserStore}>\n                <Index\n                    header={this.props.header}\n                    location={this.props.location}\n                    params={this.props.params}\n                />\n            </Provider>\n        );\n    }\n}\n\nexport default EditMain;"],"sourceRoot":""}
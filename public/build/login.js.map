{"version":3,"sources":["webpack:///./modules/login/index.js","webpack:///./modules/login/store/middlewares/index.js","webpack:///./modules/login/store/reducers/index.js","webpack:///./modules/login/store/state.js","webpack:///./modules/login/config.js","webpack:///./modules/login/store/api/index.js","webpack:///./modules/login/store/actions/index.js","webpack:///./modules/login/component/form/main.jsx","webpack:///./modules/login/component/form/index.js","webpack:///./modules/login/component/main.jsx","webpack:///./modules/login/component/index.jsx","webpack:///./modules/login/main.jsx"],"names":["path","getComponent","nextState","component","then","mad","noop","middleware","store","next","action","type","startAction","actions","dispatch","promise","onload","result","JSON","parse","response","status","config","message","error","page","home","onerror","startCurrentUserAction","successCurrentUserAction","data","actionReducers","state","includes","combineReducers","current","forgot","createStoreWithMiddleware","applyMiddleware","auth","thunk","createStore","authReducer","apiAuthLogin","url","appConfig","domain","server","setPoint","formData","FormData","append","login","password","xhr","XMLHttpRequest","open","withCredentials","send","authLogin","query","FormLogin","props","form","getFieldDecorator","validateFieldsAndScroll","validateFields","className","wrapperCol","xs","span","sm","md","offset","lg","onSubmit","e","preventDefault","err","values","Item","rules","required","whitespace","placeholder","validator","rule","value","callback","force","Password","htmlType","Form","create","name","Content","Layout","helmetContext","Login","context","title","propTypes","PropTypes","func","isRequired","connect","bindActionCreators","LoginInbox","localStore"],"mappings":"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","file":"login.js?hash=a8dce33d0e3d1bae7d0c","sourcesContent":["import noop from 'lodash/noop';\n\nexport default {\n  path: '/login',\n  getComponent(nextState, component) {\n    import('./main').then((mad) => component(null, mad.default)).catch(() => noop);\n  },\n};\n","import config from '../../../../config';\n\nconst middleware = (store) => (next) => (action) => {\n  switch (action.type) {\n    case 'AUTH_LOGIN': {\n      const [startAction] = action.actions;\n\n      store.dispatch({\n        type: startAction,\n      });\n\n      action.promise.onload = function onload() {\n        const result = JSON.parse(action.promise.response);\n\n        switch (action.promise.status) {\n          case 403:\n            config.message.error(config.error[action.promise.status]);\n            break;\n          case 401:\n            config.message.error(config.error[action.promise.status]);\n            break;\n          case 200:\n            if (result.status !== 'error') {\n              config.page.home();\n            }\n            break;\n          default:\n            return null;\n        }\n\n        return null;\n      };\n\n      action.promise.onerror = function onerror() {\n        config.message.error('Error');\n      };\n      break;\n    }\n    case 'AUTH_CURRENT_USER': {\n      const {\n        actions: {\n          startCurrentUserAction,\n          successCurrentUserAction,\n        },\n      } = action;\n\n      store.dispatch({\n        type: startCurrentUserAction,\n      });\n\n      action.promise.onload = function onload() {\n        const data = JSON.parse(action.promise.response);\n\n        switch (action.promise.status) {\n          case 403:\n            config.message.error(config.error[action.promise.status]);\n            break;\n          case 401:\n            config.message.error(config.error[action.promise.status]);\n            break;\n          case 200:\n            if (data.status !== 'error') {\n              store.dispatch({\n                type: successCurrentUserAction,\n                data: data.result,\n              });\n            }\n            break;\n          default:\n            return null;\n        }\n\n        return null;\n      };\n      break;\n    }\n    default:\n      return next(action);\n  }\n\n  return null;\n};\n\nexport default middleware;\n","import { combineReducers } from 'redux';\nimport includes from 'lodash/includes';\n\nconst actionReducers = (status) => (state = [], action) => {\n  if (includes(status, action.type)) {\n    return action.data;\n  }\n\n  return state;\n};\n\nexport default combineReducers({\n  current: actionReducers([\n    'AUTH_CURRENT_USER_LOADED',\n  ]),\n  forgot: actionReducers([\n    'AUTH_AUTH_FORGOT_PASSWORD_LOADED',\n  ]),\n});\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n// import createLogger from 'redux-logger';\n\nimport auth from './middlewares';\n\n// Найдет и загрузит все reducers из папки\nimport authReducer from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(\n  auth,\n  thunk,\n  // createLogger()\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers({\n  auth: authReducer,\n}));\n","export default {\n  model: 'auth',\n  api: {\n    auth: 'auth/login',\n  },\n};\n","import appConfig from '../../../../config';\nimport config from '../../config';\n\nexport default function apiAuthLogin(data) {\n  const url = appConfig.domain.auth + appConfig.server.setPoint + config.api.auth;\n\n  const formData = new FormData();\n\n  formData.append('login', data.login);\n  formData.append('password', data.password);\n\n  const xhr = new XMLHttpRequest();\n\n  xhr.open('POST', url, true);\n  xhr.withCredentials = true;\n\n  xhr.send(formData);\n\n  return xhr;\n}\n","import apiAuthLogin from '../api';\n\nexport default function authLogin(query) {\n  return {\n    type: 'AUTH_LOGIN',\n    actions: ['AUTH_LOGIN_LOADING', 'AUTH_LOGIN_LOADED', 'AUTH_LOGIN_LOAD_FAILURE'],\n    promise: apiAuthLogin(query),\n  };\n}\n","import React from 'react';\nimport { Button, Form, Input } from 'antd';\n\nconst FormLogin = (props) => {\n  const {\n    authLogin,\n    form: {\n      getFieldDecorator,\n      validateFieldsAndScroll,\n      validateFields,\n    },\n  } = props;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        authLogin(values);\n      }\n    });\n  };\n\n  const validateToNextPassword = (rule, value, callback) => {\n    if (value) {\n      validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  const formItemLayout = {\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 24 },\n      md: { span: 14, offset: 5 },\n      lg: { span: 10, offset: 7 },\n    },\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 24,\n        offset: 0,\n      },\n    },\n  };\n\n  return (\n    <Form\n      className=\"form-login\"\n      wrapperCol={formItemLayout.wrapperCol}\n      onSubmit={handleSubmit}\n    >\n      <Form.Item\n        className=\"item-input-login\"\n      >\n        {getFieldDecorator('login', {\n          rules: [{ required: true, message: 'Впишите логин', whitespace: true }],\n        })(<Input placeholder=\"Логин\" />)}\n      </Form.Item>\n      <Form.Item\n        className=\"item-input-password\"\n      >\n        {getFieldDecorator('password', {\n          rules: [\n            {\n              required: true,\n              message: 'Впишите пароль',\n            },\n            {\n              validator: validateToNextPassword,\n            },\n          ],\n        })(<Input.Password placeholder=\"Пароль\" />)}\n      </Form.Item>\n      <Form.Item\n        wrapperCol={tailFormItemLayout.wrapperCol}\n      >\n        <Button type=\"primary\" htmlType=\"submit\">\n          Войти\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default FormLogin;\n","import Form from 'antd/lib/form';\n\nimport FormLogin from './main';\n\nexport default Form.create({ name: 'login' })(FormLogin);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport Layout from 'antd/lib/layout';\nimport Row from 'antd/lib/row';\nimport Col from 'antd/lib/col';\n\nimport LoginForm from './form';\n\nconst { Content } = Layout;\n\nconst helmetContext = {};\n\nconst Login = (props) => {\n  const {\n    authLogin,\n  } = props;\n\n  return (\n    <HelmetProvider context={helmetContext}>\n      <Layout className=\"auth\">\n        <Helmet title=\"Авторизация\" />\n        <Content>\n          <Row className=\"form-box animated fadeInDown\">\n            <Col className=\"box-welcome\" span={10} offset={7}>\n              <h1 className=\"logo-name\">USER</h1>\n              <h3>Добро пожаловать</h3>\n            </Col>\n            <Col span={10} offset={7}>\n              <LoginForm\n                authLogin={authLogin}\n              />\n            </Col>\n          </Row>\n        </Content>\n      </Layout>\n    </HelmetProvider>\n  );\n};\n\nLogin.propTypes = {\n  // form: PropTypes.objectOf(PropTypes.oneOfType([\n  //   PropTypes.func,\n  // ])).isRequired,\n  authLogin: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport authLogin from '../store/actions';\n\nimport Login from './main';\n\nexport default connect(\n  (state) => (\n    {\n      login: state.auth.login,\n    }\n  ),\n  (dispatch) => bindActionCreators({ authLogin, dispatch }, dispatch),\n)(Login);\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport localStore from './store/state';\n\nimport Login from './component';\n\nimport './css/index.less';\n\nconst LoginInbox = () => (\n  <Provider store={localStore}>\n    <Login />\n  </Provider>\n);\n\nexport default LoginInbox;\n"],"sourceRoot":""}
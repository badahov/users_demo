{"version":3,"sources":["webpack:///./modules/users/config.js","webpack:///./modules/app/component/core/query.js","webpack:///./modules/app/component/core/middleware.js","webpack:///./modules/login/component/logout.jsx","webpack:///./modules/edit/config.js","webpack:///./modules/edit/store/middlewares/user.js","webpack:///./modules/edit/store/reducers/user.js","webpack:///./modules/edit/store/state.js","webpack:///./modules/edit/store/api/user.js","webpack:///./modules/edit/store/actions/user.js","webpack:///./modules/edit/component/page/data/main.jsx","webpack:///./modules/edit/component/page/password/main.jsx","webpack:///./modules/edit/component/page/roles/main.jsx","webpack:///./modules/edit/component/main/header_page.jsx","webpack:///./modules/edit/component/main/menu_left.jsx","webpack:///./modules/edit/component/main/index.jsx","webpack:///./modules/edit/main.jsx"],"names":["__webpack_exports__","model","api","items","delete","add","current","middleware","__webpack_require__","d","Query","config__WEBPACK_IMPORTED_MODULE_0__","fetch","require","options","_this","this","_classCallCheck","_defineProperty","config","domain","_fetch","callback","arguments","length","undefined","send","then","json","Function","status","msg","_success","result","_error","_errorMsg","url","type","get","data","_getParams","server","setPoint","pointApi","prefix","method","headers","Accept","Content-Type","credentials","post","body","JSON","stringify","_getUrl","fetchParam","_getFetchParam","response","error","statusText","_requestXdomainToken","message","success","param","str","map","item","push","join","Object","keys","key","concat","encodeURIComponent","setUrl","auth","xhr","XMLHttpRequest","XDomainRequest","open","withCredentials","self","onload","_loginPage","parse","responseText","arr","split","domainAuth","formData","FormData","append","xdomainToken","location","reload","history","middlewareAction","store","action","_action$actions","_slicedToArray","actions","start","failure","promise","constructor","name","dispatch","Logout","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","antd__WEBPACK_IMPORTED_MODULE_2__","antd__WEBPACK_IMPORTED_MODULE_3__","antd__WEBPACK_IMPORTED_MODULE_4__","confirm","Modal","title","okText","okType","cancelText","onOk","urlAuth","urlMain","xhr2","page","login","onCancel","console","log","Component","a","createElement","size","onClick","handleLogout","edit","next","includes","MODEL","toUpperCase","actionReducers","state","combineReducers","createStoreWithMiddleware","applyMiddleware","user","thunk","createStore","reducers","modelEdit","filter","userItem","query","userCurrent","appConfig","userEdit","formItemLayout","labelCol","xs","span","sm","wrapperCol","UserDataFormModel","e","preventDefault","props","form","validateFieldsAndScroll","err","values","operator_id","Number","user_id","actionEdit","value","target","setState","confirmDirty","getFieldDecorator","isLoad","react_default","spin","tip","spinning","row","col","es_form","_extends","onSubmit","handleSubmit","gutter","style","marginBottom","Item","label","hasFeedback","rules","required","input_number","width","min","placeholder","input","valuePropName","es_switch","position","left","bottom","borderTop","padding","background","textAlign","es_button","htmlType","Form","create","mapPropsToFields","operator_code","createFormField","_objectSpread","operator_name","operator_login","is_admin","is_reprint_admin","UserPasswordFormModel","main_classCallCheck","main_getPrototypeOf","call","main_defineProperty","main_assertThisInitialized","rule","getFieldValue","validateFields","force","main_extends","validator","validateToNextPassword","Password","compareToFirstPassword","onBlur","handleConfirmBlur","Option","Select","UserRolesFormModel","roles_main_classCallCheck","roles_main_getPrototypeOf","roles_main_defineProperty","roles_main_assertThisInitialized","roles","id","selected","nextProps","nextState","option","roles_main_extends","es_select","mode","onChange","handleSelectedChange","String","main_objectSpread","Header","Layout","HeaderPage","React","page_header","icon","className","collapsed","toggle","subTitle","extra","menu","handleClick","react_router_es","to","Sider","MenuLeft","selectedKey","trigger","collapsible","theme","defaultSelectedKeys","Content","Edit","component_main_classCallCheck","component_main_getPrototypeOf","component_main_defineProperty","component_main_assertThisInitialized","loading","actionCurrent","actionUser","params","_this2","layout","menu_left_MenuLeft","Helmet_default","header_page_HeaderPage","logout","main","wrappedComponentRef","password_main","roles_main","connect","access","bindActionCreators","EditMain","es","UserStore","component_main","header"],"mappings":"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","file":"8.js?hash=77c00cc36c17af57cbce","sourcesContent":["'use strict';\n\nexport default {\n    model: 'user',\n    api: {\n        items:   'interface-users/items',\n        delete:  'interface-users/user-delete',\n        add:     'interface-users/user-add',\n        current: 'interface-users/user-current'\n    },\n    middleware: [\n        'USER_ADD',\n        'USER_DELETE',\n        'USER_ITEMS',\n        'USER_CURRENT',\n        'USER_HEADER'\n    ]\n}\n","'use strict';\n\nimport config from 'config';\n\nconst fetch = require('isomorphic-fetch');\n\nexport default class Query\n{\n    static post = 'POST';\n    static get  = 'GET';\n\n    type     = 'POST';\n    data     = null;\n    pointApi = null;\n    domain   = config.domain.api;\n\n    constructor(options)\n    {\n        if (options.type !== undefined) {\n            this.type = options.type;\n        }\n\n        if (options.data !== undefined) {\n            this.data = options.data;\n        }\n\n        if (options.pointApi !== undefined) {\n            this.pointApi = options.pointApi;\n        }\n\n        if (options.domain !== undefined) {\n            this.domain = options.domain;\n        }\n    }\n\n    send = () => {\n        return this._fetch();\n    };\n\n    result = (callback = null) => {\n        return this.send().then((json) => {\n            if (callback instanceof Function) {\n                return callback(json);\n            } else {\n                if (json.status === \"ok\") {\n                    if (json.msg) {\n                        this._success(json.msg);\n                    }\n\n                    if (json.result) {\n                        return json.result;\n                    } else {\n                        return true;\n                    }\n                } else if(json.msg) {\n                    this._error(this._errorMsg(json.msg));\n\n                    return false;\n                }\n            }\n        });\n    };\n\n    _getUrl = () => {\n        let url    = '';\n\n        if (this.type === Query.get) {\n            let get = null;\n\n            if (this.data) {\n                get = this._getParams(this.data);\n            }\n\n            url = get ? this.domain + config.server.setPoint + this.pointApi + config.server.prefix + get : this.domain + config.server.setPoint + this.pointApi;\n        } else {\n            url = this.domain + config.server.setPoint + this.pointApi;\n        }\n\n        return url;\n    };\n\n    _getFetchParam = () => {\n        let fetchParam = {};\n\n        if (this.type === Query.get) {\n            fetchParam = {\n                method: Query.get,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include'\n            }\n        } else {\n            fetchParam = {\n                method: Query.post,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(this.data),\n                credentials: \"include\"\n            }\n        }\n\n        return fetchParam;\n    };\n\n    _fetch = () => {\n        const url      = this._getUrl();\n        let fetchParam = this._getFetchParam();\n\n        return fetch(url, fetchParam).then((response) => {\n            if (response.status === 200) {\n                return response.json();\n            } else if (response.status === 500) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else if (response.status === 404) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else if (response.status === 417) {\n                const res = response.json();\n                res.then((data) => {\n                    if (!data.status) {\n                        this._error(this._errorMsg(data.msg));\n                    } else {\n                        this._error(config.error[response.status]);\n                    }\n                });\n                throw response.statusText;\n            } else if (response.status === 423) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else if (response.status === 401) {\n                this._requestXdomainToken(url);\n            } else if (response.status === 403) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else {\n                throw response.statusText;\n            }\n        });\n    };\n\n    _error = message => {\n        config.message.error(message);\n    };\n\n    _success = message => {\n        config.message.success(message);\n    };\n\n    _errorMsg = param => {\n        if (typeof(param) === 'string') {\n            return param;\n        } else {\n            let str = ['<ul class=\"list-unstyled\">'];\n            param.map((item) =>\n                str.push('<li>' + item + '</li>')\n            );\n            str.push('</ul>');\n\n            return str.join(' ');\n        }\n    };\n\n    _getParams = data => {\n        return Object.keys(data).map(key => `${key}=${encodeURIComponent(data[key])}`).join('&');\n    };\n\n    _requestXdomainToken(setUrl) {\n        //We request a token on the authorization server\n        const url = config.domain.auth + config.server.setPoint + '/auth/get-xdomain-token';\n        let XHR = (\"onload\" in new XMLHttpRequest()) ? XMLHttpRequest : XDomainRequest;\n        let xhr = new XHR();\n        xhr.open('POST', url, true);\n        xhr.withCredentials = true;\n        xhr.send();\n\n        let self = this;\n        xhr.onload = function () {\n            switch (this.status) {\n                case 401:// User is not authorized on the authorization server\n                    self._loginPage();\n                    break;\n                case 200:\n                    let result = JSON.parse(this.responseText);\n                    let arr = setUrl.split(\"/\");\n                    let domain = arr[0] + \"//\" + arr[2];\n                    let domainAuth = domain + config.server.setPoint + 'auth/login';\n\n                    //Отправляем токен в точку авторизации целевого сервера\n                    let formData = new FormData();\n                    formData.append('xdomainToken', result.xdomainToken);\n                    let xhr = new XMLHttpRequest();\n                    xhr.open('POST', domainAuth, true);\n                    xhr.withCredentials = true;\n                    xhr.send(formData);\n\n                    xhr.onload = function () {\n                        switch (this.status) {\n                            case 401:// User is not authorized\n                                self._loginPage();\n                                break;\n                            case 200:\n                                location.reload();\n                                break;\n                        }\n                    };\n                    break;\n            }\n        };\n    }\n\n    _loginPage() {\n        config.history.push('/login');\n    }\n}\n","'use strict';\n\nconst middlewareAction = (store, action) => {\n    const [start, success, failure] = action.actions;\n\n    if (action.promise.constructor.name === 'Promise') {\n        //LOADING\n        store.dispatch({\n            type: start,\n            data: true\n        });\n\n        action.promise.then((data) => {\n            //LOADED\n            store.dispatch({\n                type: success,\n                data,\n            });\n\n            //LOADING\n            store.dispatch({\n                type: start,\n                data: false\n            });\n        }, (error) => {\n            //FAILURE\n            store.dispatch({\n                type: failure,\n                error,\n            });\n        });\n    } else {\n        store.dispatch({\n            type: start,\n            data: true\n        });\n\n        store.dispatch({\n            type: success,\n            data: action.promise\n        });\n\n        //LOADING\n        store.dispatch({\n            type: start,\n            data: false\n        });\n    }\n};\n\nexport default middlewareAction;","'use strict';\n\nimport config from 'config';\n\nimport React, {Component} from 'react';\n\nimport { Modal, Icon, Button } from 'antd';\nconst confirm = Modal.confirm;\n\nexport default class Logout extends Component\n{\n    handleLogout = () => {\n        confirm({\n            title: 'Вы хотите выйти?',\n            okText: 'Да',\n            okType: 'danger',\n            cancelText: 'Нет',\n            onOk() {\n                const urlAuth = config.domain.auth + config.server.setPoint + '/auth/log-out';\n\n                let XHR = (\"onload\" in new XMLHttpRequest()) ? XMLHttpRequest : XDomainRequest;\n                let xhr = new XHR();\n                xhr.open('POST', urlAuth, true);\n                xhr.withCredentials = true;\n                xhr.send();\n                xhr.onload = function() {\n                    const urlMain = config.domain.api + config.server.setPoint + '/auth/log-out';\n                    let XHR2 = (\"onload\" in new XMLHttpRequest()) ? XMLHttpRequest : XDomainRequest;\n                    let xhr2 = new XHR2();\n                    xhr2.open('POST', urlMain, true);\n                    xhr2.withCredentials = true;\n                    xhr2.send();\n                    xhr2.onload = function() {\n                        config.page.login();\n                    }\n                };\n            },\n            onCancel() {\n                console.log('Cancel handle logout');\n            },\n        });\n    };\n\n    render () {\n        return (\n            <Button type=\"danger\" size=\"small\" onClick={this.handleLogout}><Icon type=\"logout\" /> Выход</Button>\n        );\n    }\n}\n","'use strict';\n\nexport default {\n    model: 'edit',\n    api: {\n        item:    'interface-users/user',\n        edit:    'interface-users/user-edit',\n        current: 'interface-users/user-current'\n    },\n    middleware: [\n        'USER_ITEM',\n        'USER_CURRENT',\n    ]\n}\n","'use strict';\n\nimport middlewareAction from 'modules/app/component/core/middleware';\n\nimport config from '../../config';\n\nconst middleware = store => next => action => {\n    if (config.middleware.includes(action.type)) {\n        middlewareAction(store, action);\n    } else {\n        return next(action);\n    }\n};\n\nexport default middleware;\n","'use strict';\n\nimport {combineReducers} from 'redux';\nimport config from \"../../../users/config\";\n\nconst MODEL = config.model.toUpperCase();\n\nconst actionReducers = status => (state = [], action) => {\n    if (status.includes(action.type)) {\n        return action.data;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n    action: actionReducers([\n        `${MODEL}_ITEM_LOADING`,\n    ]),\n    current: actionReducers([\n        `${MODEL}_CURRENT_LOADED`,\n    ]),\n    item: actionReducers([\n        `${MODEL}_ITEM_LOADED`,\n    ])\n});\n","'use strict';\n\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n//import {createLogger} from 'redux-logger';\n\nimport user from './middlewares/user';\n\n//Найдет и загрузит все reducers из папки\nimport * as reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(\n    user,\n    thunk//, createLogger({collapsed:true})\n)(createStore);\n\nexport default createStoreWithMiddleware(combineReducers(reducers));\n","'use strict';\n\nimport Query from 'modules/app/component/core/query';\nimport appConfig from \"config\";\nimport config from \"../../config\";\n\nconst api = config.api;\n\nexport function modelUser(data)\n{\n    let ReactQueryObject = new Query({\n        pointApi: api.item,\n        type: Query.get,\n        data: data,\n    });\n\n    return ReactQueryObject.result();\n}\n\nexport function modelCurrentUser()\n{\n    let ReactQueryObject = new Query({\n        domain: appConfig.domain.auth,\n        type: Query.get,\n        pointApi: api.current,\n    });\n\n    return ReactQueryObject.result();\n}\n\nexport function modelEdit(data, filter, action)\n{\n    let ReactQueryObject = new Query({\n        pointApi: api.edit,\n        data: data\n    });\n\n    return ReactQueryObject.result().then((json) => {\n        if (json) {\n            if (action instanceof Function) {\n                action(filter);\n            }\n        }\n    });\n}\n","'use strict';\n\nimport {modelUser, modelEdit, modelCurrentUser} from '../api/user';\nimport config from \"../../../users/config\";\n\nconst MODEL = config.model.toUpperCase();\n\nexport function userItem(query) {\n    return {\n        type: `${MODEL}_ITEM`,\n        actions: [`${MODEL}_ITEM_LOADING`, `${MODEL}_ITEM_LOADED`, `${MODEL}_ITEM_LOAD_FAILURE`],\n        promise: modelUser(query),\n    };\n}\n\nexport function userCurrent() {\n    return {\n        type: `${MODEL}_CURRENT`,\n        actions: [`${MODEL}_CURRENT_LOADING`, `${MODEL}_CURRENT_LOADED`, `${MODEL}_CURRENT_LOAD_FAILURE`],\n        promise: modelCurrentUser(),\n    };\n}\n\nexport function userEdit(data, filter = null, action = null) {\n    return {\n        type: `${MODEL}_EDIT`,\n        actions: [`${MODEL}_EDIT_LOADED`],\n        model: modelEdit(data, filter, action),\n    };\n}\n","'use strict';\n\nimport React, { Component } from \"react\";\n\nimport { Form, Button, Row, Input, InputNumber, Switch, Col, Spin } from 'antd';\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n    },\n};\n\nclass UserDataFormModel extends Component\n{\n    static defaultProps = {\n        item: null,\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                values.operator_id = Number(this.props.user_id);\n\n                this.props.actionEdit(values);\n            }\n        });\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        let isLoad = (this.props.item) ? false : true;\n\n        return (\n            <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n                <Row>\n                    <Col span={24}>\n                        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                            <Row gutter={16} style={{marginBottom:'50px'}}>\n                                <Form.Item label=\"Код\" hasFeedback>\n                                    {getFieldDecorator('operator_code', {\n                                        rules: [\n                                            { required: true, message: 'Пожалуйста, ввидите код пользователя' }\n                                        ],\n                                    })(<InputNumber style={{ width: '65%' }} min={0} placeholder=\"Код пользователя\" />)}\n                                </Form.Item>\n\n                                <Form.Item label=\"Имя\" hasFeedback>\n                                    {getFieldDecorator('operator_name', {\n                                        rules: [\n                                            { required: true, message: 'Пожалуйста, ввидите имя пользователя' }\n                                        ],\n                                    })(<Input placeholder=\"Имя пользователя\" />)}\n                                </Form.Item>\n\n                                <Form.Item label=\"Логин\" hasFeedback>\n                                    {getFieldDecorator('operator_login', {\n                                        rules: [\n                                            { required: true, message: 'Пожалуйста, ввидите логин пользователя' }\n                                        ],\n                                    })(<Input placeholder=\"Логин пользователя\" />)}\n                                </Form.Item>\n\n                                <Form.Item label=\"Администратор\">\n                                    {getFieldDecorator('is_admin', { valuePropName: 'checked' })(<Switch />)}\n                                </Form.Item>\n\n                                <Form.Item label=\"Перепечать\">\n                                    {getFieldDecorator('is_reprint_admin', { valuePropName: 'checked' })(<Switch />)}\n                                </Form.Item>\n                            </Row>\n\n                            <Row\n                                style={{\n                                    position: 'absolute',\n                                    left: 0,\n                                    bottom: 0,\n                                    width: '100%',\n                                    borderTop: '1px solid #e9e9e9',\n                                    padding: '10px 16px 0 10px',\n                                    background: '#fff',\n                                    textAlign: 'left',\n                                }}\n                            >\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Изменить\n                                </Button>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n            </Spin>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_data_form',\n    mapPropsToFields(props) {\n        return {\n            operator_code: Form.createFormField({\n                ...props.item.operator_code,\n                value: props.item.operator_code,\n            }),\n            operator_name: Form.createFormField({\n                ...props.item.operator_name,\n                value: props.item.operator_name,\n            }),\n            operator_login: Form.createFormField({\n                ...props.item.operator_login,\n                value: props.item.operator_login,\n            }),\n            is_admin: Form.createFormField({\n                ...props.item.is_admin,\n                value: props.item.is_admin,\n            }),\n            is_reprint_admin: Form.createFormField({\n                ...props.item.is_reprint_admin,\n                value: props.item.is_reprint_admin,\n            }),\n        };\n    },\n})(UserDataFormModel);\n","'use strict';\n\nimport React, { Component } from \"react\";\n\nimport { Form, Button, Row, Input, Col } from 'antd';\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n    },\n};\n\nclass UserPasswordFormModel extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            confirmDirty: false\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                delete values.confirm;\n\n                values.operator_id = Number(this.props.user_id);\n\n                this.props.actionEdit(values);\n            }\n        });\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Пароли не совпадают!');\n        } else {\n            callback();\n        }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Row>\n                <Col span={24}>\n                    <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                        <Row gutter={16} style={{marginBottom:'50px'}}>\n                            <Form.Item label=\"Пароль\" hasFeedback>\n                                {getFieldDecorator('password', {\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: 'Пожалуйста, введите пароль!',\n                                        },\n                                        {\n                                            validator: this.validateToNextPassword,\n                                        },\n                                    ],\n                                })(<Input.Password />)}\n                            </Form.Item>\n                            <Form.Item label=\"Повторить пароль\" hasFeedback>\n                                {getFieldDecorator('confirm', {\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: 'Пожалуйста, повторите пароль!',\n                                        },\n                                        {\n                                            validator: this.compareToFirstPassword,\n                                        },\n                                    ],\n                                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n                            </Form.Item>\n                        </Row>\n                        <Row\n                            style={{\n                                position: 'absolute',\n                                left: 0,\n                                bottom: 0,\n                                width: '100%',\n                                borderTop: '1px solid #e9e9e9',\n                                padding: '10px 16px 0 10px',\n                                background: '#fff',\n                                textAlign: 'left',\n                            }}\n                        >\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Изменить\n                            </Button>\n                        </Row>\n                    </Form>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_password_form',\n    mapPropsToFields() {\n        return null;\n    },\n})(UserPasswordFormModel);\n","'use strict';\n\nimport React, { Component } from \"react\";\n\nimport { Form, Button, Row, Select, Col } from 'antd';\nconst { Option } = Select;\n\nimport Query from 'modules/app/component/core/query';\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 2 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 15 },\n    },\n};\n\nclass UserRolesFormModel extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        let ReactQueryObject = new Query({\n            pointApi: 'interface-users/role-select',\n        });\n\n        ReactQueryObject.send().then((result) => {\n            let option = [];\n            result.map((item) => {\n                option.push(<Option key={item.id}>{item.title}</Option>);\n            });\n\n            this.setState({\n                options: option,\n            });\n        });\n\n        this.state = {\n            options: [],\n            selected: []\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                values.operator_id = Number(this.props.user_id);\n\n                let rules = [];\n                values.roles.map((item) => {\n                    rules.push({id: Number(item)});\n                });\n\n                values.roles = rules;\n\n                this.props.actionEdit(values);\n            }\n        });\n    };\n\n    handleSelectedChange = value => {\n        this.setState({\n            selected: value,\n        });\n    };\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        return nextState.options !== this.state.options || nextState.selected !== this.state.selected;\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Row>\n                <Col span={24}>\n                    <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                        <Row gutter={16} style={{marginBottom:'50px'}}>\n                            <Form.Item label=\"Выбор ролей\" hasFeedback>\n                                {getFieldDecorator('roles', {\n                                    // rules: [\n                                    //     { required: true, message: 'Пожалуйста, выберите роль' }\n                                    // ],\n                                })(<Select\n                                    mode=\"multiple\"\n                                    style={{ width: '100%' }}\n                                    placeholder=\"Пожалуйста, выберите роли\"\n                                    onChange={this.handleSelectedChange}\n                                >\n                                    {this.state.options}\n                                </Select>)}\n                            </Form.Item>\n                        </Row>\n                        <Row\n                            style={{\n                                position: 'absolute',\n                                left: 0,\n                                bottom: 0,\n                                width: '100%',\n                                borderTop: '1px solid #e9e9e9',\n                                padding: '10px 16px 0 10px',\n                                background: '#fff',\n                                textAlign: 'left',\n                            }}\n                        >\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Изменить\n                            </Button>\n                        </Row>\n                    </Form>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default Form.create({\n    name: 'user_roles_form',\n    mapPropsToFields(props) {\n        let roles = [];\n        if (props.item.roles) {\n            props.item.roles.map((item) => {\n                roles.push(String(item.id));\n            });\n        }\n\n        return {\n            roles: Form.createFormField({\n                ...props.operator_code,\n                value: roles,\n            }),\n        };\n    },\n})(UserRolesFormModel);\n","import React from \"react\";\nimport {Link} from \"react-router\";\n\nimport { Menu, PageHeader, Layout, Icon } from 'antd';\nconst { Header } = Layout;\n\nexport default class HeaderPage extends React.Component {\n    state = {\n        current: 'mail',\n    };\n\n    handleClick = e => {\n        this.setState({\n            current: e.key,\n        });\n    };\n\n    render() {\n        return (\n            <Header>\n                <PageHeader\n                    title={<span><Icon\n                        className=\"trigger\"\n                        type={this.props.collapsed ? 'menu-unfold' : 'menu-fold'}\n                        onClick={this.props.toggle}\n                    />{this.props.title}</span>}\n                    subTitle={this.props.subTitle}\n                    extra={this.props.extra}\n                />\n\n                <Menu onClick={this.handleClick} mode=\"horizontal\">\n                    <Menu.Item key=\"team\">\n                        <Link  to={`/`}><Icon type=\"team\" />Пользователи</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"role\">\n                        <Link  to={`/role`}><Icon type=\"cluster\" />Роли</Link>\n                    </Menu.Item>\n                </Menu>\n            </Header>\n        )\n    }\n}","import React from \"react\";\nimport {Link} from \"react-router\";\n\nimport { Menu, Layout, Icon } from 'antd';\nconst {Sider } = Layout;\n\nexport default class MenuLeft extends React.Component {\n    render() {\n\n        let selectedKey = '1';\n        switch (this.props.page) {\n            case 'data':\n                selectedKey = '1';\n                break;\n            case 'password':\n                selectedKey = '3';\n                break;\n            case 'roles':\n                selectedKey = '4';\n                break;\n        }\n\n        return (\n            <Sider width={250} trigger={null} collapsible collapsed={this.props.collapsed}>\n                <div className=\"logo\">\n                    USER\n                </div>\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[selectedKey]}>\n                    <Menu.Item key=\"1\">\n                        <Link  to={`/user/edit/${this.props.user_id}/data`}><Icon type=\"idcard\" /><span>Данные пользователя</span></Link>\n                    </Menu.Item>\n                    {\n                        (false)\n                            ?\n                            <Menu.Item key=\"2\">\n                                <Link  to={`/user/edit/${this.props.user_id}/token`}><Icon type=\"idcard\" /><span>Токены</span></Link>\n                            </Menu.Item>\n                            : null\n                    }\n                    <Menu.Item key=\"3\">\n                        <Link  to={`/user/edit/${this.props.user_id}/password`}><Icon type=\"safety\" /><span>Изменение пароля</span></Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"4\">\n                        <Link  to={`/user/edit/${this.props.user_id}/roles`}><Icon type=\"control\" /><span>Управление ролями</span></Link>\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n        )\n    }\n}","'use strict';\n\nimport React from 'react';\nimport Helmet from \"react-helmet\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport {\n    userEdit as actionEdit,\n    userCurrent as actionCurrent,\n    userItem as actionUser\n} from '../../store/actions/user';\n\nimport { Layout, Spin } from 'antd';\nconst { Content } = Layout;\n\nimport Logout from 'modules/login/component/logout';\n\nimport UserDataForm     from \"../page/data/main\";\nimport UserPasswordForm from \"../page/password/main\";\nimport UserRolesForm    from \"../page/roles/main\";\n\nimport HeaderPage from \"./header_page\";\nimport MenuLeft from \"./menu_left\";\n\nclass Edit extends React.Component\n{\n    static defaultProps = {\n        params: {\n            user_id: null\n        }\n    };\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            collapsed: false,\n            loading: true,\n        };\n\n        this.props.actionCurrent();\n        this.props.actionUser({id: props.params.user_id});\n    }\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    render()\n    {\n        if (this.props.item && this.props.current) {\n            let isLoad = (this.props.current) ? false : true;\n\n            return (\n                <Layout>\n                    <MenuLeft\n                        collapsed={this.state.collapsed}\n                        page={this.props.params.page}\n                        user_id={this.props.params.user_id}\n                    />\n\n                    <Layout>\n                        <Helmet title=\"Users\"/>\n\n                        <HeaderPage\n                            title={this.props.item.operator_name}\n                            subTitle={`login: ${this.props.item.operator_login}`}\n                            collapsed={this.state.collapsed}\n                            toggle={this.toggle}\n                            extra={[\n                                <Logout key=\"logout-1\" />\n                            ]}\n                        />\n\n                        <Content className='user-edit'>\n                            <Spin tip=\"Загрузка...\" size=\"large\" spinning={isLoad}>\n                                {\n                                    (this.props.params.page === \"data\")\n                                        ?\n                                        <UserDataForm\n                                            title='Добавить пользователя'\n                                            user_id={this.props.params.user_id}\n                                            item={this.props.item}\n                                            actionEdit={this.props.actionEdit}\n                                            wrappedComponentRef={(form) => this.form = form}\n                                        />\n                                        : null\n                                }\n\n                                {\n                                    (this.props.params.page === \"password\")\n                                        ?\n                                        <UserPasswordForm\n                                            title='Добавить пользователя'\n                                            user_id={this.props.params.user_id}\n                                            actionEdit={this.props.actionEdit}\n                                            wrappedComponentRef={(form) => this.form = form}\n                                        />\n                                        : null\n                                }\n\n                                {\n                                    (this.props.params.page === \"roles\")\n                                        ?\n                                        <UserRolesForm\n                                            title='Добавить пользователя'\n                                            user_id={this.props.params.user_id}\n                                            item={this.props.item}\n                                            actionEdit={this.props.actionEdit}\n                                            wrappedComponentRef={(form) => this.form = form}\n                                        />\n                                        : null\n                                }\n                            </Spin>\n                        </Content>\n                    </Layout>\n                </Layout>\n            );\n        } else {\n            return null\n        }\n    }\n}\n\nexport default connect(\n    (state) => {\n        return {\n            access: state.user.access,\n            action: state.user.action,\n            current: state.user.current,\n            item: state.user.item.data,\n        };\n    },\n    (dispatch) => bindActionCreators({actionCurrent, actionUser, actionEdit, dispatch}, dispatch)\n)(Edit);\n","import React, {Component} from 'react';\nimport {Provider} from 'react-redux';\n\nimport UserStore from './store/state';\n\nimport Index from './component/main/index';\n\nimport './less/index.less';\n\nclass EditMain extends Component {\n    render() {\n        return (\n            <Provider store={UserStore}>\n                <Index\n                    header={this.props.header}\n                    location={this.props.location}\n                    params={this.props.params}\n                />\n            </Provider>\n        );\n    }\n}\n\nexport default EditMain;"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./modules/app/main.jsx","webpack:///./modules/app/component/core/query.js","webpack:///./modules/app/component/core/filters.js","webpack:///./modules/app/component/pagination.jsx","webpack:///./modules/app/component/filter/filter.jsx","webpack:///./modules/app/component/filter/sorting.jsx","webpack:///./modules/app/component/filter/search.jsx","webpack:///./modules/app/component/filter/text.jsx","webpack:///./modules/app/component/table/table.jsx","webpack:///./modules/app/core.js","webpack:///./modules/app/component/core/middleware.js"],"names":["Inbox","props","children","className","propTypes","PropTypes","element","isRequired","fetch","require","Query","options","config","domain","api","_fetch","callback","send","then","json","Function","status","msg","_success","result","_error","_errorMsg","url","type","get","data","_getParams","server","setPoint","pointApi","prefix","method","headers","credentials","post","body","JSON","stringify","_getUrl","fetchParam","_getFetchParam","response","error","statusText","_requestXdomainToken","message","success","param","str","map","item","push","join","Object","keys","key","encodeURIComponent","undefined","this","setUrl","auth","xhr","XMLHttpRequest","XDomainRequest","open","withCredentials","self","onload","_loginPage","parse","responseText","arr","split","domainAuth","formData","FormData","append","xdomainToken","location","reload","page","login","Filters","isUpdate","params","header","nextHeader","query","sort","appConfig","history","pathname","action","Item","to","string","object","Items","total","pageSize","page_size","current","onChange","onQuery","itemRender","originalElement","func","Index","React","memo","Array","isArray","parseInt","page_url","Filter","classes","classNames","Sorting","onClick","ev","up","down","sortArr","target","parentElement","sortClass","sortId","id","querySelectorAll","forEach","querySelector","style","display","classList","remove","add","classElement","focus","name","fsort","aria-controls","icon","Search","useState","maxWidth","minWidth","textInput","inputRef","createRef","useEffect","value","placeholder","parent","input","insertAdjacentHTML","setAttribute","ref","onFocus","onBlur","length","textContent","model","Text","Table","overlayClassName","striped","middle","responsive","thead","i","defaultProps","middlewareAction","store","actions","start","failure","promise","constructor","dispatch"],"mappings":"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","file":"app.js?hash=b76d62eb03820c9e6423","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport \"modules/app/css/animate.css\";\n\nimport \"antd/dist/antd.css\";\n\nimport './css/main.less';\n\nconst Inbox = (props) => {\n    const { children } = props;\n\n    return (\n      <div className=\"theme-user\">\n          {children}\n      </div>\n    );\n};\n\nInbox.propTypes = {\n    children: PropTypes.element.isRequired,\n};\n\nexport default Inbox;\n","'use strict';\n\nimport config from 'config';\n\nconst fetch = require('isomorphic-fetch');\n\nexport default class Query\n{\n    static post = 'POST';\n    static get  = 'GET';\n\n    type     = 'POST';\n    data     = null;\n    pointApi = null;\n    domain   = config.domain.api;\n\n    constructor(options) {\n        if (options.type !== undefined) {\n            this.type = options.type;\n        }\n\n        if (options.data !== undefined) {\n            this.data = options.data;\n        }\n\n        if (options.pointApi !== undefined) {\n            this.pointApi = options.pointApi;\n        }\n\n        if (options.domain !== undefined) {\n            this.domain = options.domain;\n        }\n    }\n\n    send = () => {\n        return this._fetch();\n    };\n\n    result = (callback = null) => {\n        return this.send().then((json) => {\n            if (callback instanceof Function) {\n                return callback(json);\n            } else {\n                if (json.status === \"ok\") {\n                    if (json.msg) {\n                        this._success(json.msg);\n                    }\n\n                    if (json.result) {\n                        return json.result;\n                    } else {\n                        return true;\n                    }\n                } else if (json.msg) {\n                    this._error(this._errorMsg(json.msg));\n\n                    return false;\n                }\n            }\n        });\n    };\n\n    _getUrl = () => {\n        let url    = '';\n\n        if (this.type === Query.get) {\n            let get = null;\n\n            if (this.data) {\n                get = this._getParams(this.data);\n            }\n\n            url = get ? this.domain + config.server.setPoint + this.pointApi + config.server.prefix + get : this.domain + config.server.setPoint + this.pointApi;\n        } else {\n            url = this.domain + config.server.setPoint + this.pointApi;\n        }\n\n        return url;\n    };\n\n    _getFetchParam = () => {\n        let fetchParam = {};\n\n        if (this.type === Query.get) {\n            fetchParam = {\n                method: Query.get,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include'\n            }\n        } else {\n            fetchParam = {\n                method: Query.post,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(this.data),\n                credentials: \"include\"\n            }\n        }\n\n        return fetchParam;\n    };\n\n    _fetch = () => {\n        const url      = this._getUrl();\n        let fetchParam = this._getFetchParam();\n\n        return fetch(url, fetchParam).then((response) => {\n            if (response.status === 200) {\n                return response.json();\n            } else if (response.status === 500) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else if (response.status === 404) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else if (response.status === 417) {\n                const res = response.json();\n                res.then((data) => {\n                    if (!data.status) {\n                        this._error(this._errorMsg(data.msg));\n                    } else {\n                        this._error(config.error[response.status]);\n                    }\n                });\n                throw response.statusText;\n            } else if (response.status === 423) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else if (response.status === 401) {\n                this._requestXdomainToken(url);\n            } else if (response.status === 403) {\n                this._error(config.error[response.status]);\n                throw response.statusText;\n            } else {\n                throw response.statusText;\n            }\n        });\n    };\n\n    _error = message => {\n        config.message.error(message);\n    };\n\n    _success = message => {\n        config.message.success(message);\n    };\n\n    _errorMsg = param => {\n        if (typeof(param) === 'string') {\n            return param;\n        } else {\n            let str = ['<ul class=\"list-unstyled\">'];\n            param.map((item) =>\n                str.push('<li>' + item + '</li>')\n            );\n            str.push('</ul>');\n\n            return str.join(' ');\n        }\n    };\n\n    _getParams = data => {\n        return Object.keys(data).map(key => `${key}=${encodeURIComponent(data[key])}`).join('&');\n    };\n\n    _requestXdomainToken(setUrl) {\n        //We request a token on the authorization server\n        const url = config.domain.auth + config.server.setPoint + '/auth/get-xdomain-token';\n        let XHR = (\"onload\" in new XMLHttpRequest()) ? XMLHttpRequest : XDomainRequest;\n        let xhr = new XHR();\n        xhr.open('POST', url, true);\n        xhr.withCredentials = true;\n        xhr.send();\n\n        let self = this;\n        xhr.onload = function () {\n            switch (this.status) {\n                case 401:// User is not authorized on the authorization server\n                    self._loginPage();\n                    break;\n                case 200:\n                    let result = JSON.parse(this.responseText);\n                    let arr = setUrl.split(\"/\");\n                    let domain = arr[0] + \"//\" + arr[2];\n                    let domainAuth = domain + config.server.setPoint + 'auth/login';\n\n                    let formData = new FormData();\n                    formData.append('xdomainToken', result.xdomainToken);\n                    let xhr = new XMLHttpRequest();\n                    xhr.open('POST', domainAuth, true);\n                    xhr.withCredentials = true;\n                    xhr.send(formData);\n\n                    xhr.onload = function () {\n                        switch (this.status) {\n                            case 401:// User is not authorized\n                                self._loginPage();\n                                break;\n                            case 200:\n                                location.reload();\n                                break;\n                        }\n                    };\n                    break;\n            }\n        };\n    }\n\n    _loginPage() {\n        config.page.login();\n    }\n}\n","'use strict';\n\nimport appConfig from '../../../../config';\n\nexport default class Filters\n{\n    params     = [];\n    query      = null;\n    nextHeader = null;\n    header     = null;\n    page       = null;\n    callback   = null;\n    action   = null;\n\n    constructor(options) {\n        if (options.params !== undefined) {\n            this.params = options.params;\n        }\n\n        if (options.query !== undefined) {\n            this.query = options.query;\n        }\n\n        if (options.nextHeader !== undefined) {\n            this.nextHeader = options.nextHeader;\n        }\n\n        if (options.header !== undefined) {\n            this.header = options.header;\n        }\n\n        if (options.page !== undefined) {\n            this.page = options.page;\n        }\n\n        if (options.callback !== undefined) {\n            this.callback = options.callback;\n        }\n\n        if (options.action !== undefined) {\n            this.action = options.action;\n        }\n    }\n\n    isUpdate = () => {\n        let isUpdate = false;\n\n        this.params.map(param => {\n            if (this.header[param] !== this.nextHeader[param]) {\n                this.query[param] = this.nextHeader[param];\n                this.query.page = 1;\n\n                delete this.query.sort;\n\n                appConfig.history.push({pathname: this.page, query: this.query});\n\n                if (this.callback) {\n                    this.callback();\n                }\n\n                if (this.action) {\n                    this.action();\n                }\n\n                isUpdate = true;\n            } else if (this.query[param] === '') {\n                delete this.query[param];\n                appConfig.history.push({pathname: this.page, query: this.query});\n            }\n        });\n\n        return isUpdate;\n    };\n}\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router';\n\nimport PaginationAntd from 'antd/lib/pagination';\n\nconst Item = props => {\n    return (\n      <Link query={props.query} to={{ pathname: props.url, query: props.query }} className={props.className}>{props.children}</Link>\n    )\n};\nItem.propTypes = {\n    type: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    query: PropTypes.object.isRequired,\n    className: PropTypes.string,\n};\n\n\n\nconst Items = props => {\n    function handleChange(page, pageSize) {\n        props.onQuery({page, ...props.query});\n    }\n\n    const itemRender = (current, type, originalElement) => {\n        return <Item\n          type={type}\n          className={originalElement.props.className}\n          children={originalElement.props.children}\n          query={{page: current, ...props.query}}\n          url={props.url}\n        />;\n    };\n\n    return (\n      <PaginationAntd\n        total={props.total}\n        pageSize={props.page_size}\n        current={props.current}\n        onChange={handleChange}\n        itemRender={itemRender}\n      />\n    );\n};\nItems.propTypes = {\n    url: PropTypes.string.isRequired,\n    onQuery: PropTypes.func.isRequired,\n};\n\nconst Index = React.memo(props => {\n    const query = Array.isArray(props.data.query) ? {} : props.data.query;\n\n    if (props.data.total >= props.data.page_size) {\n        return (\n          <Items\n            key='paginate-1'\n            total={props.data.total}\n            page_size={props.data.page_size}\n            current={parseInt(props.data.current)}\n            query={query}\n            page_url={props.data.page_url}\n            url={props.url ? props.url : '/'}\n\n            onQuery={props.onQuery}\n          />\n        );\n    } else {\n        return null\n    }\n});\n\nIndex.propTypes = {\n    url: PropTypes.string.isRequired,\n    onQuery: PropTypes.func.isRequired,\n};\n\nexport default Index;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport classNames from \"classnames\";\n\nimport \"./lib/filterdata/table.filter.css\";\n\nconst Filter = props => {\n    const classes  = classNames('row-table-filter', props.className);\n\n    return (<div className={classes}>{props.children}</div>)\n};\n\nexport default Filter;\n","'use strict';\n\nimport React from 'react';\nimport Button from 'antd/lib/button';\n\nconst Sorting = props => {\n    let classElement = 'cell-2';\n\n    const handlerClick = (ev) => {\n        let up, down;\n        let sortArr = [];\n\n        let element   = ev.target.parentElement;\n        let sortClass = element.className;\n        let sortId    = element.id;\n\n        if (typeof(sortId) !== 'undefined') {\n            let parent = ev.target.parentElement.parentElement.parentElement.parentElement;\n            let cell   = parent.querySelectorAll(`div.${classElement}`);\n\n            cell.forEach((item) => {\n                if (item.id !== sortId) {\n\n                    up = item.querySelector('.sorted-up');\n                    down = item.querySelector('.sorted-down');\n\n                    up.style.display   = \"inline\";\n                    down.style.display = \"inline\";\n\n                    item.classList.remove(\"sorting_desc\",\"sorting_asc\");\n                    item.classList.add(\"sorting\");\n                }\n            });\n\n            switch(sortClass) {\n                case classElement + ' sorting':\n\n                    up = element.querySelector('.sorted-up');\n                    down = element.querySelector('.sorted-down');\n\n                    up.style.display   = \"none\";\n                    down.style.display = \"inline\";\n\n                    element.classList.remove(\"sorting\");\n                    element.classList.add(\"sorting_desc\");\n\n                    down.focus();\n\n                    sortArr.push({name : props.id, status : 'desc'});\n                    break;\n                case classElement + ' sorting_asc':\n\n                    up = element.querySelector('.sorted-up');\n                    down = element.querySelector('.sorted-down');\n\n                    up.style.display   = \"none\";\n                    down.style.display = \"inline\";\n\n                    element.classList.remove(\"sorting_asc\");\n                    element.classList.add(\"sorting_desc\");\n\n                    down.focus();\n\n                    sortArr.push({name : props.id, status : 'desc'});\n                    break;\n                case classElement + ' sorting_desc':\n                    up = element.querySelector('.sorted-up');\n                    down = element.querySelector('.sorted-down');\n\n                    up.style.display   = \"inline\";\n                    down.style.display = \"none\";\n\n                    element.classList.remove(\"sorting_desc\");\n                    element.classList.add(\"sorting_asc\");\n\n                    up.focus();\n\n                    sortArr.push({name : props.id, status :'asc'});\n                    break;\n            }\n\n            props.fsort(sortArr);\n        }\n    };\n\n    return (\n      <div className=\"cell-2 sorting\" onClick={handlerClick} id={props.id} aria-controls=\"DataTables_Table_1\">\n          <Button type=\"link\" icon=\"caret-up\" className=\"sorted-up\" />\n          <Button type=\"link\" icon=\"caret-down\" className=\"sorted-down\" />\n      </div>\n    )\n};\n\nexport default Sorting;\n","'use strict';\n\nimport React, {useState, useEffect} from 'react';\nimport Input from 'antd/lib/input';\n\nconst Search = props => {\n    const [maxWidth, setMaxWidth] = useState((props.maxWidth) ? props.maxWidth : 0);\n    const [minWidth, setMinWidth] = useState((props.minWidth) ? props.minWidth : 0);\n\n    const textInput = props.inputRef ? props.inputRef : React.createRef();\n\n    useEffect(() => {\n        if (props.value) {\n            let placeholder = textInput.current.props.placeholder;\n            const parent = textInput.current.input.parentElement;\n\n            let is_placeholder = (parent.querySelector(\".placeholder\") === null) ? false : true;\n\n            if (!is_placeholder) {\n                parent.insertAdjacentHTML('beforeend', '<div class=\"placeholder\">' + placeholder + '</div>');\n                textInput.current.input.placeholder = '';\n\n                textInput.current.input.setAttribute(\"style\", \"border-bottom: 1px solid #ac2925;\");\n            }\n        }\n    }, [props.value]);\n\n    function handlerFocus(ev) {\n        const { placeholder, parentElement } = ev.target;\n\n        let is_placeholder = (parentElement.querySelector(\".placeholder\") === null) ? false : true;\n        if (!is_placeholder) {\n            //beforebegin, afterbegin, beforeend, afterend\n            parentElement.insertAdjacentHTML('beforeend', '<div class=\"placeholder\">' + placeholder + '</div>');\n            ev.target.placeholder = '';\n        }\n\n        ev.target.setAttribute(\"style\", \"border-bottom: 1px solid #ac2925;\");\n    }\n\n    function handlerBlur(ev) {\n        const { value, parentElement } = ev.target;\n\n        if (value.length === 0) {\n            let is_placeholder = (parentElement.querySelector(\".placeholder\") === null) ? false : true;\n            if (is_placeholder) {\n                let placeholder = parentElement.querySelector(\".placeholder\").textContent;\n                ev.target.placeholder = placeholder;\n                parentElement.querySelector(\".placeholder\").remove();\n            }\n\n            ev.target.setAttribute(\"style\", \"border-bottom: 1px solid #e5e6e7;\");\n        }\n    }\n\n    function handleChange(ev) {\n        const { value } = ev.target;\n        props.callback(props.model, value);\n    }\n\n    let style = {};\n    if (maxWidth) {\n        style.minWidth = maxWidth + 'px'\n    }\n\n    if (maxWidth) {\n        style.maxWidth = minWidth + 'px'\n    }\n\n    return (\n      <div className=\"cell\" style={style}>\n          <Input key=\"input-search\" ref={textInput} value={props.value} onFocus={handlerFocus} onBlur={handlerBlur} onChange={handleChange} className=\"filter-search\" placeholder={props.placeholder} />\n      </div>\n    )\n};\n\nexport default Search;","'use strict';\n\nimport React from 'react';\n\nconst Text = props => {\n  return (\n    <div className='cell'>\n      <div className='filter-text'>{props.children}</div>\n    </div>\n  );\n};\n\nexport default Text;\n","'use strict';\n\nimport React from 'react';\nimport classNames from \"classnames\";\n\nimport './css';\n\nconst Table = props => {\n    const classes  = classNames(props.className, props.overlayClassName, {\n        'table-striped': props.striped,\n        'table-middle': props.middle,\n        'table-responsive': props.responsive,\n    });\n\n    return (\n      <table className={classes}>\n          <thead className='table-thead'>\n          <tr>\n              {\n                  (props.thead) ?\n                    props.thead.map((item, i) => item)\n                    : null\n              }\n          </tr>\n          </thead>\n          <tbody>\n          {props.children}\n          </tbody>\n      </table>\n    )\n};\n\nTable.defaultProps = {\n    striped: true,\n    middle: true,\n    responsive: true,\n    className: 'table table-filter',\n    overlayClassName: null\n};\n\nexport default Table;\n","export { default as Query } from './component/core/query';\nexport { default as Filters } from './component/core/filters';\nexport { default as Pagination } from './component/pagination';\nexport { default as Filter } from './component/filter/filter';\nexport { default as Sorting } from './component/filter/sorting';\nexport { default as Search } from './component/filter/search';\nexport { default as Text } from './component/filter/text';\nexport { default as Table } from './component/table/table';\nexport { default as Logout } from 'modules/login/component/logout';","'use strict';\n\nconst middlewareAction = (store, action) => {\n    const [start, success, failure] = action.actions;\n\n    if (action.promise.constructor.name === 'Promise') {\n        //LOADING\n        store.dispatch({\n            type: start,\n            data: true\n        });\n\n        action.promise.then((data) => {\n            //LOADED\n            store.dispatch({\n                type: success,\n                data,\n            });\n\n            //LOADING\n            store.dispatch({\n                type: start,\n                data: false\n            });\n        }, (error) => {\n            //FAILURE\n            store.dispatch({\n                type: failure,\n                error,\n            });\n        });\n    } else {\n        store.dispatch({\n            type: start,\n            data: true\n        });\n\n        store.dispatch({\n            type: success,\n            data: action.promise\n        });\n\n        //LOADING\n        store.dispatch({\n            type: start,\n            data: false\n        });\n    }\n};\n\nexport default middlewareAction;"],"sourceRoot":""}
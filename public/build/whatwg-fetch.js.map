{"version":3,"sources":["webpack:///../node_modules/whatwg-fetch/fetch.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Headers","Request","Response","DOMException","fetch","support","searchParams","self","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","prototype","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","headers","this","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","then","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","input","options","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill"],"mappings":"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","file":"whatwg-fetch.js?hash=66e3ba0664643e685f45","sourcesContent":["var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n"],"sourceRoot":""}